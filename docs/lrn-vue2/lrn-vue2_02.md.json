["```js\nvar obj = {}; \nvar text = ''; \n\n```", "```js\nvar h2 = document.getElementsByTagName('h2')[0]; \n\n```", "```js\nObject.defineProperty(obj, 'text', { \n  get: function () { \n    return text; \n  }, \n  set: function (newVal) { \n    text = newVal;  \n    **h2.innerHTML = text;** \n  } \n}); \n\n```", "```js\nif (value !== this.value ||... \n\n```", "```js\nthis.cb.call(this.vm, value, oldValue); \n\n```", "```js\n    update: function update(value) { \n      **this.el[this.attr] = _toString(value);** \n    } \n\n```", "```js\nrender () { \n  return ( \n    <ul> \n    {items.map(item => \n    <li className={item.checked && 'removed'}> \n      <div className='checkbox'> \n        <input type='checkbox' checked={item.checked}>          \n        { item.text } \n      </div> \n    </li> \n    )} \n    </ul> \n  ) \n}); \n\n```", "```js\n<template> \n<ul> \n  <li v-for=\"item in items\" :class=\"{ 'removed': item.checked }\"> \n    <div class=\"checkbox\"> \n    <label> \n    <input type=\"checkbox\" v-model=\"item.checked\"> {{ item.text }} \n  </label> \n  </div> \n  </li> \n</ul> \n</template>\n```", "```js\n<style **scoped**> \n</style> \n\n```", "```js\nvar CustomComponent = Vue.extend({...}) \n\n```", "```js\nvar data = { \n  items: [{ text: 'Bananas', checked: true },    \n          { text: 'Apples', checked: false }], \n  title: 'My Shopping List', \n  newItem: '' \n}; \n\nnew Vue({ \n  el: '#app', \n  data: data, \n  methods: { \n    addItem: function () { \n      var text; \n\n      text = this.newItem.trim(); \n      if (text) { \n        this.items.push({ \n          text: text, \n          checked: false \n        }); \n        this.newItem = ''; \n      } \n    } \n  } \n}); \n\n```", "```js\nvar data = { \n  items: [{ text: 'Bananas', checked: true },\n          { text: 'Apples', checked: false }], \n  title: 'My Shopping List', \n  newItem: '' \n}; \n\n/** \n * Declaring components \n */ \nvar **ItemsComponent** = Vue.extend({ \n  data: function () { \n    return data; \n  }, \n  template: '<ul>' + \n  '           <li v-for=\"item in items\"\n              :class=\"{ 'removed': item.checked }\">' + \n  '             <div class=\"checkbox\">' + \n  '               <label>' + \n  '                 <input type=\"checkbox\"                       \n                    v-model=\"item.checked\"> {{ item.text }}' + \n  '               </label>' + \n  '             </div>' + \n  '           </li>' + \n  '         </ul>' \n}); \nvar **ChangeTitleComponent** = Vue.extend({ \n  data: function () { \n    return data; \n  }, \n  template: '<input v-model=\"title\"/>' \n}); \nvar **AddItemComponent** = Vue.extend({ \n  data: function () { \n    return data; \n  }, \n  methods: { \n    addItem: function () { \n      var text; \n\n      text = this.newItem.trim(); \n      if (text) { \n        this.items.push({ \n          text: text, \n          checked: false \n        }); \n        this.newItem = \"\"; \n      } \n    } \n  }, \n  template: \n  '<div class=\"input-group\">' + \n    '<input v-model=\"newItem\" @keyup.enter=\"addItem\"        \n     placeholder=\"add shopping list item\" type=\"text\"       \n     class=\"form-control\">'  + \n    '<span class=\"input-group-btn\">'  + \n    '  <button @click=\"addItem\" class=\"btn btn-default\"           \n       type=\"button\">Add!</button>'  + \n    '</span>'  + \n  '</div>' \n}); \n\n/** \n * Registering components \n */ \n**Vue.component('items-component', ItemsComponent); \nVue.component('change-title-component', ChangeTitleComponent); \nVue.component('add-item-component', AddItemComponent);** \n/** \n * Instantiating a Vue instance \n */ \nnew Vue({ \n  el: '#app', \n  data: data \n}); \n\n```", "```js\n<div id=\"app\" class=\"container\"> \n  <h2>{{ title }}</h2> \n  **<add-item-component></add-item-component> \n  <items-component></items-component>** \n  <div class=\"footer\"> \n    <hr/> \n    <em>Change the title of your shopping list here</em> \n    **<change-title-component></change-title-component>** \n  </div> \n</div> \n\n```", "```js\nVue.directive('my-directive', { \n  bind: function () { \n    // do the preparation work on element binding \n  }, \n  update: function (newValue, oldValue) { \n    // do something based on the updated value \n  }, \n  unbind: function () { \n    // do the clean-up work \n  } \n}) \n\n```", "```js\nVue.directive('my-directive', function (el, binding) { \n  // do something with binding.value \n}) \n\n```", "```js\nVue.directive('square', function (el, binding) { \n  el.innerHTML = Math.pow(binding.value, 2); \n}); \n\n```", "```js\n<div v-square=\"item\"></div> \n\n```", "```js\nexport default { \n  **install**: function (Vue) { \n    Vue.directive('square', function (el, binding) { \n      el.innerHTML = Math.pow(binding.value, 2); \n    }); \n    Vue.directive('sqrt', function (el, binding) { \n      el.innerHTML = Math.sqrt(binding.value); \n    }); \n  } \n}; \n\n```", "```js\nimport Vue from 'vue/dist/vue.js'; \nimport VueMathPlugin from './VueMathPlugin.js'; \n\n**Vue.use(VueMathPlugin);** \n\nnew Vue({ \n  el: '#app', \n  data: { item: 49 } \n}); \n\n```", "```js\n<body> \n  <div id=\"app\"> \n    <input v-model=\"item\"/> \n    <hr> \n    <div>Square: <span **v-square=\"item\"**></span></div> \n    <div>Root: <span **v-sqrt=\"item\"**></span></div> \n  </div> \n  <script src=\"main.js\"></script> \n</body> \n\n```", "```js\n{ \n  \"name\": \"vue-custom-plugin\", \n  \"scripts\": { \n    \"build\": **\"browserify script.js -o main.js -t\n       [ babelify --presets [ es2015 ] ]\"** \n  }, \n  \"version\": \"0.0.1\", \n  \"devDependencies\": { \n    \"babel-preset-es2015\": \"^6.9.0\", \n    \"babelify\": \"^7.3.0\", \n    \"browserify\": \"^13.0.1\", \n    \"vue\": \"^2.0.3\" \n  } \n} \n\n```", "```js\n**npm install**\n**npm run build**\n\n```", "```js\nimport Vuex from 'vuex'; \nimport Vue from 'vue'; \n\nVue.use(Vuex); \n\nvar store = new Vuex.Store({ \n  state: { <...> }, \n  mutations: { <...> } \n}); \n\n```", "```js\nnew Vue({ \n  components: components, \n  store: store \n}); \n\n```", "```js\n**npm install -g vue-cli**\n\n```", "```js\n**vue init webpack**\n**vue init webpack-simple**\n**vue init browserify**\n**vue init browserify-simple**\n**vue init simple**\n\n```", "```js\n<script src=\"vue.js\"></script> \n\n```", "```js\n  <div id=\"app\"> \n    <h1>{{ message }}</h1> \n  </div> \n  **<script src=\"vue.js\"></script>** \n  <script> \n     var data = { \n       message: 'Learning Vue.js' \n     }; \n\n     new Vue({ \n       el: '#app', \n       data: data \n     }); \n  </script> \n\n```", "```js\n<script src=\"  https://cdnjs.cloudflare.com/ajax/libs/vue/2.0.3/vue.js\"></script> \n\n```", "```js\n**# latest stable release**\n**bower install vue**\n\n```", "```js\n<script src=\"bower_components/vue/dist/vue.js\"></script> \n\n```", "```js\n{ \n  \"manifest_version\": 2, \n  \"name\": \"Learning Vue.js\", \n  \"version\": \"1.0\", \n  \"minimum_chrome_version\": \"23\", \n  \"icons\": { \n    \"16\": \"icon_16.png\", \n    \"128\": \"icon_128.png\" \n  }, \n  \"app\": { \n    \"background\": { \n      \"scripts\": [\"main.js\"] \n    } \n  } \n} \n\n```", "```js\nchrome.app.runtime.onLaunched.addListener(function() { \n  // Center the window on the screen. \n  var screenWidth = screen.availWidth; \n  var screenHeight = screen.availHeight; \n  var width = 500; \n  var height = 300; \n\n  chrome.app.window.create(**\"index.html\"**, { \n    id: \"learningVueID\", \n    outerBounds: { \n      width: width, \n      height: height, \n      left: Math.round((screenWidth-width)/2), \n      top: Math.round((screenHeight-height)/2) \n    } \n  }); \n}); \n\n```", "```js\n<html lang=\"en\"> \n<head> \n    <meta charset=\"UTF-8\"> \n    <title>Vue.js - CSP-compliant</title> \n</head> \n<body> \n<div id=\"app\"> \n    <h1>{{ message }}</h1> \n</div> \n<script src=\"assets/vue.js\"></script> \n<script src=\"assets/app.js\"></script> \n</body> \n</html> \n\n```", "```js\nvar data = { \n  message: \"Learning Vue.js\" \n}; \n\nnew Vue({ \n  el: \"#app\", \n  data: data \n}); \n\n```", "```js\n**# latest stable release**\n**npm install vue**\n**# latest stable CSP-compliant release**\n**npm install vue@csp**\n\n```", "```js\n**var Vue = require(\"vue\");**\n\n```", "```js\n**import Vue from \"vue\";**\n\n```", "```js\n<html lang=\"en\"> \n<head> \n  <meta charset=\"UTF-8\"> \n  <title>Vue.js - NPM Installation</title> \n</head> \n<body> \n  <div id=\"app\"> \n    <h1>{{ message }}</h1> \n  </div> \n  <script src=**\"main.js\"**></script> \n</body> \n</html> \n\n```", "```js\n**var Vue = require('vue/dist/vue.js');** \n\nvar data = { \n  message: 'Learning Vue.js' \n}; \n\nnew Vue({ \n  el: '#app', \n  data: data \n}); \n\n```", "```js\n**npm install vue --save-dev**\n**npm install browserify --save-dev**\n\n```", "```js\n{ \n  \"name\": \"learningVue\", \n  \"scripts\": { \n    \"build\": \"browserify script.js -o main.js\" \n  }, \n  \"version\": \"0.0.1\", \n  \"devDependencies\": { \n    \"browserify\": \"^13.0.1\", \n    \"vue\": \"^2.0.3\" \n  } \n} \n\n```", "```js\n**npm run build**\n\n```", "```js\n**# install vue-cli**\n**$ npm install -g vue-cli**\n**# create a new project**\n**$ vue init webpack learn-vue**\n**# install and run**\n**$ cd learn-vue**\n**$ npm install**\n**$ npm run dev** \n\n```", "```js\n<script> \nexport default { \n  data () { \n    return { \n   msg: **\"Learning Vue.js\"** \n    } \n  } \n} \n</script> \n\n```", "```js\n<template> \n  <div id=\"app\"> \n    <hello></hello> \n  </div> \n</template> \n\n```", "```js\n**cd <APP-PATH>/node_modules**\n**rm -rf vue**\n**git clone https://github.com/vuejs/vue.git**\n**cd vue**\n**npm install**\n**npm run build**\n\n```", "```js\n**cd <APP-PATH>**\n**npm run build**\n\n```", "```js\nconst defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g  \n\n```", "```js\nconst defaultTagRE = /\\%\\%((?:.|\\n)+?)\\%\\%/g  \n\n```", "```js\n<div id=\"app\"> \n  <h1>**%% message %%**</h1> \n</div> \n\n```", "```js\n**vue init webpack shopping-list**\n\n```", "```js\n<template>\n  <div id=\"app\">\n  </div>\n</template>\n\n<script>\n</script>\n\n<style>\n</style>\n\n```", "```js\n<script> \n  **notDefinedVariable = 5;** \n</script> \n\n```", "```js\nmodule.exports = { \n  'default e2e tests': function (browser) { \n    browser \n    .url('http://localhost:8080') \n      .waitForElementVisible('#app', 5000) \n      .end() \n  } \n} \n\n```"]