- en: Chapter 9. What Is Next?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。接下来是什么？
- en: In the previous chapter, we made our applications go live by deploying them
    to a server and making them available to the world. We have also guaranteed continuous
    integration and continuous deployment of our applications. This means that every
    time we commit changes performed on the applications, they will automatically
    be tested and deployed.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们通过将应用程序部署到服务器并使其对外可用，使我们的应用程序上线。我们还保证了应用程序的持续集成和持续部署。这意味着每当我们提交对应用程序的更改时，它们将自动进行测试和部署。
- en: 'It seems that our journey in this book has finished. But, in fact, it has just
    started. After all we have discovered and learned, there is still so much to do!
    In this chapter, we will wrap up everything we have learned so far and see what
    we still have to learn and what nice things we still can do to reach the level
    of awesomeness of our applications. So, in this chapter, we will do the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来我们在这本书中的旅程已经结束了。但实际上，它才刚刚开始。尽管我们已经发现和学到了很多，但仍有很多工作要做！在本章中，我们将总结我们迄今为止学到的一切，看看我们还有什么需要学习，以及我们还可以做些什么来提升我们应用程序的酷炫程度。因此，在本章中，我们将做以下事情：
- en: Wrap up everything we have learned so far
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 总结我们迄今为止学到的一切
- en: Make a list of follow up things
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出后续事项
- en: The journey so far
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 迄今为止的旅程
- en: We have been on a big journey so far, and it's time to sum up what we have done
    and what we have learned.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 迄今为止，我们已经走过了一段很长的旅程，现在是时候总结我们所做的和所学到的。
- en: In [Chapter 1](part0016.xhtml#aid-F8901 "Chapter 1. Going Shopping with Vue.js"),
    *Going Shopping with Vue.js*, we had our first date with Vue.js. We talked about
    what Vue.js is, how it was created, and what it does and saw some basic examples.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](part0016.xhtml#aid-F8901 "第1章。使用Vue.js去购物")*使用Vue.js去购物*中，我们与Vue.js有了第一次约会。我们谈论了Vue.js是什么，它是如何创建的，它的作用是什么，并看了一些基本示例。
- en: In [Chapter 2](part0027.xhtml#aid-PNV61 "Chapter 2. Fundamentals – Installing
    and Using"), *Fundamentals - Installing and Using*, we went deep into behind the
    scenes of Vue.js. We learned about MVVM architectural pattern, we saw how does
    Vue.js work, and we touched different aspects of Vue.js such as *components*,
    *directives*, *plugins*, and application *state*. We learned different ways of
    installing Vue.js, starting from using a simple standalone compiled script, passing
    by using the CDN version, NPM version, and going toward using the development
    version of Vue.js being able to not only use it but also contribute to its codebase .
    We learned how to debug and how to scaffold Vue.js application using `Vue-cli`.
    We have even created a really simple Chrome application using CSP-compliant version
    of Vue.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](part0027.xhtml#aid-PNV61 "第2章。基础知识-安装和使用")*基础知识-安装和使用*中，我们深入了解了Vue.js的幕后情况。我们了解了MVVM架构模式，看到了Vue.js的工作原理，并接触了Vue.js的不同方面，如*组件*、*指令*、*插件*和应用程序*状态*。我们学习了安装Vue.js的不同方式，从使用简单的独立编译脚本开始，通过使用CDN版本、NPM版本，然后使用Vue.js的开发版本，不仅可以使用它，还可以为其代码库做出贡献。我们学会了如何调试以及如何使用`Vue-cli`搭建Vue.js应用程序。我们甚至使用了符合CSP标准的Vue的简单Chrome应用程序。
- en: In [Chapter 3](part0036.xhtml#aid-12AK81 "Chapter 3. Components – Understanding
    and Using"), *Components - Understanding and Using*, we put our hands deep inside
    the component's system. We learned how to define Vue components, how component's
    scope works, and how do components relate to each other, and we started using
    single-file components in the applications that we have bootstrapped before.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第3章](part0036.xhtml#aid-12AK81 "第3章。组件-理解和使用")*组件-理解和使用*中，我们深入了解了组件系统。我们学习了如何定义Vue组件，组件作用域的工作原理，以及组件之间的关系，我们开始在之前引导的应用程序中使用单文件组件。
- en: In [Chapter 4](part0046.xhtml#aid-1BRPS1 "Chapter 4. Reactivity – Binding Data
    to Your Application"), *Reactivity - Binding Data to Your Application*, we went
    deep into data binding and reactivity with Vue.js. We learned how to use directives,
    expressions, and filters. We brought data binding to the applications developed
    in the initial chapters and made them interactive, thanks to the reactivity fashion
    of Vue.js.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第4章](part0046.xhtml#aid-1BRPS1 "第4章。反应性-将数据绑定到您的应用程序")中，*反应性-将数据绑定到您的应用程序*，我们深入研究了Vue.js的数据绑定和反应性。我们学习了如何使用指令、表达式和过滤器。我们将数据绑定引入了最初章节中开发的应用程序，并且由于Vue.js的反应性方式，使它们变得交互式。
- en: In [Chapter 5](part0052.xhtml#aid-1HIT82 "Chapter 5. Vuex – Managing State in
    Your Application"), *Vuex - Managing State in Your Application*, we learned how
    to manage global state in Vue applications using the Vuex store system. We learned
    how to use state, actions, getters, and mutations in order to create a modular
    and nice application structure where the components can easily communicate with
    each other. We applied this new knowledge in our applications that we developed
    so far in the previous chapters.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第5章](part0052.xhtml#aid-1HIT82 "第5章。Vuex-管理您的应用程序中的状态")中，*Vuex-管理您的应用程序中的状态*，我们学习了如何使用Vuex存储系统在Vue应用程序中管理全局状态。我们学习了如何使用状态、操作、获取器和突变来创建一个模块化和良好的应用程序结构，其中组件可以轻松地相互通信。我们将这些新知识应用到了我们在前几章中开发的应用程序中。
- en: In [Chapter 6](part0061.xhtml#aid-1Q5IA1 "Chapter 6. Plugins – Building Your
    House with Your Own Bricks"), *Plugins - Building Your House with Your Own Bricks*, we
    learned how Vue plugins cooperate with Vue applications. We used an existing plugin,
    `vue-resource`, which helped us to save the application's state between browser
    refreshes. We also created our own plugin for Vue applications that produces white,
    brown, and pink noises. At this point, we had fully functional applications with
    a quite nice set of working features.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第6章](part0061.xhtml#aid-1Q5IA1 "第6章。插件-用自己的砖块建造你的房子")中，*插件-用自己的砖块建造你的房子*，我们学习了Vue插件如何与Vue应用程序合作。我们使用了现有的插件`vue-resource`，它帮助我们在浏览器刷新之间保存应用程序的状态。我们还为Vue应用程序创建了自己的插件，用于生成白噪声、棕噪声和粉红噪声。在这一点上，我们拥有了功能齐全的应用程序，具有相当不错的一套工作功能。
- en: In [Chapter 7](part0065.xhtml#aid-1TVKI1 "Chapter 7. Testing – Time to Test
    What We Have Done So Far!"), *Testing - Time to Test What We Have Done So Far!*, we
    learned how to test our Vue applications. We learned how to write unit tests and
    how to create and run end-to-end tests with Selenium driver. We learned what code
    coverage is and how to fake server responses in unit tests. We covered almost
    100% of our code with unit tests and we saw the Selenium driver in action running
    our end-to-end tests.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第7章](part0065.xhtml#aid-1TVKI1 "第7章。测试-是时候测试我们到目前为止所做的了！")中，*测试-是时候测试我们到目前为止所做的了！*，我们学习了如何测试我们的Vue应用程序。我们学习了如何编写单元测试，以及如何使用Selenium驱动程序创建和运行端到端测试。我们了解了代码覆盖率以及如何在单元测试中伪造服务器响应。我们几乎用单元测试覆盖了我们的代码的100％，并且我们看到Selenium驱动程序在运行端到端测试时的效果。
- en: In [Chapter 8](part0073.xhtml#aid-25JP21 "Chapter 8. Deploying – Time to Go
    Live!"), *Deploying - Time to Go Live!*, we finally exposed our applications to
    the whole world. We deployed them to the Heroku cloud system and now they can
    be accessed from everywhere where the Internet exists. More than that, we made
    our deployment process completely automated. Each time we push code changes to
    the `master` branch, the application is deployed! Even more than that. They are
    not only deployed on each push, but also automatically tested with the Travis
    continuous integration system.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第8章](part0073.xhtml#aid-25JP21 "第8章。部署-上线时间！")，“部署-上线时间！”中，我们最终将我们的应用程序暴露给了整个世界。我们将它们部署到Heroku云系统，现在它们可以从互联网存在的任何地方访问。更重要的是，我们使我们的部署过程完全自动化。每当我们将代码更改推送到`master`分支时，应用程序就会被部署！甚至更多。它们不仅在每次推送时部署，而且还会自动使用Travis持续集成系统进行测试。
- en: Thus, in this book, we haven't just learned a new framework. We applied our
    knowledge to develop two simple, yet nice applications from scratch. We applied
    the most important Vue's concepts to make our applications reactive, fast, maintainable,
    and testable. However, this is not the end. During the writing of this book, Vue
    2.0 has been launched. It brings some new possibilities and some new things to
    learn and use.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在这本书中，我们不仅学习了一个新的框架。我们运用我们的知识从头开始开发了两个简单但不错的应用程序。我们应用了最重要的Vue概念，使我们的应用程序具有响应性、快速、可维护和可测试。然而，这并不是结束。在写作本书期间，Vue
    2.0已经发布。它带来了一些新的可能性和一些新的东西需要学习和使用。
- en: Vue 2.0
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vue 2.0
- en: Vue 2.0 launched on the September 30, 2016\. Check out this post of Evan You
    at [https://medium.com/the-vue-point/vue-2-0-is-here-ef1f26acf4b8#.ifpgtjlek](https://medium.com/the-vue-point/vue-2-0-is-here-ef1f26acf4b8#.ifpgtjlek)
    .
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Vue 2.0于2016年9月30日发布。查看Evan You在[https://medium.com/the-vue-point/vue-2-0-is-here-ef1f26acf4b8#.ifpgtjlek](https://medium.com/the-vue-point/vue-2-0-is-here-ef1f26acf4b8#.ifpgtjlek)的帖子。
- en: Across this book, we used the newest version; however, I tried to reference
    the way of doing things in the first generation of Vue whenever it was necessary.
    Actually, the API is almost the same; there are some slight changes, some deprecated
    attributes, but the whole interface provided to the final user remains almost
    untouched.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，我们使用了最新版本；然而，每当有必要时，我都试图参考Vue第一代的做法。实际上，API几乎是相同的；有一些轻微的变化，一些已弃用的属性，但提供给最终用户的整个界面几乎没有改变。
- en: 'Nevertheless, it was almost rewritten from scratch! Of course, there are some
    parts of code that were almost 100% reused, but overall, it was a major refactor
    and some of the concepts were completely changed. For example, the rendering layer
    was completely rewritten. If, earlier, the rendering engine was using the real
    DOM, now it uses a lightweight virtual DOM structure ( [https://github.com/snabbdom/snabbdom](https://github.com/snabbdom/snabbdom)
    ). Its performance beats everything! Check out the benchmark figure in the following:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，它几乎是从头开始重写的！当然，有一些代码部分几乎100%被重用，但总体上，这是一个重大的重构，一些概念完全改变了。例如，渲染层被完全重写。如果早些时候，渲染引擎使用的是真实的DOM，现在它使用了轻量级的虚拟DOM结构（[https://github.com/snabbdom/snabbdom](https://github.com/snabbdom/snabbdom)）。它的性能超群！查看以下的基准图表：
- en: '![Vue 2.0](../Images/image00332.jpeg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![Vue 2.0](../Images/image00332.jpeg)'
- en: Performance benchmark (the lower is better) taken from https://medium.com/the-vue-point/vue-2-0-is-here-ef1f26acf4b8#.fjxegtv98
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 性能基准（数值越低越好）取自https://medium.com/the-vue-point/vue-2-0-is-here-ef1f26acf4b8#.fjxegtv98
- en: 'There is another interesting point in this new version. If you have already
    used the first generation of Vue, and read about it and listened to podcasts,
    you probably know that one of the major differences between, let''s say, Vue and
    React was React Native (the framework that allows us to build native apps based
    on React). Evan You was always claiming that Vue was just a tiny layer for web
    interfaces. Now, we have the emerging **Weex**, a framework that renders Vue-inspired
    components into native apps ( [https://github.com/alibaba/weex](https://github.com/alibaba/weex)
    ). According to Evan You, very soon, "Vue-inspired" will become "Vue-powered"!
    Just wait for it. Just stay tuned. I would like to recommend this amazing Full
    Stack Radio podcast, where Evan You talks about the new version of Vue: [http://www.fullstackradio.com/50](http://www.fullstackradio.com/50)
    .'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个新版本中还有另一个有趣的地方。如果你已经使用过第一代Vue，并阅读过它并听过播客，你可能知道Vue和React之间的一个主要区别是React Native（这个框架允许我们基于React构建原生应用程序）。Evan
    You一直声称Vue只是一个用于web界面的微小层。现在，我们有新兴的**Weex**，一个将受Vue启发的组件渲染成原生应用程序的框架（[https://github.com/alibaba/weex](https://github.com/alibaba/weex)）。根据Evan
    You的说法，很快，“受Vue启发”的将变成“由Vue驱动”的！敬请期待。请继续关注。我想推荐这个令人惊叹的Full Stack Radio播客，Evan
    You在其中谈到了Vue的新版本：[http://www.fullstackradio.com/50](http://www.fullstackradio.com/50)。
- en: '*Vue has evolved a lot since its humble beginning as a side project. Today
    it is community funded, widely adopted in the real world, and boasts one of the
    strongest growth trends among all JavaScript libraries according to stats.js.org.
    We believe 2.0 is going to push it even further. It''s the biggest update to Vue
    since its inception, and we are excited to see what you build with it. - *Evan
    You*, https://medium.com/the-vue-point/vue-2-0-is-here-ef1f26acf4b8#.fjxegtv98)*'
  id: totrans-23
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*Vue自其作为一个副产品的谦卑开始以来已经发展了很多。今天它是由社区资助的，在现实世界中被广泛采用，并且根据stats.js.org的统计数据，它在所有JavaScript库中拥有最强劲的增长趋势之一。我们相信2.0版本将进一步推动它。这是自Vue诞生以来最大的更新，我们很期待看到你用它构建的东西。-
    *Evan You*，https://medium.com/the-vue-point/vue-2-0-is-here-ef1f26acf4b8#.fjxegtv98)*'
- en: With this in mind, if you are coming from the Vue 1.0 generation, it will not
    be hard for you to upgrade your applications. Check the migration guide,  [http://vuejs.org/guide/migration.html](http://vuejs.org/guide/migration.html)
    , install the migration helper,  [https://github.com/vuejs/vue-migration-helper](https://github.com/vuejs/vue-migration-helper)
    , apply all needed changes, and see how your applications perform after that.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这一点，如果你来自Vue 1.0时代，升级你的应用程序将不会很困难。查看迁移指南，[http://vuejs.org/guide/migration.html](http://vuejs.org/guide/migration.html)，安装迁移助手，[https://github.com/vuejs/vue-migration-helper](https://github.com/vuejs/vue-migration-helper)，应用所有必要的更改，然后看看你的应用程序在那之后的表现如何。
- en: Revisiting our applications
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重新审视我们的应用程序
- en: Let's check again what have we done so far. We have developed two applications
    using Vue.js. Let's revisit them.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再次检查我们到目前为止做了什么。我们已经使用Vue.js开发了两个应用程序。让我们重新审视它们。
- en: Shopping list application
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 购物清单应用程序
- en: 'The shopping list application that we have developed in this book''s chapters
    is a web application that allows the following:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本书章节中开发的购物清单应用程序是一个允许以下操作的web应用程序：
- en: Create different shopping lists
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建不同的购物清单
- en: Add new items to the shopping lists and check them once they are bought
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向购物清单添加新项目并在购买后进行检查
- en: Rename shopping lists and remove them
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重命名购物清单并删除它们
- en: 'Our shopping list application resides on the Heroku cloud platform: [https://shopping-list-vue.herokuapp.com/](https://shopping-list-vue.herokuapp.com/)
    .'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的购物清单应用程序驻留在Heroku云平台上：[https://shopping-list-vue.herokuapp.com/](https://shopping-list-vue.herokuapp.com/)。
- en: 'Its code is hosted on GitHub: [https://github.com/chudaol/ShoppingList](https://github.com/chudaol/ShoppingList)
    .'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 它的代码托管在GitHub上：[https://github.com/chudaol/ShoppingList](https://github.com/chudaol/ShoppingList)。
- en: 'It is continuously integrated with Travis: [https://travis-ci.org/chudaol/ShoppingList](https://travis-ci.org/chudaol/ShoppingList)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 它与Travis持续集成：[https://travis-ci.org/chudaol/ShoppingList](https://travis-ci.org/chudaol/ShoppingList)。
- en: 'Its interface is simple and easy to understand:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 它的界面简单易懂：
- en: '![Shopping list application](../Images/image00333.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![购物清单应用程序](../Images/image00333.jpeg)'
- en: The interface of the shopping list application developed using Vue.js
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Vue.js开发的购物清单应用程序的界面
- en: It is still far from something that you would use every time you go shopping,
    isn't it?
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 它仍然远非你每次去购物都会使用的东西，不是吗？
- en: The Pomodoro application
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 番茄钟应用程序
- en: 'The Pomodoro application that we have developed in this book is a web application
    that implements a Pomodoro timer with white noise during the working Pomodoros
    and nice pictures of cats during the interval time. It allows the following:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本书中开发的番茄钟应用程序是一个Web应用程序，它在工作的番茄钟期间实现了白噪音和间隔时间显示美丽的猫的计时器。它允许以下操作：
- en: Start, pause, and stop the application
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动、暂停和停止应用程序
- en: Listen to white noise while working, noise that helps concentrating
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在工作时听白噪音，有助于集中注意力的噪音
- en: Mute and unmute the white noise sound
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 静音和取消静音白噪音声音
- en: Stare at the kittens during spare time
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在空闲时间盯着小猫
- en: 'Our Pomodoro application is also hosted on the Heroku cloud platform: [https://catodoro.herokuapp.com/](https://catodoro.herokuapp.com/)
    .'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的番茄钟应用程序也托管在Heroku云平台上：[https://catodoro.herokuapp.com/](https://catodoro.herokuapp.com/)。
- en: 'Its code is also hosted at GitHub: [https://github.com/chudaol/Pomodoro](https://github.com/chudaol/Pomodoro)
    .'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 它的代码也托管在GitHub上：[https://github.com/chudaol/Pomodoro](https://github.com/chudaol/Pomodoro)。
- en: 'And it is also built and tested on each push using the Travis continuous integration
    platform: [https://travis-ci.org/chudaol/Pomodoro](https://travis-ci.org/chudaol/Pomodoro)
    .'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 它还是在每次推送时使用Travis持续集成平台进行构建和测试：[https://travis-ci.org/chudaol/Pomodoro](https://travis-ci.org/chudaol/Pomodoro)。
- en: 'Its interface is clean and easy to use. Here is what it shows for the 20-minute
    working Pomodoro interval:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 它的界面清晰易用。以下是它在20分钟工作的番茄钟间隔时间显示的内容：
- en: '![The Pomodoro application](../Images/image00334.jpeg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![番茄钟应用程序](../Images/image00334.jpeg)'
- en: The Pomodoro application during the working Pomodoro
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 工作中的番茄钟应用程序
- en: 'And here''s what appears when the time for a 5-minute break comes:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当5分钟休息时间到来时，会出现以下内容：
- en: '![The Pomodoro application](../Images/image00335.jpeg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![番茄钟应用程序](../Images/image00335.jpeg)'
- en: The Pomodoro application during its interval time
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 间隔时间的番茄钟应用程序
- en: It is actually pretty usable, but also still far from perfect.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 它实际上相当可用，但仍然远非完美。
- en: Why is it just the beginning?
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么这只是个开始？
- en: In the previous section, we summarized what the applications that we have developed
    throughout the book are doing. We have also agreed (I hope) that they are still
    far from perfect. Things that are far from perfect are things that we want to
    improve and therefore they give us challenges and purpose. There is actually still
    a lot of work to be done. Our applications are nice, but they lack features, style,
    identity, UX patterns, extension to other platforms, and so on. Let's check what
    we can still do.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，我们总结了本书中开发的应用程序的功能。我们也同意（希望）它们仍然远非完美。远非完美的东西是我们想要改进的东西，因此它们给我们带来挑战和目的。实际上还有很多工作要做。我们的应用程序很好，但它们缺乏功能、风格、身份、UX模式、扩展到其他平台等等。让我们看看我们还能做什么。
- en: Adding features to our applications
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为我们的应用程序添加功能
- en: Our applications already have some pretty nice features, but they can have even
    more. They can be more configurable. They can be more flexible. They can be more
    UI/UX friendly. Let's look at each of them and write a list of features that can
    be added. It will be your homework.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的应用程序已经具有一些非常好的功能，但它们可以拥有更多。它们可以更具配置性。它们可以更加灵活。它们可以更加友好的UI/UX。让我们逐个查看它们，并列出可以添加的功能列表。这将是你的家庭作业。
- en: Shopping list application
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 购物清单应用
- en: Open our shopping list application in the browser and look at it. You can add
    your lists and items to them. You can delete items and lists. But every person
    who opens the application in the browser will be able to do the same. It means
    that we have to provide a way of every person having their own shopping list application,
    which is only possible with an authentication mechanism.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中打开我们的购物清单应用程序并查看它。您可以向其中添加清单和项目。您可以删除项目和清单。但是每个打开应用程序的人都可以做同样的事情。这意味着我们必须为每个人提供自己的购物清单应用程序的方式，这只有通过身份验证机制才可能。
- en: There are also some UX issues. Why should we change the name of the shopping
    list using the input field in the footer if we can change it, let's say, inline?
    Well, actually, shopping list's name editing in the input field was the first
    thing we implemented when we were learning how to achieve data binding in Vue
    applications. So, it made sense at the time, but now it can and should be improved.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些用户体验问题。如果我们可以内联更改购物清单的名称，为什么要在页脚的输入字段中更改它呢？实际上，当我们学习如何在Vue应用程序中实现数据绑定时，购物清单名称编辑在输入字段中是我们实现的第一件事情。所以，当时是有道理的，但现在它可以并且应该得到改进。
- en: Another thing has to do with deleted items. There is no way of clearing them
    up. If we have a long list of items, even when we delete them, they stay forever
    unless we remove the whole shopping list. There should be a way of clearing up
    checked items on the list.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 另一件事与已删除的项目有关。没有清除它们的方法。如果我们有一个很长的项目列表，即使我们删除它们，除非我们删除整个购物清单，否则它们将永远存在。应该有一种方法来清除清单上已选项目的方式。
- en: 'Another cosmetic change that we can apply has to do with styling. Different
    lists might have a different background colors, different font colors, and probably
    even different font styles and sizes. With that, here''s the list of improvements
    for the shopping list application:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以应用的另一个美观变化与样式有关。不同的清单可能有不同的背景颜色，不同的字体颜色，甚至可能有不同的字体样式和大小。因此，以下是购物清单应用的改进列表：
- en: Implement an authentication mechanism
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现身份验证机制
- en: Implement inline name editing
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现内联名称编辑
- en: Implement clearing up checked items
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现清除已选项目
- en: Implement a mechanism of configuring different shopping lists' styling, such
    as background color, text color, font size, and style
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现配置不同购物清单样式的机制，如背景颜色、文字颜色、字体大小和样式
- en: 'You can also implement categories for the items and icons for each of the categories.
    As an inspiration, you can have a look at the Splitwise application at [https://www.splitwise.com/](https://www.splitwise.com/)
    . When you start adding items, the icon of the item is generic. Once you type
    in something meaningful, the icon changes, as shown in the following screenshot:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以为项目实现类别，并为每个类别添加图标。作为灵感，您可以查看Splitwise应用程序[https://www.splitwise.com/](https://www.splitwise.com/)。当您开始添加项目时，项目的图标是通用的。一旦您输入了有意义的内容，图标就会更改，如下面的屏幕截图所示：
- en: '![Shopping list application](../Images/image00336.jpeg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![购物清单应用](../Images/image00336.jpeg)'
- en: 'The screenshot of the Splitwise application for the inspiration for the icon
    categories: it adapts to what you type in the input field'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Splitwise应用程序的屏幕截图可以为图标类别提供灵感：它会根据您在输入字段中输入的内容进行调整
- en: Try to implement this kind of categorization for our shopping list application.
    It would be a really nice and powerful bonus!
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试为我们的购物清单应用程序实现这种分类。这将是一个非常好的和强大的奖励！
- en: The Pomodoro application
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 番茄钟应用程序
- en: Open our Pomodoro application in your browser and try using it. It's nice, without
    any doubt. It is simple and easy to use. However, some extra configuration might
    bring some extra power to it. For example, why should I work for 20 minutes? Maybe
    I would like to have 15-minute periods of working Pomodoros. Or maybe I want to
    have bigger working Pomodoros, let's say 25 or 30 minutes. It should definitely
    be configurable.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中打开我们的番茄钟应用程序并尝试使用它。这很好，毫无疑问。它简单易用。但是，一些额外的配置可能会为其带来一些额外的功能。例如，为什么我要工作20分钟？也许我想要15分钟的工作番茄钟。或者我想要更长的工作番茄钟，比如25或30分钟。它肯定应该是可配置的。
- en: 'Let''s thoroughly check the description of the Pomodoro technique in Wikipedia
    to see if we are missing something: [https://en.wikipedia.org/wiki/Pomodoro_Technique](https://en.wikipedia.org/wiki/Pomodoro_Technique)
    .'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们仔细检查维基百科上的番茄钟技术描述，看看我们是否漏掉了什么：[https://en.wikipedia.org/wiki/Pomodoro_Technique](https://en.wikipedia.org/wiki/Pomodoro_Technique)。
- en: 'I''m pretty sure we are. Check this point at the underlying principles:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我很确定我们是。检查一下基本原则：
- en: '|   | *"After four pomodoros, take a longer break (15-30 minutes), reset your
    checkmark count to zero, then go to step 1."                   * |   |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: “四个番茄钟后，休息更长时间（15-30分钟），将您的勾号计数重置为零，然后转到步骤1。”
- en: '|   | --*https://en.wikipedia.org/wiki/Pomodoro_Technique* |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: --*https://en.wikipedia.org/wiki/Pomodoro_Technique*
- en: Aha! Something should happen after four Pomodoros. Bigger interval, more time
    staring at cats (or doing whatever you want to do). Hmm, probably it would be
    nice to be able to configure this period of time as well!
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 啊哈！四个番茄钟后应该发生一些事情。更长的间隔，更多时间盯着猫（或者做任何你想做的事情）。嗯，也许能够配置这段时间会很好！
- en: There's another important thing. As any human being, after working hard, I would
    like to see some progress. Wouldn't it be nice if our Pomodoro application could
    display some statistics about the amount of time we were able to concentrate on
    ourselves and to do our work? For this, we could collect some statistics and display
    them in our Pomodoro timer.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一件重要的事情。和任何人一样，努力工作后，我想看到一些进展。如果我们的番茄钟应用程序能够显示一些关于我们能够集中精力和工作的时间的统计数据，这不是很好吗？为此，我们可以收集一些统计数据，并在我们的番茄钟计时器中显示它们。
- en: Also, wouldn't it be nice to store these statistics to be able to visualize
    them during some period of time, let's say, one week, one month, one year? This
    leads us to the need to implement a storage mechanism. This store should store
    statistics for each user, so again, an authentication mechanism is needed as well.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，将这些统计数据存储起来并能够在一段时间内进行可视化，比如一周、一个月、一年，这会很好吧？这就导致我们需要实现一个存储机制。这个存储应该为每个用户存储统计数据，因此，也需要一个身份验证机制。
- en: 'Let''s think about our nice white, brown, and pink noises. Currently, we just
    play the brown noise that is hardcoded in our `App.vue`:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们想想我们美丽的白色、棕色和粉色噪音。目前，我们只播放在我们的`App.vue`中硬编码的棕色噪音：
- en: '[PRE0]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Shouldn''t we be able to switch between noises and choose our favorite one?
    Hence, we have identified one more item to add to the application''s configuration.
    That''s enough for now; let''s put all this in the list:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不应该能够在噪音之间切换并选择我们最喜欢的吗？因此，我们已经确定了要添加到应用程序配置中的另一项内容。现在就够了；让我们把这些都列在清单上：
- en: Implement the authentication mechanism
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现身份验证机制
- en: Implement a storage mechanism—it should collect the statistics about working
    times and store them in some persistence layer
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现一个存储机制——它应该收集有关工作时间的统计数据，并将它们存储在某种持久层中
- en: Implement the statistics displaying mechanism—it should grab the stored statistical
    data and display it in a nice and clean way (for example, charts)
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现统计数据显示机制——它应该获取存储的统计数据并以一种漂亮干净的方式显示出来（例如，图表）
- en: 'Add a configuration mechanism to the Pomodoro application. This configuration
    should allow the following:'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为番茄钟应用程序添加配置机制。这个配置应该允许以下操作：
- en: Configure the Pomodoro working period of time
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置番茄钟工作时间
- en: Configure the resting intervals of times
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置休息间隔时间
- en: Configure a big resting time after a configurable amount of working Pomodoros
    (4 by default)
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在可配置的工作番茄数量之后配置一个长的休息时间（默认为4个）
- en: Configure the preferred noise to play during the working intervals
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置工作间隔期间播放的首选噪音
- en: As you can see, you still have some work to do. It's a good thing, you have
    already a working Pomodoro timer application to use while you are working on its
    improvements!
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，你还有一些工作要做。好在你已经有一个可用的番茄钟计时器应用程序，可以在改进时使用！
- en: Beautifying our applications
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 美化我们的应用程序
- en: Both applications are currently pretty gray. Only the Pomodoro timer application
    becomes a little bit more colorful when a cat appears on the screen. It would
    be nice to add some design to them. Make them unique, give them their identity;
    you worked so hard on them, they clearly deserve some nice clothes. Let's think
    about what we can do with styling.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 目前两个应用程序都相当灰暗。只有番茄钟计时器应用程序在屏幕上出现猫时才会变得多彩一点。为它们添加一些设计会很好。让它们变得独特，赋予它们自己的特色；你为它们努力工作了这么久，显然它们值得一些漂亮的衣服。让我们想想我们可以用样式做些什么。
- en: Logotype
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标志
- en: Start with the logotype. A good logo defines your product and makes it unique.
    I can help you with the Pomodoro application's logo, at least with the idea for
    it. I have a very good friend called Carina who designed a tomato for me and I
    have just tried my best to add a little kitten to it. Check it out. You can use
    it as is or use just as an idea to develop your own. Even the sky is not the limit
    for your imagination, really!
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 从标志开始。一个好的标志定义了你的产品并使其独特。至少我可以帮你设计番茄钟应用程序的标志的想法。我有一个叫Carina的非常好的朋友为我设计了一个番茄，我尽力在上面加了一只小猫。看看吧。你可以直接使用它，或者只是作为发展你自己想法的参考。实际上，你的想象力没有极限！
- en: '![Logotype](../Images/image00337.jpeg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![标志](../Images/image00337.jpeg)'
- en: The idea for a logotype for the Pomodoro application
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 番茄钟应用程序的标志的想法
- en: Think about a nice logo for the shopping list app. What can it be? A bag for
    the groceries? A checkbox? Just initials—SL? Again, no limits. I hope to see your
    nice logos in the repositories forks. Can't wait for it!
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 为购物清单应用程序想一个漂亮的标志。它可以是什么？一只装杂货的袋子？一个复选框？只是首字母——SL？同样，没有限制。我希望在存储库的分支中看到你漂亮的标志。等不及了！
- en: Identity and design
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标识和设计
- en: Our applications definitely need some unique design. Use some UX techniques
    to develop a nice identity guide for them. Think about colors, fonts, and how
    the elements should be composed on the page so that they provide a unique user-friendly
    experience to our users.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的应用程序确实需要一些独特的设计。使用一些UX技术为它们开发一个漂亮的标识指南。考虑颜色、字体以及页面上元素应该如何组合，以便为我们的用户提供独特的用户友好体验。
- en: Animations and transitions
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 动画和过渡
- en: Animations and transitions are powerful mechanisms that bring some life to an
    application. However, they cannot be abused. Think about where and how they make
    sense. For example, hovering on the shopping lists titles could end up in some
    highlighting, shopping list items can do some tiny bouncing when they are checked,
    the process of changing the title of the shopping list could also be highlighted
    in some way, and so on. The Pomodoro application can change its background color
    on each of the state's transitions. It can also be aware of the time of the day
    and color the background accordingly. The number of opportunities is endless.
    Use your creativity, use Vue's power to achieve your ideas.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 动画和过渡是为应用程序带来生机的强大机制。然而，它们不能被滥用。考虑它们何时何地是有意义的。例如，悬停在购物清单标题上可能会导致一些突出显示，购物清单项目在被选中时可以进行一些微小的弹跳，更改购物清单标题的过程也可以以某种方式突出显示，等等。番茄钟应用程序可以在每个状态转换时更改其背景颜色。它还可以意识到一天中的时间并相应地着色背景。机会数不胜数。发挥你的创造力，利用Vue的力量实现你的想法。
- en: Extending our applications to other devices
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将我们的应用程序扩展到其他设备
- en: Both of our applications are web applications. While it might be okay for the
    Pomodoro application if we work the whole day on the computer and use the Web,
    it might be a little bit uncomfortable for the shopping list application. You
    don't bring your laptop when you go shopping. Of course, you can fill the shopping
    list with items at home and then open the mobile browser in the supermarket, but
    it might be slow and not so nice to use. Use Weex ( [https://github.com/alibaba/weex](https://github.com/alibaba/weex)
    ) to bring our web applications to the mobile devices. Both the applications can
    also be extended to be used as a Google Chrome app, just as we learned in [Chapter
    2](part0027.xhtml#aid-PNV61 "Chapter 2. Fundamentals – Installing and Using"),
    *Fundamentals - Installing and Using*. Extend your work to each and every device
    you can. I am looking forward to checking your work.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的两个应用程序都是Web应用程序。对于番茄钟应用程序来说，如果我们整天都在电脑上工作并使用Web，这可能没问题，但对于购物清单应用程序来说可能有点不舒服。你去购物时不会带着笔记本电脑。当然，你可以在家里填写购物清单，然后在超市打开手机浏览器，但这可能会很慢，使用起来也不太好。使用Weex（[https://github.com/alibaba/weex](https://github.com/alibaba/weex)）将我们的Web应用程序带到移动设备上。这两个应用程序也可以扩展为Google
    Chrome应用程序，就像我们在[第2章](part0027.xhtml#aid-PNV61 "第2章。基础知识-安装和使用")中学到的那样，*基础知识-安装和使用*。将你的工作扩展到每一个设备上。我期待着检查你的工作。
- en: Summary
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This is the last chapter of this book. Honestly, I feel a little bit sad about
    it. I had a really fun time with you. I know that I don't know you, but I feel
    like I do. I talk to you and I feel that sometimes you talk to me. Everything
    that was developed so far, I cannot say at all that it was developed by me; I
    feel that we have been working together on it all this time.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本书的最后一章。老实说，我对此感到有点难过。我和你在一起的时间真的很愉快。我知道我不认识你，但我觉得我认识你。我和你交谈，有时我觉得你也在和我交谈。到目前为止开发的一切，我不能说都是我开发的；我觉得我们一直在一起工作。
- en: It is a very funny feeling, actually, because I am at the same time in the present
    and in the future when you are reading this book (for me, it's the future). And
    you are now in your present and at the same time talking to me in the past. I
    love the way that books and technologies establish connections not only between
    people but also between different time intervals. This is amazing.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，这是一种非常有趣的感觉，因为当你阅读这本书时（对我来说，这是未来），我同时处于现在和未来。而你现在处于你的现在，同时又在过去和我交谈。我喜欢书籍和技术建立的联系方式，不仅在人与人之间建立联系，还在不同的时间间隔之间建立联系。这太神奇了。
- en: I really hope that you became a fan of Vue.js in the same way I am a fan of
    it.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我真的希望你能像我一样成为Vue.js的粉丝。
- en: I really hope that you will enhance at least one of the applications we have
    developed so far and show it to me. I will be really glad to help if you need
    my help. Do not hesitate to drop me a message at `chudaol@gmail.com`.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我真的希望你能至少改进我们迄今为止开发的一个应用程序，并向我展示。如果你需要帮助，我会很乐意帮助你。不要犹豫给我发邮件`chudaol@gmail.com`。
- en: Thank you for being with me all this time, and I hope to meet you soon in the
    next book!
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 谢谢你一直陪伴着我，希望很快能在下一本书中见到你！
