["```js\n//creating component \nvar HelloComponent = Vue.extend({ \n  template: '<h1>Hello</h1>' \n}); \n//registering component \nVue.component('hello-component', HelloComponent); \n\n//initializing the Vue application \nnew Vue({ \n  el: '#app' \n}); \n\n```", "```js\n<div id='app'> \n  <hello-component></hello-component> \n</div> \n\n```", "```js\n<template id=\"hello\"> \n  <h1>Hello</h1> \n</template> \n\n```", "```js\nVue.component('hello-component', { \n  template: '#hello' \n}); \n\n```", "```js\n<body> \n  **<template id=\"hello\">** \n    <h1>Hello</h1> \n  **</template>** \n\n  <div id=\"app\"> \n    <hello-component></hello-component> \n  </div> \n\n  <script src=\"vue.js\"></script> \n  <script> \n    Vue.component('hello-component', { \n      template: '**#hello**' \n    }); \n\n    new Vue({ \n      el: '#app' \n    }); \n  </script> \n</body> \n\n```", "```js\nvar HelloComponent = Vue.extend({ \n  el: '#hello', \n  data: { msg: 'Hello' } \n}); \n\n```", "```js\nvar HelloComponent = Vue.component('hello-component', { \n  el: **function ()** { \n    return '#hello'; \n  }, \n  data: **function ()** { \n    return { \n      msg: 'Hello' \n    } \n  } \n}); \n\n```", "```js\nVue.component('hello-component', { \n  data: function () { \n    return { \n      **msg: 'Hello'** \n    } \n  } \n}); \n\n```", "```js\nnew Vue({ \n  el: '#app', \n  **data: { \n    user: 'hero' \n  }** \n});  \n\n```", "```js\n//template declaration \n<template id=\"hello\"> \n  <h1>**{{msg}} {{user}}**</h1> \n</template> \n\n//using template in component \nVue.component('hello-component', { \n  **template: '#hello',** \n  data: function () { \n    return { \n      msg: 'Hello' \n    } \n  } \n}); \n\n```", "```js\n<div id=\"app\"> \n  **<hello-component></hello-component>** \n</div> \n\n```", "```js\n//calling parent's data attributes in the component \nVue.component('hello-component', { \n  template: '#hello', \n  data: function () { \n    return { \n      msg: 'Hello' \n    } \n  }, \n  **props: ['user']** \n}); \n\n//binding a user data property to the component \n<div id=\"app\"> \n  <hello-component **v-bind:user=\"user\"**></hello-component> \n</div> \n\n```", "```js\n<!--template for the form--> \n<template id=\"form\"> \n  <div> \n    <label for=\"name\">What's your name?</label> \n    <input **v-model=\"user\"** type=\"text\" id=\"name\"> \n  </div> \n</template> \n\n//template for saying hello \n<template id=\"hello\"> \n  <h1>{{msg}} {{user}}</h1> \n</template> \n\n```", "```js\n//register form component \nVue.component('**form-component**', { \n  template: '**#form**', \n  props: ['user'] \n}); \n//register hello component \nVue.component('**hello-component**', { \n  template: '**#hello**', \n  data: function () { \n    return { \n      msg: 'Hello' \n    } \n  }, \n  props: ['user'] \n}); \n\n```", "```js\n<template id=\"greetings\"> \n  <div> \n    <form-component **:user=\"user\"**></form-component> \n    <hello-component **:user=\"user\"**></hello-component> \n  </div> \n</template> \n\n```", "```js\n//create greetings component based on the greetings template \nVue.component('greetings-component', { \n  template: '**#greetings**', \n  data: function () { \n    return { \n      user: 'hero' \n    } \n  } \n}); \n\n```", "```js\n<div id=\"app\"> \n  **<greetings-component></greetings-component>** \n</div> \n\n```", "```js\nnew Vue({ \n  el: '#app' \n}); \n\n```", "```js\n<form-component **v-model=\"user\"**></form-component> \n\n```", "```js\nVue.component('form-component', { \n  template: '#form', \n  props: [**'value'**], \n  methods: { \n    **onInput: function (event) { \n      this.$emit('input', event.target.value) \n    }** \n  } \n}); \n\n```", "```js\n<input **v-bind:value=\"value\"** type=\"text\" id=\"name\" **v-on:input=\"onInput\"**> \n\n```", "```js\n<!--add new item template--> \n<template id=\"**add-item-template**\"> \n  <div class=\"input-group\"> \n    <input @keyup.enter=\"addItem\" v-model=\"newItem\" \n      placeholder=\"add shopping list item\" type=\"text\" \n      class=\"form-control\"> \n    <span class=\"input-group-btn\"> \n      <button @click=\"addItem\" class=\"btn btn-default\" \n        type=\"button\">Add!</button> \n    </span> \n  </div> \n</template> \n\n<!--list item template--> \n<template id=\"**item-template**\"> \n  <li :class=\"{ 'removed': item.checked }\"> \n    <div class=\"checkbox\"> \n      <label> \n        <input type=\"checkbox\" v-model=\"item.checked\"> {{ item.text }} \n      </label> \n    </div> \n  </li> \n</template> \n\n<!--items list template--> \n<template id=\"**items-template**\"> \n  <ul> \n    <item-component v-for=\"item in items\" :item=\"item\">\n    </item-component> \n  </ul> \n</template> \n\n<!--change title template--> \n<template id=\"**change-title-template**\"> \n  <div> \n    <em>Change the title of your shopping list here</em> \n    <input **v-bind:value=\"value\" v-on:input=\"onInput\"**/> \n  </div> \n</template> \n\n```", "```js\n<div id=\"app\" class=\"container\"> \n  <h2>{{ title }}</h2> \n  **<add-item-component></add-item-component> \n  <items-component :items=\"items\"></items-component>** \n  <div class=\"footer\"> \n    <hr/> \n    **<change-title-component v-model=\"title\"</change-title-component>** \n  </div> \n</div> \n\n```", "```js\n//add item component \nVue.component('add-item-component', { \n  template: '**#add-item-template**', \n  data: function () { \n    return { \n      **newItem**: '' \n    } \n  } \n}); \n//item component \nVue.component('item-component', { \n  template: '**#item-template**', \n  props: ['**item**'] \n}); \n//items component \nVue.component('items-component', { \n  template: '**#items-template**', \n  props: ['**items**'] \n}); \n//change title component \nVue.component('change-title-component', { \n  template: '**#change-title-template**', \n  props: ['**value**'], \n  methods: { \n    onInput: function (event) { \n      this.$emit('input', event.target.value) \n    } \n  } \n}); \n\n```", "```js\n**npm install -g vue-cli vue init webpack-simple hello**\n\n```", "```js\n<template> \n  <h1>{{ msg }}</h1> \n</template> \n\n<script> \n**export default { \n  data () { \n    return { \n      msg: 'Hello!' \n    } \n  } \n}** \n</script> \n\n```", "```js\nimport Vue from 'vue' \n**import HelloComponent** from './HelloComponent.vue' \n\nnew Vue({ \n  el: '#app', \n  **components: { HelloComponent }** \n}); \n\n```", "```js\n<body> \n  <div id=\"app\"> \n    **<hello-component></hello-component>** \n  </div> \n  <script src=\"./dist/build.js\"></script> \n</body> \n\n```", "```js\n**npm install \nnpm run dev**\n\n```", "```js\n<style> \n  h1 { \n    color: red; \n  } \n</style> \n\n```", "```js\n<div id=\"app\"> \n  <h1>This is a single file component demo</h1> \n  <hello-component></hello-component> \n</div> \n\n```", "```js\n<style **scoped**> \n  h1 { \n    color: red; \n  } \n</style> \n\n```", "```js\n**npm install jade --save-dev** \n\n```", "```js\n<template lang=\"jade\"> \n  h1 {{ msg }} \n</template> \n\n```", "```js\n<style lang=\"sass\" scoped> \n  $red: red; \n  h1 { \n    color: $red; \n  } \n</style> \n\n```", "```js\n**> npm install coffee-loader coffee-script --save-dev \n<script lang=\"coffee\"> \n  exports.default = data: -> \n  { msg: 'Hello!' } \n</script>** \n\n```", "```js\n**#install vue-cli if you still hadn't installed it \n$ npm install vue-cli -g \n#bootstrap the application \n$ vue init webpack shopping-list \n$ cd shopping-list \n$ npm install \n$ npm run dev** \n\n```", "```js\n<!DOCTYPE html> \n<html> \n  <head> \n    <meta charset=\"utf-8\"> \n    <title>shopping-list</title> \n    <link rel=\"stylesheet\" \n      href=\"https://maxcdn.bootstrapcdn.com/bootstrap/\n      3.3.6/css/bootstrap.min.css\"> \n  </head> \n  <body> \n    **<app></app>** \n  </body> \n</html> \n\n```", "```js\nimport Vue from 'vue' \nimport App from './App' \n\nnew Vue({ \n  **el: 'app'**, \n  components: { App } \n}) \n\n```", "```js\n<script> \n  import **AddItemComponent** from './components/AddItemComponent' \n  import **ItemsComponent** from './components/ItemsComponent' \n  import **ChangeTitleComponent** from './components/ChangeTitleComponent' \n\n  export default { \n    components: { \n      **AddItemComponent, \n      ItemsComponent, \n      ChangeTitleComponent** \n    }, \n    data () { \n      return { \n        **items: [{ text: 'Bananas', checked: true }, \n                { text: 'Apples', checked: false }]** \n      } \n    }, \n    methods: { \n      addItem (text) { \n        this.items.push({ \n          text: text, \n          checked: false \n        }) \n      } \n    } \n  } \n</script> \n\n```", "```js\n<template> \n  <div id=\"app\" class=\"container\"> \n    <h2>{{ title }}</h2> \n    **<add-item-component></add-item-component> \n    <items-component></items-component>** \n    <div class=\"footer\"> \n      <hr/> \n      **<change-title-component></change-title-component>** \n    </div> \n  </div> \n</template> \n\n```", "```js\n<template> \n  <div> \n    <div class=\"input-group\"> \n      <input type=\"text\" class=\"input form-control\" \n        placeholder=\"add shopping list item\"> \n      <span class=\"input-group-btn\"> \n        <button class=\"btn btn-default\" type=\"button\">Add!</button> \n      </span> \n    </div> \n  </div> \n</template> \n\n```", "```js\n//ItemComponent.vue \n<template> \n  <li :class=\"{ 'removed': item.checked }\"> \n    <div class=\"checkbox\"> \n      <label> \n        <input type=\"checkbox\" v-model=\"item.checked\"> {{ item.text }} \n      </label> \n    </div> \n  </li> \n</template> \n\n```", "```js\n//ItemComponent.vue \n<style scoped> \n  .removed { \n    color: gray; \n  } \n  .removed span { \n    text-decoration: line-through; \n  } \n  li { \n    list-style-type: none; \n  } \n  li span { \n    margin-left: 5px; \n  } \n</style> \n\n```", "```js\n//ItemsComponent.vue \n<script> \n  import **ItemComponent** from './ItemComponent' \n\n  export default { \n    components: { \n      **ItemComponent** \n    } \n  } \n</script> \n\n```", "```js\n//temsComponent.vue \n<template> \n  <div> \n    <item-component v-for=\"item in items\" :item=\"item\">\n    </item-component> \n  </div> \n</template> \n\n```", "```js\n//App.vue  \n<items-component **:items=\"items\"**></items-component> \n\n```", "```js\n//ItemsComponent.vue \n<script> \n  import ItemComponent from './ItemComponent' \n\n  export default { \n    components: { \n      ItemComponent \n    }, \n    **props: ['items']** \n  } \n</script> \n\n```", "```js\n//temComponent.vue \n<script> \n  export default { \n    props: ['item'] \n  } \n</script>  \n\n```", "```js\n          <!DOCTYPE html> \n          <html> \n       \u00a0\u00a0\u00a0\u00a0 <head> \n        \u00a0\u00a0\u00a0\u00a0  <meta charset=\"utf-8\"> \n        \u00a0\u00a0\u00a0\u00a0  <title>pomodoro</title> \n     \u00a0\u00a0\u00a0\u00a0   </head> \n     \u00a0\u00a0\u00a0\u00a0   <body> \n       \u00a0\u00a0\u00a0\u00a0   <app></app> \n      \u00a0\u00a0\u00a0\u00a0  </body> \n     \u00a0\u00a0\u00a0\u00a0 </html> \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 import Vue from 'vue' \n     \u00a0\u00a0\u00a0\u00a0 import App from './App' \n\n     \u00a0\u00a0\u00a0\u00a0 /* eslint-disable no-new */ \n     \u00a0\u00a0\u00a0\u00a0 new Vue({ \n      \u00a0\u00a0\u00a0\u00a0  el: 'app', \n       \u00a0\u00a0\u00a0\u00a0 components: { App } \n     \u00a0\u00a0\u00a0\u00a0 }) \n\n    ```", "```js\n<div id=\"app\" class=\"container\"> \n  <h2> \n    <span>Pomodoro</span> \n    **// Looks like our ControlsComponent** \n    <button > \n      <i class=\"glyphicon glyphicon-play\"></i> \n    </button> \n    <button > \n      <i class=\"glyphicon glyphicon-pause\"></i> \n    </button> \n    <button > \n      <i class=\"glyphicon glyphicon-stop\"></i> \n    </button> \n  </h2> \n  **// Looks like our StateTitleComponent** \n  <h3>{{ title }}</h3> \n  **// Looks like our CountdownComponent** \n  <div class=\"well\"> \n    <div class=\"pomodoro-timer\"> \n      <span>{{ min }}</span>:<span>{{ sec }}</span> \n    </div> \n  </div> \n  **// Looks like our KittensComponent** \n  <div class=\"well\"> \n    <img :src=\"catImgSrc\" /> \n  </div> \n</div> \n\n```", "```js\n//App.vue \n<template> \n  <div id=\"app\" class=\"container\"> \n    <h2> \n      <span>Pomodoro</span> \n      **<controls-component></controls-component>** \n    </h2> \n    **<state-title-component></state-title-component> \n    <countdown-component></countdown-component> \n    <kittens-component></kittens-component>** \n  </div> \n</template> \n\n```", "```js\n<div v-if=\"show\">hello</div> \n\n```", "```js\n<transition name=\"fade\">  \n  <div v-if=\"show\" transition=\"my\">hello</div> \n</transition> \n\n```", "```js\n<template> \n  <...> \n  <kittens-component **v-if=\"kittens\"**></kittens-component> \n  <...> \n</template> \n\n```", "```js\n<script> \n// ... // \nwindow.data = { \n  kittens: true \n}; \n\nexport default { \n  //.....// \n  data () { \n    return window.data \n  } \n} \n</script> \n\n```", "```js\ndata.kittens = false \n\n```", "```js\ndata.kittens = true \n\n```", "```js\n<template> \n  <...> \n  **<transition name=\"fade\">** \n    <kittens-component v-if=\"kittens\"></kittens-component> \n  **</transition>** \n  <...> \n</template> \n\n```", "```js\n<style scoped> \n  **.fade-enter-active, .fade-leave-active** { \n    transition: opacity .5s \n  } \n  **.fade-enter, .fade-leave-active** { \n    opacity: 0 \n  } \n</style> \n\n```"]