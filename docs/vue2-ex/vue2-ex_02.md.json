["```js\n      [\n        '{{repeat(5)}}',\n        {\n          index: '{{index()}}',\n          guid: '{{guid()}}',\n          isActive: '{{bool()}}',\n          balance: '{{floating(1000, 4000, 2, \"00.00\")}}',\n          name: '{{firstName()}} {{surname()}}',\n          email: '{{email()}}',\n          registered: '{{date(new Date(2014, 0, 1), new Date(), \"YYYY-            \n         MM-ddThh:mm:ss\")}}'\n        }\n      ]\n```", "```js\n      <div id=\"app\">\n        <div v-html=\"message\"></div>\n      </div>\n```", "```js\n      const app = new Vue({\n        el: '#app',\n\n        data: {\n          message: '<h1>Hello!</h1>'\n        }\n      });\n```", "```js\n      <div id=\"app\">\n        <img v-bind:src=\"imageSource\">\n      </div>\n```", "```js\n      const app = new Vue({\n        el: '#app',\n\n        data: {\n          imageSource: 'http://via.placeholder.com/350x150'\n        }\n      });\n```", "```js\n      <div id=\"app\">\n        <div>Now you see me</div>\n      </div>\n```", "```js\n      const app = new Vue({\n        el: '#app',\n\n        data: {\n          isVisible: false\n        }\n      });\n```", "```js\n      <div id=\"app\">\n        <div v-if=\"isVisible\">Now you see me</div>\n      </div>\n```", "```js\n      app.isVisible = true\n```", "```js\n      <div v-if=\"selected == 'yes'\">Now you see me</div>\n```", "```js\n      <div v-if=\"isSelected\">Now you see me</div>\n```", "```js\n      isSelected() {\n        return selected == 'yes';\n      }\n```", "```js\n      <div id=\"app\">\n        <div v-if=\"isVisible\">\n          Now you see me\n        </div>\n        <div v-else>\n          Now you don't\n        </div>\n      </div>\n```", "```js\n      <div id=\"app\">\n        <div v-if=\"isVisible\">\n          Now you see me\n        </div>\n        <div v-else-if=\"otherVisible\">\n          You might see me\n        </div>\n        <div v-else>\n          Now you don't\n        </div>\n      </div>\n```", "```js\n      const app = new Vue({\n        el: '#app',\n\n        data: {\n          people: [...]\n        }\n      });\n```", "```js\n      <div id=\"app\">\n        <ul>\n          <li v-for=\"person in people\">\n            {{ person }}\n          </li>\n        </ul>\n      </div>\n```", "```js\n      <div id=\"app\">\n        <ul>\n          <template v-for=\"person in people\">\n            <li>\n              {{ person }}\n            </li>\n          </template>\n        </ul>\n      </div>\n```", "```js\n      <li v-for=\"person in people\">\n        {{ person.name }}\n      </li>\n```", "```js\n      <table>\n        <tr v-for=\"person in people\">\n          <td>{{ person.name }}</td>\n          <td>{{ person.email }}</td>\n          <td>{{ person.balance }}</td>\n          <td>{{ person.registered }}</td>\n        </tr>\n      </table>\n```", "```js\n      <td>{{ (person.isActive) ? 'Active' : 'Inactive' }}</td>\n```", "```js\n      <td>\n        <span class=\"positive\" v-if=\"person.isActive\">Active</span>\n        <span class=\"negative\" v-else>Inactive</span>\n      </td>\n```", "```js\n      <td>{{ activeStatus(person) }}</td>\n```", "```js\nactiveStatus(person) {\n  return (person.isActive) ? 'Active' : 'Inactive';\n}\n```", "```js\n      <a href=\"mailto:{{person.email}}\">{{ person.email }}</a>\n```", "```js\n<a v-bind:href=\"'mailto:' + person.email\">{{ person.email }}</a>\n```", "```js\n      const app = new Vue({\n        el: '#app',\n\n        data: {\n          people: [...],\n          currency: '$'\n        },\n        methods: {\n          activeStatus(person) {\n            return (person.isActive) ? 'Active' : 'Inactive';\n          },\n          formatBalance(balance) {\n            return this.currency + balance.toFixed(2);\n          }\n        }\n    });\n```", "```js\n      <td>{{ formatBalance(person.balance) }}</td>\n```", "```js\n      formatDate(date) {\n        let registered = new Date(date);\n        return registered.toLocaleString('en-US');\n      }\n```", "```js\n      <td>{{ formatDate(person.registered) }}</td>\n```", "```js\n      <form>\n        <label for=\"fiterField\">\n          Field:\n          <select id=\"filterField\">\n            <option value=\"\">Disable filters</option>\n            <option value=\"isActive\">Active user</option>\n            <option value=\"name\">Name</option>\n            <option value=\"email\">Email</option>\n            <option value=\"balance\">Balance</option>\n            <option value=\"registered\">Date registered</option>\n          </select>\n        </label>\n\n        <label for=\"filterQuery\">\n          Query:\n          <input type=\"text\" id=\"filterQuery\">\n        </label>\n\n        <span>\n          Active:\n          <label for=\"userStateActive\">\n            Yes:\n            <input type=\"radio\" value=\"true\" id=\"userStateActive\"                   \n          selected>\n          </label>\n          <label for=\"userStateInactive\">\n            No:\n            <input type=\"radio\" value=\"false\" id=\"userStateInactive\">\n          </label>\n        </span>\n      </form>\n```", "```js\n      data: {\n        people: [...],\n\n        currency: '$',\n\n        filterField: '',\n filterQuery: '',\n filterUserState: ''\n      }\n```", "```js\n      <input type=\"text\" id=\"filterQuery\" v-model=\"filterQuery\">\n```", "```js\n      {{ filterField }}\n```", "```js\n      {{ typeof filterUserState }}\n```", "```js\n      <span>\n        Active:\n        <label for=\"userStateActive\">\n          Yes:\n          <input type=\"radio\" v-bind:value=\"true\" id=\"userStateActive\"       \n         v-model=\"filterUserState\" selected>\n        </label>\n        <label for=\"userStateInactive\">\n          No:\n          <input type=\"radio\" v-bind:value=\"false\"       \n         id=\"userStateInactive\" v-model=\"filterUserState\">\n        </label>\n      </span>\n```", "```js\n      filterRow(person) {\n         return true;\n      }\n```", "```js\n      <table>\n        <tr v-for=\"person in people\" v-show=\"filterRow(person)\">\n          <td>{{ person.name }}</td>\n          ...\n```", "```js\n      filterRow(person) {\n        return person.isActive;\n      }\n```", "```js\n      filterRow(person) {\n        return (this.filterUserState === person.isActive);\n      }\n```", "```js\n      filterRow(person) {\n        let result = true;\n\n        if(this.filterField === 'isActive') {\n          result = this.filterUserState === person.isActive;\n        }\n\n        return result;\n      }\n```", "```js\n      filterRow(person) {\n        let result = true;\n\n        if(this.filterField) {\n\n          if(this.filterField === 'isActive') {\n            result = this.filterUserState === person.isActive;\n          } else {\n let query = this.filterQuery.toLowerCase(),\n field =  person[this.filterField].toString().toLowerCase(); result = field.includes(query);\n }\n\n        }\n\n        return result;\n      }\n```", "```js\n      if(this.filterField === 'isActive') {\n        result = this.filterUserState === person.isActive;\n      } else {\n\n        let query = this.filterQuery,\n field = person[this.filterField]; \n }\n```", "```js\n      if(this.filterField === 'isActive') {\n        result = this.filterUserState === person.isActive;\n      } else {\n\n        let query = this.filterQuery,\n            field = person[this.filterField];\n\n        if(typeof field === 'number') {\n          // Is a number\n } else {\n // Is not a number\n          field = field.toLowerCase();\n          result = field.includes(query.toLowerCase());\n }\n\n      }\n```", "```js\n      if(this.filterField === 'isActive') {\n       result = this.filterUserState === person.isActive;\n      } else {\n\n        let query = this.filterQuery,\n            field = person[this.filterField];\n\n        if(typeof field === 'number') {\n          result = eval(field + query);\n        } else {\n          field = field.toLowerCase();\n          result = field.includes(query.toLowerCase());\n        }\n\n      }\n```", "```js\n      eval(500 > 300); // true\n      eval(500 < 400); // false\n      eval(500 - 500); // false\n```", "```js\n      if(typeof field == 'number') {\n        query = query.replace(this.currency, '');\n        result = eval(field + query);\n      }\n```", "```js\n      if(typeof field == 'number') {\n        query = query.replace(this.currency, '');\n\n        try {\n          result = eval(field + query);\n } catch(e) {}\n      }\n```", "```js\n      filterRow(person) {\n        let result = true;\n\n        if(this.filterField) {\n\n          if(this.filterField === 'isActive') {\n\n            result = this.filterUserState === person.isActive;\n\n          } else {\n\n            let query = this.filterQuery,\n          field = person[this.filterField];\n\n            if(typeof field === 'number') {\n\n              query = query.replace(this.currency, '');        \n              try {\n                result = eval(field + query);\n              } catch (e) {}\n\n            } else {\n\n              field = field.toLowerCase();\n              result = field.includes(query.toLowerCase());\n\n            }\n          }\n        }\n\n        return result;\n\n      }\n```", "```js\n      isActiveFilterSelected() {\n        return (this.filterField === 'isActive');\n      }\n```", "```js\n      <label for=\"filterQuery\" v-show=\"!isActiveFilterSelected()\">\n        Query:\n        <input type=\"text\" id=\"filterQuery\" v-model=\"filterQuery\">\n      </label>\n      <span v-show=\"isActiveFilterSelected()\">\n        Active:\n        <label for=\"userStateActive\">\n          Yes:\n          <input type=\"radio\" v-bind:value=\"true\" id=\"userStateActive\"           \n         v-model=\"filterUserState\">\n        </label>\n        <label for=\"userStateInactive\">\n          No:\n     <input type=\"radio\" v-bind:value=\"false\" id=\"userStateInactive\" v-\n      model=\"filterUserState\">\n        </label>\n      </span>\n```", "```js\n      <label for=\"filterQuery\" v-show=\"this.filterField &&        \n      !isActiveFilterSelected()\">\n        Query:\n        <input type=\"text\" id=\"filterQuery\" v-model=\"filterQuery\">\n      </label>\n```", "```js\n      if(this.filterField === 'isActive') {\n        result = (typeof this.filterUserState === 'boolean') ?                  \n        (this.filterUserState === person.isActive) : true;\n      }\n```", "```js\n      <td v-bind:class=\"{ active: person.isActive }\">\n        {{ activeStatus(person) }}\n      </td>\n```", "```js\n      <td v-bind:class=\"{ active: person.isActive, inactive: \n      !person.isActive }\">\n        {{ activeStatus(person) }}\n      </td>\n```", "```js\n      <td v-bind:class=\"person.isActive ? 'active' : 'inactive'\">\n        {{ activeStatus(person) }}\n      </td>\n```", "```js\n      activeClass(person) {\n        return person.isActive ? 'active' : 'inactive';\n      }\n```", "```js\n      <td v-bind:class=\"activeClass(person)\">\n        {{ activeStatus(person) }}\n      </td>\n```", "```js\n      <td v-bind:class=\"balanceClass(person)\">\n        {{ formatBalance(person.balance) }}\n      </td>\n```", "```js\n      balanceClass(person) {\n        return 'warning';\n      }\n```", "```js\n      balanceClass(person) {\n        let balanceLevel = 'success';\n\n        if(person.balance < 2000) {\n          balanceLevel = 'error';\n        } else if (person.balance < 3000) {\n          balanceLevel = 'warning';\n        }\n\n        return balanceLevel;\n      }\n```", "```js\n      balanceClass(person) {\n        let balanceLevel = 'success';\n        if(person.balance < 2000) {\n          balanceLevel = 'error';\n        } else if (person.balance < 3000) {\n          balanceLevel = 'warning';\n        }\n        return [balanceLevel, 'increasing'];\n      }\n```", "```js\n      let increasing = false,\n          balance = person.balance / 1000;\n\n      if(Math.round(balance) == Math.ceil(balance)) {\n        increasing = 'increasing';\n      }\n```", "```js\n      balanceClass(person) {\n        let balanceLevel = 'success';\n\n        if(person.balance < 2000) {\n          balanceLevel = 'error';\n        } else if (person.balance < 3000) {\n          balanceLevel = 'warning';\n        } \n\n        let increasing = false,\n            balance = person.balance / 1000;\n\n        if(Math.round(balance) == Math.ceil(balance)) {\n          increasing = 'increasing';\n        }\n\n        return [balanceLevel, increasing];\n      }\n```", "```js\n      <div id=\"app\">\n        <form>\n          <label for=\"fiterField\">\n            Field:\n            <select id=\"filterField\" v-model=\"filterField\">\n              <option value=\"\">Disable filters</option>\n              <option value=\"isActive\">Active user</option>\n              <option value=\"name\">Name</option>\n              <option value=\"email\">Email</option>\n              <option value=\"balance\">Balance</option>\n              <option value=\"registered\">Date registered</option>\n            </select>\n          </label>\n\n          <label for=\"filterQuery\" v-show=\"this.filterField &&                  \n          !isActiveFilterSelected()\">\n            Query:\n            <input type=\"text\" id=\"filterQuery\" v-model=\"filterQuery\">\n          </label>\n\n          <span v-show=\"isActiveFilterSelected()\">\n         Active:\n        <label for=\"userStateActive\">\n        Yes:\n        <input type=\"radio\" v-bind:value=\"true\" id=\"userStateActive\" v-\n         model=\"filterUserState\">\n      </label>\n      <label for=\"userStateInactive\">\n        No:\n        <input type=\"radio\" v-bind:value=\"false\" id=\"userStateInactive\"          \n      v-model=\"filterUserState\">\n      </label>\n          </span>\n        </form>\n\n        <table>\n          <tr v-for=\"person in people\" v-show=\"filterRow(person)\">\n            <td>{{ person.name }}</td>\n            <td>\n         <a v-bind:href=\"'mailto:' + person.email\">{{ person.email }}            \n           </a>\n            </td>\n            <td v-bind:class=\"balanceClass(person)\">\n              {{ formatBalance(person.balance) }}\n            </td>\n            <td>{{ formatDate(person.registered) }}</td>\n            <td v-bind:class=\"activeClass(person)\">\n              {{ activeStatus(person) }}\n            </td>\n          </tr>\n        </table>\n\n      </div>\n```", "```js\n      const app = new Vue({\n        el: '#app',\n\n        data: {\n          people: [...],\n\n          currency: '$',\n\n          filterField: '',\n          filterQuery: '',\n          filterUserState: ''\n        },\n        methods: {\n          activeStatus(person) {\n            return (person.isActive) ? 'Active' : 'Inactive';\n          },\n\n          activeClass(person) {\n            return person.isActive ? 'active' : 'inactive';\n          },\n          balanceClass(person) {\n            let balanceLevel = 'success';\n\n            if(person.balance < 2000) {\n              balanceLevel = 'error';\n            } else if (person.balance < 3000) {\n              balanceLevel = 'warning';\n            }\n\n            let increasing = false,\n          balance = person.balance / 1000;\n\n            if(Math.round(balance) == Math.ceil(balance)) {\n              increasing = 'increasing';\n            }\n\n            return [balanceLevel, increasing];\n          },\n\n          formatBalance(balance) {\n            return this.currency + balance.toFixed(2);\n          },\n          formatDate(date) {\n            let registered = new Date(date);\n            return registered.toLocaleString('en-US');\n          },\n\n          filterRow(person) {\n            let result = true;\n            if(this.filterField) {\n\n              if(this.filterField === 'isActive') {\n\n              result = (typeof this.filterUserState === 'boolean') ?       \n              (this.filterUserState === person.isActive) : true;\n             } else {\n\n          let query = this.filterQuery,\n              field = person[this.filterField];\n\n          if(typeof field === 'number') {\n            query.replace(this.currency, '');\n            try {\n              result = eval(field + query);\n            } catch(e) {}\n          } else {\n            field = field.toLowerCase();\n            result = field.includes(query.toLowerCase());\n            }\n          }\n        }\n\n            return result;\n          },\n\n          isActiveFilterSelected() {\n            return (this.filterField === 'isActive');\n          }\n        }\n      });\n```"]