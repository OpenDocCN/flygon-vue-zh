["```js\n# Create a new Nuxt project\n$ vue init nuxt-community/starter-template vue-nuxt\n\n# Change directory\n$ cd vue-nuxt\n\n# Install dependencies\n$ npm install\n\n# Run the project in the browser\n$ npm run dev\n```", "```js\n\"dependencies\": {\n  \"nuxt\": \"^1.0.0\"\n}\n```", "```js\nhead: {\n  // Omitted\n  link: [\n    { rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' },\n    {\n      rel: 'stylesheet',\n      href:\n    'https://cdnjs.cloudflare.com/ajax/libs/bulma/0.6.1/css/bulma.min.css',\n    },\n  ],\n}\n```", "```js\nroutes: [\n  {\n    name: 'index',\n    path: '/',\n    component: 'pages/index.vue'\n  }\n]\n```", "```js\nroutes: [\n  {\n    name: 'index',\n    path: '/',\n    component: 'pages/index.vue'\n  },\n  {\n    name: 'categories',\n    path: '/categories',\n    component: 'pages/categories/index.vue'\n  }\n]\n```", "```js\nroutes: [\n  {\n    name: 'index',\n    path: '/',\n    component: 'pages/index.vue'\n  },\n  {\n    name: 'categories',\n    path: '/categories',\n    component: 'pages/categories/index.vue'\n  },\n  {\n    name: 'categories-id',\n    path: '/categories/id',\n    component: 'pages/categories/_id.vue'\n  }\n]\n```", "```js\n<template>\n  <nav class=\"navbar is-primary\" role=\"navigation\" aria-label=\"main \n  navigation\">\n    <div class=\"navbar-brand\">\n      <nuxt-link class=\"navbar-item\" to=\"/\">Hearty Home Cooking</nuxt-\n      link>\n    </div>\n  </nav>\n</template>\n\n<script>\nexport default {}\n</script>\n```", "```js\n<template>\n  <div>\n    <navigation-bar></navigation-bar>\n    <section class=\"section\">\n      <nuxt class=\"container\"/>\n    </section>\n  </div>\n</template>\n\n<script>\nimport NavigationBar from '../components/NavigationBar'\n\nexport default {\n  components: {\n    NavigationBar\n  }\n}\n</script>\n```", "```js\n{\n  \"recipes\": [\n    { \"id\": 1, \"title\": \"Blueberry and Chocolate Cake\", \"categoryId\": 1, \"image\": \"https://static.pexels.com/photos/291528/pexels-photo-291528.jpeg\" },\n    { \"id\": 2, \"title\": \"Chocolate Cheesecake\", \"categoryId\": 1, \"image\": \"https://images.pexels.com/photos/47013/pexels-photo-47013.jpeg\"},\n    { \"id\": 3, \"title\": \"New York and Berry Cheesecake\", \"categoryId\": 1, \"image\": \"https://images.pexels.com/photos/14107/pexels-photo-14107.jpeg\"},\n    { \"id\": 4, \"title\": \"Salad with Light Dressing\", \"categoryId\": 2, \"image\": \"https://static.pexels.com/photos/257816/pexels-photo-257816.jpeg\"},\n    { \"id\": 5, \"title\": \"Salmon Slices\", \"categoryId\": 2, \"image\": \"https://static.pexels.com/photos/629093/pexels-photo-629093.jpeg\" },\n    { \"id\": 6, \"title\": \"Mushroom, Tomato and Sweetcorn Pizza\", \"categoryId\": 3, \"image\": \"https://static.pexels.com/photos/7658/food-pizza-box-chalkboard.jpg\" },\n    { \"id\": 7, \"title\": \"Fresh Burger\", \"categoryId\": 4, \"image\": \"https://images.pexels.com/photos/460599/pexels-photo-460599.jpeg\" }\n  ],\n  \"categories\": [\n    { \"id\": 1, \"name\": \"Dessert\", \"description\": \"Delcious desserts that range from creamy New York style cheesecakes to scrumptious blueberry and chocolate cakes.\"},\n    { \"id\": 2, \"name\": \"Healthy Eating\", \"description\": \"Healthy options don't have to be boring with our fresh salmon slices and sweet, crispy salad.\"},\n    { \"id\": 3, \"name\": \"Pizza\", \"description\": \"Pizza is always a popular choice, chef up the perfect meat feast with our recipes!\"},\n    { \"id\": 4, \"name\": \"Burgers\", \"description\": \"Be the king of the party with our flagship BBQ Burger recipe, or make something lighter with our veggie burgers!\"}\n  ]\n}\n```", "```js\n$ npm install json-server -g\n```", "```js\n$ json-server --watch db.json --port 3001\n```", "```js\n$ npm install axios\n```", "```js\nimport axios from 'axios'\n\nexport default {\n  asyncData ({ req, params }) {\n    return axios.get(`http://localhost:3001/categories`)\n      .then((res) => {\n        return {\n          categories: res.data\n        }\n      })\n  },\n}\n```", "```js\n<template>\n  <div class=\"card\">\n    <header class=\"card-header\">\n      <p class=\"card-header-title\">\n        {{category.name}}\n      </p>\n    </header>\n    <div class=\"card-content\">\n      <div class=\"content\">\n        {{category.description}}\n      </div>\n    </div>\n    <footer class=\"card-footer\">\n      <nuxt-link :to=\"categoryLink\" class=\"card-footer-\n      item\">View</nuxt-link>\n    </footer>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  props: ['category'],\n  computed: {\n    categoryLink () {\n      return `/categories/${this.category.id}`\n    }\n  }\n}\n</script>\n\n<style scoped>\ndiv {\n  margin: 10px;\n}\n</style>\n```", "```js\n<template>\n  <div>\n    <app-category v-for=\"category in categories\" :key=\"category.id\" \n    :category=\"category\"></app-category>\n  </div>\n</template>\n\n<script>\nimport Category from '../components/Category'\nimport axios from 'axios'\n\nexport default {\n  asyncData ({ req, params }) {\n    return axios.get(`http://localhost:3001/categories`)\n      .then((res) => {\n        return {\n          categories: res.data\n        }\n      })\n  },\n  components: {\n    'app-category': Category\n  }\n}\n</script>\n```", "```js\n<script>\nimport axios from 'axios'\n\nexport default {\n  validate ({ params }) {\n    return !isNaN(+params.id)\n  },\n  asyncData ({ req, params }) {\n    return axios.get(`http://localhost:3001/recipes? \n    categoryId=${params.id}`)\n      .then((res) => {\n        return {\n          recipes: res.data\n        }\n      })\n  },\n}\n</script>\n```", "```js\n<template>\n  <div class=\"recipe\">\n    <div class=\"card\">\n      <div class=\"card-image\">\n        <figure class=\"image is-4by3\">\n          <img :src=\"recipe.image\">\n        </figure>\n      </div>\n      <div class=\"card-content has-text-centered\">\n        <div class=\"content\">\n          {{recipe.title}}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  props: ['recipe']\n}\n</script>\n\n<style>\n.recipe {\n  padding: 10px; \n  margin: 5px;\n}\n</style>\n```", "```js\n<template>\n  <div>\n    <app-recipe v-for=\"recipe in recipes\" :key=\"recipe.id\" \n    :recipe=\"recipe\"></app-recipe>\n  </div>\n</template>\n\n<script>\nimport Recipe from '../../components/Recipe'\nimport axios from 'axios'\n\nexport default {\n  validate ({ params }) {\n    return !isNaN(+params.id)\n  },\n  asyncData ({ req, params }) {\n    return axios.get(`http://localhost:3001/recipes?\n    categoryId=${params.id}`)\n      .then((res) => {\n        return {\n          recipes: res.data\n        }\n      })\n  },\n  components: {\n    'app-recipe': Recipe\n  }\n}\n</script>\n```", "```js\n<template>\n  <div>\n    <div class=\"has-text-centered\" v-if=\"error.statusCode === 404\">\n      <img src=\"https://images.pexels.com/photos/127028/pexels-photo-\n      127028.jpeg\" alt=\"\">\n        <h1 class=\"title\">Page not found: 404</h1>\n        <h2 class=\"subtitle\">\n          <nuxt-link to=\"/\">Back to the home page</nuxt-link>\n        </h2>\n    </div>\n    <div v-else class=\"has-text-centered\">\n      <h1 class=\"title\">An error occured.</h1>\n      <h2 class=\"subtitle\">\n        <nuxt-link to=\"/\">Back to the home page</nuxt-link>\n      </h2>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  props: ['error'],\n}\n</script>\n```", "```js\n$ npm install vuelidate\n```", "```js\nimport Vue from 'vue'\nimport Vuelidate from 'vuelidate'\n\nVue.use(Vuelidate)\n```", "```js\nplugins: ['~/plugins/Vuelidate']\n```", "```js\nbuild: {\n vendor: ['vuelidate'],\n // Omitted\n}\n```", "```js\nimport { required, minLength } from 'vuelidate/lib/validators'\n\nexport default {\n  data () {\n    return {\n      title: '',\n      image: '',\n      steps: '',\n      categoryId: 1\n    }\n  },\n  validations: {\n    title: {\n      required,\n      minLength: minLength(4)\n    },\n    image: {\n      required\n    },\n    steps: {\n      required,\n      minLength: minLength(30)\n    }\n  },\n}\n```", "```js\n<template>\n  <form @submit.prevent=\"submitRecipe\">\n    <div class=\"field\">\n      <label class=\"label\">Recipe Title</label>\n      <input class=\"input\" :class=\"{ 'is-danger': $v.title.$error}\" v-\n      model.trim=\"title\" @input=\"$v.title.$touch()\" type=\"text\">\n      <p class=\"help is-danger\" v-if=\"!$v.title.required && \n      $v.title.$dirty\">Title is required</p>\n      <p class=\"help is-danger\" v-if=\"!$v.title.minLength && \n      $v.title.$dirty\">Title must be at least 4 characters.</p>\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\">Recipe Image URL</label>\n      <input class=\"input\" :class=\"{ 'is-danger': $v.image.$error}\" v-\n      model.trim=\"image\" @input=\"$v.image.$touch()\" type=\"text\">\n      <p class=\"help is-danger\" v-if=\"!$v.image.required && \n      $v.image.$dirty\">Image URL is required</p>\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\">Steps</label>\n      <textarea class=\"textarea\" rows=\"5\" :class=\"{ 'is-danger': \n      $v.steps.$error}\" v-model=\"steps\" @input=\"$v.steps.$touch()\" \n      type=\"text\">\n      </textarea>\n      <p class=\"help is-danger\" v-if=\"!$v.steps.required && \n      $v.steps.$dirty\">Recipe steps are required.</p>\n      <p class=\"help is-danger\" v-if=\"!$v.steps.minLength && \n      $v.steps.$dirty\">Steps must be at least 30 characters.</p>\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\">Category</label>\n      <div class=\"control\">\n        <div class=\"select\">\n          <select v-model=\"categoryId\" @input=\"$v.categoryId.$touch()\">\n            <option value=\"1\">Dessert</option>\n            <option value=\"2\">Healthy Eating</option>\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <button :disabled=\"$v.$invalid\" class=\"button is-\n    primary\">Add</button>\n  </form>\n</template>\n```", "```js\nimport axios from 'axios'\n\nexport default {\n  // Omitted\n  methods: {\n    submitRecipe () {\n      const recipe = { title: this.title, image: this.image, steps: \n      this.steps, categoryId: Number(this.categoryId) }\n      axios.post('http://localhost:3001/recipes', recipe)\n    }\n  },\n}\n```", "```js\n<template>\n  <nav class=\"navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\n    <div class=\"navbar-brand\">\n      <nuxt-link class=\"navbar-item\" to=\"/\">Hearty Home Cooking</nuxt-\n      link>\n    </div>\n    <div class=\"navbar-end\">\n      <nuxt-link class=\"navbar-item\" to=\"/recipes/new\">+ Add New \n      Recipe</nuxt-\n     link>\n    </div>\n  </nav>\n</template>\n```", "```js\n.page-enter-active, .page-leave-active {\n  transition: all 0.25s;\n}\n\n.page-enter, .page-leave-active {\n  opacity: 0;\n  transform: scale(2);\n}\n```", "```js\n css: ['~/assets/transition.css']\n```", "```js\n$ npm run build\n```", "```js\n$ npm run generate\n```", "```js\nmode: 'spa'\n```", "```js\n$ npm run build \n```"]