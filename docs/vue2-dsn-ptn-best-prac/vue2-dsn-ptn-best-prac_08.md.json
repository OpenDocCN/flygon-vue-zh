["```js\n# Create a new Vue project\n$ vue init webpack-simple vue-router-basics\n\n# Navigate to directory\n$ cd vue-router-basics\n\n# Install dependencies\n$ npm install\n\n# Install Vue Router\n$ npm install vue-router\n\n# Run application\n$ npm run dev\n```", "```js\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\n\nimport App from './App.vue';\n\nVue.use(VueRouter);\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n});\n```", "```js\nconst Hello = { template: `<h1>Hello</h1>` };\nconst World = { template: `<h1>World</h1>`};\n```", "```js\nconst routes = [\n  { path: '/hello', component: Hello },\n  { path: '/world', component: World }\n];\n```", "```js\nconst router = new VueRouter({\n  routes\n});\n```", "```js\nnew Vue({\n  el: '#app',\n  router,\n  render: h => h(App)\n});\n```", "```js\n<template>\n  <div id=\"app\">\n    <router-view/>\n  </div>\n</template>\n```", "```js\n// Components\nconst Hello = { template: `<h1>Hello</h1>` };\nconst HelloName = { template: `<h1>Hello {{ $route.params.name}}` }\n\n// Routes\nconst routes = [\n { path: '/hello', component: Hello },\n { path: '/hello/:name', component: HelloName },\n]\n```", "```js\nconst routes = [\n  { path: '/hello', component: Hello },\n  { path: '/hello/:name', component: HelloName, props: true},\n]\n```", "```js\nconst HelloName = {\n  props: ['name'],\n  template: `<h1>Hello {{ name }}</h1>`,\n  created() {\n    console.log(`Hello ${this.name}`)\n  }\n}\n```", "```js\nconst HelloName = {\n  props: ['name'],\n  template: `<h1>Hello {{ name }}</h1>`,\n  beforeRouteUpdate(to, from, next) {\n    console.log(to);\n    console.log(from);\n    console.log(`Hello ${to.params.name}`)\n  },\n}\n```", "```js\n  beforeRouteUpdate(to, from, next) {\n    console.log(to);\n    console.log(from);\n    console.log(`Hello ${to.params.name}`)\n    next();\n  },\n```", "```js\n beforeRouteEnter(to, from, next) {\n  console.log(`I'm called before entering the route!`)\n  next();\n }\n```", "```js\n beforeRouteLeave(to, from, next) {\n console.log(`I'm called before leaving the route!`)\n console.log(`I have access to the component instance, here's proof! \n Name: ${this.name}`);\n next();\n }\n```", "```js\nconst router = new VueRouter({\n  routes\n})\n\nrouter.beforeEach((to, from, next) => {\n console.log(`Route to`, to)\n console.log(`Route from`, from)\n next();\n});\n```", "```js\nrouter.beforeResolve((to, from, next) => {\n console.log(`Before resolve:`)\n console.log(`Route to`, to)\n console.log(`Route from`, from)\n next();\n});\n```", "```js\nrouter.afterEach((to, from) => {\n console.log(`After each:`)\n console.log(`Route to`, to)\n console.log(`Route from`, from)\n});\n```", "```js\nconst MyAsyncComponent = () => ({\ncomponent: import ('./LazyComponent.vue'),\nloading: LoadingComponent,\nerror: ErrorComponent,\ndelay: 150,\ntimeout: 3000\n})\n```", "```js\nbeforeRouteEnter (to, from, next) {   \n next(comp => {\n  // 'comp' inside this closure is equal to the component instance\n }) \n```", "```js\n<template>\n  <div id=\"app\">\n    <nav>\n      <button @click=\"navigateToRoute('/hello')\">/Hello</button>\n      <button \n       @click=\"navigateToRoute('/hello/Paul')\">/Hello/Name</button>\n    </nav>\n    <router-view></router-view>\n  </div>\n</template>\n```", "```js\n<script>\nexport default {\n  methods: {\n    navigateToRoute(routeName) {\n      this.$router.push({ path: routeName });\n    },\n  },\n};\n</script>\n```", "```js\n// Navigate with string literal\nthis.$router.push('hello')\n\n// Navigate with object options\nthis.$router.push({ path: 'hello' })\n\n// Add parameters\nthis.$router.push({ name: 'hello', params: { name: 'Paul' }})\n\n// Using query parameters /hello?name=paul\nthis.$router.push({ path: 'hello', query: { name: 'Paul' }})\n```", "```js\nthis.$router.replace({ path: routeName });\n```", "```js\n// Navigate forward one record\nthis.$router.go(1);\n\n// Navigate backward one record\nthis.$router.go(-1);\n\n// Navigate forward three records\nthis.$router.go(3);\n\n// Navigate backward three records\nthis.$router.go(-3);\n```", "```js\n# Create a new Vue project\n$ vue init webpack-simple vue-lazy-loading\n\n# Navigate to directory\n$ cd vue-lazy-loading\n\n# Install dependencies\n$ npm install\n\n# Install Vue Router\n$ npm install vue-router\n\n# Run application\n$ npm run dev\n```", "```js\n// Hello.vue\n<template>\n  <div>\n    <h1>Hello</h1>\n    <router-link to=\"/world\">Next</router-link>\n  </div>\n</template>\n\n<script>\nexport default {};\n</script>\n```", "```js\n// World.vue\n<template>\n  <div>\n    <h1>World</h1>\n    <router-link to=\"/hello\">Back</router-link>\n  </div>\n</template>\n\n<script>\nexport default {};\n</script>\n```", "```js\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\n\nVue.use(VueRouter);\n```", "```js\n$ npm install --save-dev babel-plugin-syntax-dynamic-import\n```", "```js\n{\n \"presets\": [[\"env\", { \"modules\": false }], \"stage-3\"],\n \"plugins\": [\"syntax-dynamic-import\"]\n}\n```", "```js\nconst Hello = () => import('./components/Hello');\nconst World = () => import('./components/World');\n```", "```js\nconst routes = [\n { path: '/', redirect: '/hello' },\n { path: '/hello', component: Hello },\n { path: '/World', component: World },\n];\n\nconst router = new VueRouter({\n routes,\n});\n\nnew Vue({\n el: '#app',\n router,\n render: h => h(App),\n});\n```", "```js\n# Create a new Vue project\n$ vue init webpack-simple vue-spa\n\n# Navigate to directory\n$ cd vue-spa\n\n# Install dependencies\n$ npm install\n\n# Install Vue Router and Axios\n$ npm install vue-router axios\n\n# Run application\n$ npm run dev\n```", "```js\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\n\nVue.use(VueRouter)\n```", "```js\nexport const userRoutes = [];\n```", "```js\nimport { userRoutes } from '../components/user/user.routes';\n\nconst routes = [...userRoutes];\n```", "```js\nconst router = new VueRouter({\n  // This is ES2015+ shorthand for routes: routes\n  routes,\n});\n```", "```js\nexport default router;\n```", "```js\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\nnew Vue({\n el: '#app',\n router,\n render: h => h(App),\n});\n```", "```js\n<template>\n  <ul>\n    <li v-for=\"user in users\" :key=\"user.id\">\n      {{user.name}}\n    </li>\n  </ul> \n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      users: [\n        {\n          id: 1,\n          name: 'Leanne Graham',\n        }\n      ],\n    };\n  },\n};\n</script>\n```", "```js\nimport UserList from './UserList';\n\nexport const userRoutes = [{ path: '/', component: UserList }];\n```", "```js\n<template>\n <div>\n  <router-view></router-view>\n </div>\n</template>\n\n<script>\nexport default {};\n</script>\n\n<style>\n\n</style>\n```", "```js\nimport axios from 'axios';\n\nexport const API = axios.create({\n baseURL: `https://jsonplaceholder.typicode.com/`\n})\n```", "```js\n<template>\n  <ul>\n    <li v-for=\"user in users\" :key=\"user.id\">\n      {{user.name}}\n    </li>\n  </ul> \n</template>\n\n<script>\nimport { API } from '../../utils/api';\nexport default {\n  data() {\n    return {\n      users: [],\n    };\n  },\n  beforeRouteEnter(to, from, next) {\n    API.get(`users`)\n      .then(response => next(vm => (vm.users = response.data)))\n      .catch(error => next(error));\n  },\n};\n</script>\n```", "```js\n<template>\n  <div class=\"container\">\n    <div class=\"user\">\n      <div class=\"user__name\">\n        <h1>{{userInfo.name}}</h1>\n        <p>Person ID {{$route.params.userId}}</p>\n        <p>Username: {{userInfo.username}}</p>\n        <p>Email: {{userInfo.email}}</p>\n      </div>\n      <div class=\"user__address\" v-if=\"userInfo && userInfo.address\">\n        <h1>Address</h1>\n        <p>Street: {{userInfo.address.street}}</p>\n        <p>Suite: {{userInfo.address.suite}}</p>\n        <p>City: {{userInfo.address.city}}</p>\n        <p>Zipcode: {{userInfo.address.zipcode}}</p>\n        <p>Lat: {{userInfo.address.geo.lat}} Lng: \n        {{userInfo.address.geo.lng}} </p>\n      </div>\n\n      <div class=\"user__other\" >\n        <h1>Other</h1>\n        <p>Phone: {{userInfo.phone}}</p>\n        <p>Website: {{userInfo.website}}</p>\n        <p v-if=\"userInfo && userInfo.company\">Company: \n        {{userInfo.company.name}}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { API } from '../../utils/api';\n\nexport default {\n  data() {\n    return {\n      userInfo: {},\n    };\n  },\n  beforeRouteEnter(to, from, next) {\n    next(vm => \n      API.get(`users/${to.params.userId}`)\n        .then(response => (vm.userInfo = response.data))\n        .catch(err => console.error(err))\n    )\n  },\n};\n</script>\n\n<style>\n.container {\n line-height: 2.5em;\n text-align: center;\n}\n</style>\n```", "```js\nimport UserList from './UserList';\nimport UserDetail from './UserDetail';\n\nexport const userRoutes = [\n { path: '/', component: UserList },\n { path: '/:userId', component: UserDetail },\n];\n```", "```js\n<template>\n  <ul>\n    <li v-for=\"user in users\" :key=\"user.id\">\n      <router-link :to=\"{ path: `/${user.id}` }\">\n      {{user.name}}\n      </router-link>\n    </li>\n  </ul> \n</template>\n```", "```js\n<template>\n  <div>\n    <ul>\n      <li v-for=\"post in posts\" :key=\"post.id\">{{post.title}}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { API } from '../../utils/api';\nexport default {\n  data() {\n    return {\n      posts: [],\n    };\n  },\n  beforeRouteEnter(to, from, next) {\n       next(vm =>\n          API.get(`posts?userId=${to.params.userId}`)\n          .then(response => (vm.posts = response.data))\n          .catch(err => console.error(err))\n     )\n  },\n};\n</script>\n```", "```js\nimport UserList from './UserList';\nimport UserDetail from './UserDetail';\nimport UserPosts from './UserPosts';\n\nexport const userRoutes = [\n  { path: '/', component: UserList },\n  {\n    path: '/:userId',\n    component: UserDetail,\n    children: [{ path: '/:userId', component: UserPosts }],\n  },\n];\n```", "```js\n<template>\n  <div class=\"container\">\n    <div class=\"user\">\n        // Omitted\n    </div>\n    <div class=\"posts\">\n      <h1>Posts</h1>\n      <router-view></router-view>\n    </div>\n  </div>\n</template>\n```", "```js\n<style>\n.container {\n  line-height: 2.5em;\n  text-align: center;\n}\n.user {\n  display: inline-block;\n  width: 49%;\n}\n.posts {\n  vertical-align: top;\n  display: inline-block;\n  width: 49%;\n}\nul {\n  list-style-type: none;\n}\n</style>\n```"]