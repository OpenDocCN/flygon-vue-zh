["```js\n# Create a new Vue project\n$ vue init webpack-simple vue-model\n\n# Navigate to directory\n$ cd vue-model\n\n# Install dependencies\n$ npm install\n\n# Run application\n$ npm run dev\n```", "```js\n<template>\n <div id=\"app\">\n  <label>Name:</label>\n  <input type=\"text\">\n </div>\n</template>\n```", "```js\n<template>\n  <div id=\"app\">\n    <label>Name:</label>\n    <input type=\"text\" v-model=\"name\">\n    <p>{{name}}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n     name: ''\n    }\n  }\n}\n</script>\n```", "```js\n <input type=\"checkbox\" v-model=\"checked\">\n <span>Am I checked? {{checked ? 'Yes' : 'No' }}</span>\n```", "```js\n# Create a new Vue project\n$ vue init webpack-simple vue-for\n\n# Navigate to directory\n$ cd vue-for\n\n# Install dependencies\n$ npm install\n\n# Run application\n$ npm run dev\n```", "```js\n<script>\nexport default {\n  name: 'app',\n  data () {\n    return {\n      groceries: [\n        {\n          id: 1,\n          name: 'Pizza',\n          quantity: 1\n        },\n        {\n          id: 2,\n          name: 'Hot Sauce',\n          quantity: 5\n        },\n        {\n          id: 3,\n          name: 'Salad',\n          quantity: 1\n        },\n        {\n          id: 4,\n          name: 'Water',\n          quantity: 1\n        },\n        {\n          id: 4,\n          name: 'Yoghurt',\n          quantity: 1\n        }\n      ]\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: block;\n}\n\n</style>\n```", "```js\n<template>\n  <div id=\"app\">\n    <h1>Shopping List</h1>\n    <ul>\n      <li v-for=\"item in groceries\" v-bind:key=\"item.id\">\n        {{item.name}}\n      </li>\n    </ul>\n  </div>\n</template>\n```", "```js\n# Create a new Vue project\n$ vue init webpack-simple vue-bind\n\n# Navigate to directory\n$ cd vue-bind\n\n# Install dependencies\n$ npm install\n\n# Run application\n$ npm run dev\n```", "```js\n<script>\nexport default {\n data () {\n  return {\n   red: false\n  }\n }\n}\n</script>\n```", "```js\n<template>\n <div id=\"app\">\n  <h1>Vue Bindings</h1>\n\n  <input type=\"checkbox\" v-model=\"red\" >\n  <span>Red</span>\n </div>\n</template>\n```", "```js\n<style>\n.red {\n color: red;\n}\n</style>\n```", "```js\n<h1 v-bind:class=\"{ 'red': red }\">Vue Bindings</h1>\n```", "```js\ndata () {\n return {\n  red: false,\n  strikeThrough: false\n }\n}\n```", "```js\n<input type=\"checkbox\" v-model=\"strikeThrough\">\n<span>Strike Through</span>\n```", "```js\n<style>\n.red {\n color: red;\n}\n\n.strike-through {\n text-decoration: line-through;\n}\n</style>\n```", "```js\n<h1 v-bind:class=\"{ 'red': red, 'strike-through': strikeThrough }\">Vue Bindings</h1>\n```", "```js\ndata () {\n return {\n  headingStyles: {\n   color: 'blue',\n   fontSize: '20px',\n   textAlign: 'center'\n  }\n }\n}\n```", "```js\n<h1 v-bind:style=\"headingStyles\">Vue Bindings</h1>\n```", "```js\ndata () {\n return {\n  headingStyles: {\n   color: 'blue',\n   fontSize: '20px',\n  },\n  layoutStyles: {\n   textAlign: 'center',\n   padding: '10px'\n  }\n }\n}\n```", "```js\n<template>\n <h1 v-bind:style=\"[headingStyles, layoutStyles]\">Vue Bindings</h1>\n</template>\n```", "```js\n# Create a new Vue project\n$ vue init webpack-simple vue-on\n\n# Navigate to directory\n$ cd vue-on\n\n# Install dependencies\n$ npm install\n\n# Run application\n$ npm run dev\n```", "```js\n<template>\n <div id=\"app\">\n  <ul>\n   <li v-for=\"(p, index) in person\" :key=\"index\">\n    {{p}}\n   </li>\n  </ul>\n  <input type=\"text\" v-model=\"person\" v-on:keyup.enter=\"addPerson\" />\n  <button v-on:click=\"addPerson\">Add {{ person}} </button>\n </div>\n</template>\n\n<script>\nexport default {\n name: 'app',\n data () {\n  return {\n   person: '',\n   people: []\n  }\n },\n methods: {\n  addPerson() {\n   this.people = this.people.concat(\n    {id: this.people.length, name: this.person}\n   );\n  this.person = '';\n  }\n }\n}\n</script>\n```", "```js\n<template>\n  <div id=\"app\">\n    <ul>\n      <li v-for=\"p in people\" v-bind:key=\"p.id\" >\n        {{p}}\n      </li>\n    </ul>\n\n    <form v-on:submit=\"addPerson\">\n      <input type=\"text\" v-model=\"person\" />\n      <button>Add {{ person}} </button>\n    </form>\n  </div>\n</template>\n```", "```js\n <form v-on:submit.prevent=\"addPerson\">\n  <input type=\"text\" v-model=\"person\" />\n  <button>Add {{ person}} </button>\n </form>\n```", "```js\n# Create a new Vue project\n$ vue init webpack-simple vue-conditionals\n\n# Navigate to directory\n$ cd vue-conditionals\n\n# Install dependencies\n$ npm install\n\n# Run application\n$ npm run dev\n```", "```js\n<template>\n<div id=\"app\">\n <article v-show=\"admin\">\n  <header>Protected Content</header>\n <section class=\"main\">\n  <h1>If you can see this, you're an admin!</h1>\n </section>\n</article>\n\n <button @click=\"admin = !admin\">Flip permissions</button>\n</div>\n</template>\n\n<script>\nexport default{\nname: 'app',\n data (){\n  return{\n   admin: true\n    }\n  }\n}\n</script>\n```", "```js\n <article v-if=\"admin\">\n  <header>Protected Content</header>\n  <section class=\"main\">\n   <h1>If you can see this, you're an admin!</h1>\n  </section>\n </article>\n```", "```js\n<article v-if=\"admin\">\n  <header>Protected Content</header>\n  <section class=\"main\">\n    <h1>If you can see this, you're an admin!</h1>\n  </section>\n</article>\n<article v-else>\n  <header>You're not an admin!</header>\n  <section class=\"main\">\n    <h1>Perhaps you shouldn't be here.</h1>\n  </section>\n</article>\n```", "```js\n<article v-if=\"admin\">\n  <header>Protected Content</header>\n  <section class=\"main\">\n    <h1>If you can see this, you're an admin!</h1>\n  </section>\n</article>\n<h1>The v-else will be ignored.</h1>\n<article v-else>\n  <header>You're not an admin!</header>\n  <section class=\"main\">\n    <h1>Perhaps you shouldn't be here.</h1>\n  </section>\n</article>\n```", "```js\n$ npm install babel-polyfill --save-dev\n```", "```js\nmodule.exports = {\n entry: ['babel-polyfill', './src/main.js'],\n output: {\n  path: path.resolve(__dirname, './dist'),\n  publicPath: '/dist/',\n  filename: 'build.js',\n },\n // Omitted\n```", "```js\nexport default {\n name: 'app',\n data() {\n  return {\n   role: '',\n  }\n },\n  methods: {\n   *returnRole() {\n    yield 'guest';\n    yield 'user';\n    yield 'admin';\n  }\n }\n};\n```", "```js\n data() {\n  return {\n   role: '',\n   roleList: this.returnRole()\n  }\n },\n methods: {\n  getRole() {\n   /**\n    * Calling this.roleList.next() gives us an Iterator object with the interface of:\n    * { value: string, done: boolean}\n    * We can therefore check to see whether this was the >last< yielded value with done, or get the result by calling .value\n    */\n\n    this.role = this.roleList.next().value;\n },\n```", "```js\n<template>\n <div id=\"app\">\n  <article v-if=\"role === 'admin'\">\n   <header>You're an admin!</header>\n   <section class=\"main\">\n    <h1>If you can see this, you're an admin!</h1>\n   </section>\n  </article>\n  <article v-else-if=\"role === 'user'\">\n   <header>You're a user!</header>\n   <section class=\"main\">\n    <h1>Enjoy your stay!</h1>\n   </section>\n  </article>\n <article v-else-if=\"role === 'guest'\">\n  <header>You're a guest!</header>\n  <section class=\"main\">\n   <h1>Maybe you should make an account.</h1>\n  </section>\n </article>\n <h1 v-else>You have no role!</h1>\n <button @click=\"getRole()\">Switch Role</button>\n </div>\n</template>\n```", "```js\n# Create a new Vue project\n$ vue init webpack-simple vue-filters\n\n# Navigate to directory\n$ cd vue-filters\n\n# Install dependencies\n$ npm install\n\n# Run application\n$ npm run dev\n```", "```js\n<template>\n <div id=\"app\">\n  <ul>\n   <li v-for=\"person in people\" v-bind:key=\"person.id\">\n    {{person.name}} {{person.dob}}\n   </li>\n  </ul>\n </div>\n</template>\n\n<script>\nexport default {\n name: 'app',\n data() {\n  return {\n   people: [\n    {\n     id: 1,\n     name: 'Paul',\n     dob: new Date(2000, 5, 29),\n    },\n    {\n     id: 2,\n     name: 'Terry',\n     dob: new Date(1994, 10, 25),\n    },\n    {\n     id: 3,\n     name: 'Alex',\n     dob: new Date(1973, 4, 15),\n    },\n    {\n     id: 4,\n     name: 'Deborah',\n     dob: new Date(1954, 2, 5),\n    },\n   ],\n  };\n },\n};\n</script>\n```", "```js\n$ npm install moment --save\n```", "```js\n<script>\nimport moment from 'moment';\n\nexport default {\n // Omitted\n}\n</script>\n```", "```js\nconst convertDateToString = value => moment(String(value)).format('MM/DD/YYYY');\n```", "```js\n <ul>\n  <li v-for=\"person in people\" v-bind:key=\"person.id\">\n   {{person.name}} {{person.dob | date}}\n  </li>\n </ul>\n```", "```js\nexport default {\n filters: {\n  date: convertDateToString,\n },\n```", "```js\nimport moment from 'moment';\n\nexport const convertDateToString = value =>\n moment(String(value)).format('MM/DD/YYYY');\n```", "```js\nimport Vue from 'vue';\nimport App from './App.vue';\nimport { convertDateToString } from './filters/date/date.filter';\n\nVue.filter('date', convertDateToString);\n\nnew Vue({\n el: '#app',\n render: h => h(App),\n});\n```"]