["```js\n vue init webpack-simple e-shop\n      cd e-shop\n      npm install\n      npm install -S babel-polyfill\n```", "```js\n npm i -D stylus stylus-loader\n```", "```js\n npm i -S axios vue-router vuex vuex-router-sync\n```", "```js\n npm i -D json-server\n```", "```js\n \"db\": \"json-server --watch db.json\"\n```", "```js\nnpm run db\n```", "```js\nnpm run dev\n```", "```js\n npm i -D autoprefixer\n```", "```js\n      module.exports = {\n        plugins: [\n          require('autoprefixer'),\n        ],\n      }\n```", "```js\n.store-cart-item\n  user-select none\n```", "```js\n.store-item[data-v-1af8c5dc] {\n  -webkit-user-select: none;\n -moz-user-select: none;\n -ms-user-select: none;\n  user-select: none;\n}\n```", "```js\n\"> 1%\",\n\"last 2 versions\",\n\"not ie <= 8\"\n```", "```js\n\"Firefox >= 20\"\n```", "```js\n npm i -D eslint eslint-config-standard eslint-plugin-vue@beta\n```", "```js\n npm i -D eslint-plugin-import eslint-plugin-node eslint-plugin- \n       promise eslint-plugin-standard\n```", "```js\n npm i -D babel-eslint\n```", "```js\nmodule.exports = {\n  // Use only this configuration\n  root: true,\n  // File parser\n  parser: 'vue-eslint-parser',\n  parserOptions: {\n    // Use babel-eslint for JavaScript\n    'parser': 'babel-eslint',\n    'ecmaVersion': 2017,\n    // With import/export syntax\n    'sourceType': 'module'\n  },\n  // Environment global objects\n  env: {\n    browser: true,\n    es6: true,\n  },\n  extends: [\n    // https://github.com/feross/standard/blob/master/RULES.md#javascript-standard-style\n    'standard',\n    // https://github.com/vuejs/eslint-plugin-vue#bulb-rules\n    'plugin:vue/recommended',\n  ],\n}\n```", "```js\nrules: {\n  // https://github.com/babel/babel-eslint/issues/517\n  'no-use-before-define': 'off',\n  'comma-dangle': ['error', 'always-multiline'],\n},\n```", "```js\n\"eslint\": \"eslint --ext .js,.jsx,.vue src\"\n```", "```js\n\"eslint\": \"eslint --ext .js,.jsx,.vue src --fix\"\n```", "```js\nnew Vue({\n  el: '#app',\n  router,\n  store,\n  ...App,\n})\n```", "```js\n// **eslint-disable-next-line no-new**\nnew Vue({\n  ...\n}) \n```", "```js\n npm i -D eslint-loader friendly-errors-webpack-plugin\n```", "```js\n      module: {\n        rules: [\n          {\n test: /\\.(jsx?|vue)$/,\n loader: 'eslint-loader',\n enforce: 'pre',\n },\n          // ...\n```", "```js\n      const FriendlyErrors = require('friendly-errors-webpack-plugin')\n```", "```js\n      } else {\n        module.exports.plugins = (module.exports.plugins ||            \n        []).concat([\n          new FriendlyErrors(),\n        ])\n      }\n```", "```js\n npm i -D jest vue-test-utils\n```", "```js\n npm i -D vue-jest jest-serializer-vue vue-server-renderer\n```", "```js\n npm i -D babel-jest babel-plugin-dynamic-import-node\n```", "```js\nmodule.exports = {\n  transform: {\n    '.+\\\\.jsx?$': '<rootDir>/node_modules/babel-jest',\n    '.+\\\\.vue$': '<rootDir>/node_modules/vue-jest',\n  },\n  snapshotSerializers: [\n    '<rootDir>/node_modules/jest-serializer-vue',\n  ],\n  mapCoverage: true,\n}\n```", "```js\n{\n  \"presets\": [\n    [\"env\", { \"modules\": false }],\n    \"stage-3\"\n  ],\n \"env\": {\n \"test\": {\n \"plugins\": [\n \"transform-es2015-modules-commonjs\",\n \"dynamic-import-node\"\n ]\n }\n }\n}\n```", "```js\n      import BaseButton from './BaseButton.vue'\n      import { shallow } from 'vue-test-utils'\n```", "```js\n describe('BaseButton', () => {\n        // Tests here\n      })\n```", "```js\n      describe('BaseButton', () => {\n        test('click event', () => {\n          // Test code\n        })\n      })\n```", "```js\n const  wrapper  =  shallow(BaseButton)\n```", "```js\n wrapper.trigger('click')\n```", "```js\n expect(wrapper.emitted().click).toBeTruthy()\n```", "```js\n \"jest\": \"jest\"\n```", "```js\n npm run jest\n```", "```js\n// Environment global objects\nenv: {\n  browser: true,\n  es6: true,\n  jest: true,\n},\n```", "```js\nimport { createRenderer } from  'vue-server-renderer'\n```", "```js\ntest('snapshot', () => {\n  const renderer = createRenderer()\n  const wrapper = shallow(BaseButton, {\n    // Props values\n    propsData: {\n      icon: 'add',\n      disabled: true,\n      badge: '3',\n    },\n    // Slots content\n    slots: {\n      default: '<span>Add Item</span>',\n    },\n  })\n  renderer.renderToString(wrapper.vm, (err, str) => {\n    if (err) throw new Error(err)\n    expect(str).toMatchSnapshot()\n  })\n})\n```", "```js\n \"jest:update\": \"jest **--updateSnapshot**\"\n```", "```js\n npm run jest:update\n```", "```js\nnpm i -S vue-i18n\n```", "```js\n      import VueI18n from 'vue-i18n'\n\n      // ...\n\n      Vue.use(VueI18n)\n```", "```js\n      export default [\n        'en',\n        'fr',\n        'es',\n        'de',\n      ]\n```", "```js\n      import VueI18n from 'vue-i18n'\n      import langs from '../../i18n'\n```", "```js\n      \"babel-preset-stage-2\": \"^6.24.1\",\n```", "```js\nnpm install --save-dev babel-preset-stage-2\n```", "```js\nasync function loadAsyncModule () {\n  await module = await import('./path/to/module')\n  console.log('default export', module.default)\n  console.log('named export', module.myExportedFunction)\n}\n```", "```js\nimport(myModulePath)\n```", "```js\nimport(`./data/${myFileName}.json`)\n```", "```js\nexport async function createI18n (locale) {\n  const { default: localeMessages } = await import(`../../i18n/locales/${locale}`)\n  const messages = {\n    [locale]: localeMessages,\n  }\n\n  const i18n = new VueI18n({\n    locale,\n    messages,\n  })\n\n  return i18n\n}\n```", "```js\nexport function createI18n (locale) {\n  return import(`../../i18n/locales/${locale}`)\n    .then(module => {\n      const localeMessages = module.default\n      // ...\n    })\n}\n```", "```js\n      export function getAutoLang () {\n        let result = window.navigator.userLanguage || \n        window.navigator.language\n        if (result) {\n          result = result.substr(0, 2)\n        }\n        if (langs.indexOf(result) === -1) {\n          return 'en'\n        } else {\n          return result\n        }\n      }\n```", "```js\n      import { createI18n, getAutoLang } from './utils/i18n'\n```", "```js\nasync function main () {\n  const locale = getAutoLang()\n const i18n = await createI18n(locale)\n  await store.dispatch('init')\n\n  // eslint-disable-next-line no-new\n  new Vue({\n   el: '#app',\n    router,\n    store,\n    i18n, // Inject i18n into the app\n    ...App,\n  })\n}\n```", "```js\n      import PageLocale from './components/PageLocale.vue'\n```", "```js\n      { path: '/locale', name: 'locale', component: PageLocale },\n```", "```js\n      <div v-if=\"$route.name !== 'locale'\">\n        <router-link :to=\"{ name: 'locale' }\">{{ $t('change-lang') }}\n        </router-link>\n      </div>\n```", "```js\n export function createRouter () {\n        const router = new VueRouter({\n          routes,\n          mode: 'history',\n          scrollBehavior (to, from, savedPosition) {\n            // ...\n          },\n        })\n\n        return router\n }\n```", "```js\n export function createStore () {\n        const store = new Vuex.Store({\n          strict: process.env.NODE_ENV !== 'production',\n\n          // ...\n\n          modules: {\n            cart,\n            item,\n            items,\n            ui,\n          },\n        })\n\n        return store\n }\n```", "```js\n export async function createApp (context) {\n        const router = createRouter()\n        const store = createStore()\n\n        sync(store, router)\n\n        const i18n = await createI18n(context.locale)\n        await store.dispatch('init')\n\n        const app = new Vue({\n          router,\n          store,\n          i18n,\n          ...App,\n        })\n\n        return {\n app,\n router,\n store,\n }\n      }\n```", "```js\nconst i18n = await createI18n(context.locale)\n```", "```js\n      import { createApp } from './app'\n      import { getAutoLang } from './utils/i18n'\n\n      const locale = getAutoLang()\n      createApp({\n        locale,\n      }).then(({ app }) => {\n        app.$mount('#app')\n      })\n```", "```js\n entry: './src/entry-client.js',\n```", "```js\nrouter.push(context.url)\n```", "```js\nimport { createApp } from './app'\n\nexport default context => {\n  return new Promise(async (resolve, reject) => {\n    const { app, router, store } = await createApp(context)\n    // Set the current route\n    router.push(context.url)\n    // TODO get matched components to preload data\n    // TODO resolve(app)\n  })\n}\n```", "```js\n asyncData ({ store }) {\n        return store.dispatch('items/fetchItems')\n      },\n```", "```js\n asyncData ({ store, route }) {\n        return store.dispatch('item/fetchStoreItemDetails', {\n          id: route.params.id,\n        })\n      },\n```", "```js\n      export default context => {\n        return new Promise(async (resolve, reject) => {\n          const { app, router, store } = await createApp(context)\n          router.push(context.url)\n          // Wait for the component resolution\n          router.onReady(() => {\n const matchedComponents = router.getMatchedComponents()\n            // TODO pre-load data\n            // TODO resolve(app)\n          }, reject)\n        })\n      }\n```", "```js\n      router.onReady(() => {\n        const matchedComponents = router.getMatchedComponents()\n\n        Promise.all(matchedComponents.map(Component => {\n if (Component.asyncData) {\n return Component.asyncData({\n store,\n route: router.currentRoute,\n })\n }\n })).then(() => {\n          // Send back the store state\n          context.state = store.state\n\n          // Send the app to the renderer\n          resolve(app)\n }).catch(reject)\n      }, reject)\n```", "```js\ncreateApp({\n  locale,\n}).then(({ app, store }) => {\n  if (window.__INITIAL_STATE__) {\n store.replaceState(window.__INITIAL_STATE__)\n }\n\n  app.$mount('#app')\n})\n```", "```js\n npm i -D webpack-merge webpack-node-externals\n```", "```js\n      output: {\n        path: path.resolve(__dirname, '../dist'),\n        publicPath: '/dist/',\n        filename: '[name].[chunkhash].js',\n      },\n```", "```js\nconst webpack = require('webpack')\nconst merge = require('webpack-merge')\nconst common = require('./common')\nconst VueSSRClientPlugin = require('vue-server-renderer/client-plugin')\n\nmodule.exports = merge(common, {\n  entry: './src/entry-client',\n  plugins: [\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'manifest',\n      minChunks: Infinity,\n    }),\n    // Generates the client manifest file\n    new VueSSRClientPlugin(),\n  ],\n})\n```", "```js\nconst merge = require('webpack-merge')\nconst common = require('./common')\nconst nodeExternals = require('webpack-node-externals')\nconst VueSSRServerPlugin = require('vue-server-renderer/server-plugin')\n\nmodule.exports = merge(common, {\n  entry: './src/entry-server',\n  target: 'node',\n  devtool: 'source-map',\n  output: {\n    libraryTarget: 'commonjs2',\n  },\n  // Skip webpack processing on node_modules\n  externals: nodeExternals({\n    // Force css files imported from no_modules\n    // to be processed by webpack\n    whitelist: /\\.css$/,\n  }),\n  plugins: [\n    // Generates the server bundle file\n    new VueSSRServerPlugin(),\n  ],\n})\n```", "```js\nnpm i -D memory-fs chokidar webpack-dev-middleware webpack-hot-middleware\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Fashion Store</title>\n  </head>\n  <body>\n    <!--vue-ssr-outlet-->\n  </body>\n</html&gt;\n```", "```js\n npm i -S express reify\n```", "```js\nconst setupDevServer = require('./server.dev')\nreadyPromise = setupDevServer({\n  server,\n  templatePath,\n  onUpdate: (bundle, options) => {\n    // Re-create the bundle renderer\n    renderer = createBundleRenderer(bundle, {\n      runInNewContext: false,\n      ...options,\n    })\n  },\n})\n```", "```js\nconst context = {\n  url: req.url,\n  // Languages sent by the browser\n  locale: req.acceptsLanguages(langs) || 'en',\n}\nrenderer.renderToString(context, (err, html) => {\n  if (err) {\n    // Render Error Page or Redirect\n    res.status(500).send('500 | Internal Server Error')\n    console.error(`error during render : ${req.url}`)\n    console.error(err.stack)\n  }\n  res.send(html)\n})\n```", "```js\n\"dev\": \"node server\",\n```", "```js\n      mounted () {\n        if (!this.items.length) {\n          this.fetchItems()\n        }\n      },\n```", "```js\n      fetchData () {\n        if (!this.details || this.details.id !== this.id) {\n          this.fetchStoreItemDetails({\n            id: this.id,\n          })\n        }\n      },\n```", "```js\n npm i -D extract-text-webpack-plugin\n```", "```js\n      const isProd = process.env.NODE_ENV === 'production'\n```", "```js\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader',\n        options: {\n          extractCSS: isProd,\n          preserveWhitespace: false,\n        },\n      },\n```", "```js\n      if (isProd) {\n        module.exports.devtool = '#source-map'\n        module.exports.plugins = (module.exports.plugins || \n        []).concat([\n          // ...\n          new webpack.optimize.ModuleConcatenationPlugin(),\n new ExtractTextPlugin({\n filename: 'common.[chunkhash].css',\n }),\n        ])\n      } else {\n       // ...\n      }\n```", "```js\nconst template = fs.readFileSync(templatePath, 'utf-8')\nconst bundle = require('./dist/vue-ssr-server-bundle.json')\nconst clientManifest = require('./dist/vue-ssr-client-manifest.json')\nrenderer = createBundleRenderer(bundle, {\n  runInNewContext: false,\n  template,\n  clientManifest,\n})\n```", "```js\n npm i -D rimraf\n```", "```js\n      \"build:client\": \"cross-env NODE_ENV=production webpack --progress \n       --hide-modules --config webpack/client.js\",\n      \"build:server\": \"cross-env NODE_ENV=production webpack --progress \n       --hide-modules --config webpack/server.js\",\n```", "```js\n      \"build\": \"rimraf dist && npm run build:client && npm run \n        build:server\",\n```", "```js\n      \"start\": \"cross-env NODE_ENV=production node server\",\n```", "```js\n npm run build\n```", "```js\n npm start\n```"]