- en: Project 6 - Real-time Dashboard with Meteor
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目6 - 使用Meteor的实时仪表板
- en: In this final chapter, we will use Vue with an entirely different stack--Meteor!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这最后一章中，我们将使用Vue与完全不同的堆栈--Meteor！
- en: 'We will discover this full-stack JavaScript framework and build a real-time
    dashboard monitoring the production of some products. We will cover the following
    topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将发现这个全栈JavaScript框架，并构建一个实时监控一些产品生产的仪表板。我们将涵盖以下主题：
- en: Installing Meteor and setting up a project
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Meteor并设置项目
- en: Storing data into a Meteor collection with a Meteor method
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Meteor方法将数据存储到Meteor集合中
- en: Subscribing to the collection and using the data in our Vue components
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订阅集合并在我们的Vue组件中使用数据
- en: 'The app will have a main page with some indicators, such as:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 该应用程序将有一个主页面，其中包含一些指标，例如：
- en: '![](assets/87e90c9d-e0be-4583-8a92-58d4612d3ad7.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/87e90c9d-e0be-4583-8a92-58d4612d3ad7.png)'
- en: It will also have another page with buttons to generate fake measures since
    we won't have real sensors available.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 它还将有另一个页面，其中有按钮可以生成虚假的测量数据，因为我们没有真正的传感器可用。
- en: Setting up the project
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置项目
- en: In this first part, we will cover Meteor and get a simple app up and running
    on this platform.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这第一部分中，我们将介绍Meteor，并在该平台上运行一个简单的应用程序。
- en: What is Meteor?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是Meteor？
- en: Meteor is a full-stack JavaScript framework for building web applications.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor是一个用于构建Web应用程序的全栈JavaScript框架。
- en: 'The mains elements of the Meteor stacks are as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor堆栈的主要元素如下：
- en: Web client (can use any frontend library, such as React or Vue); it has a client-side
    database called Minimongo
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web客户端（可以使用任何前端库，如React或Vue）；它有一个名为Minimongo的客户端数据库
- en: Server based on nodejs; it supports the modern ES2015+ features, including the
    `import/export` syntax
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于nodejs的服务器；支持现代的ES2015+功能，包括`import/export`语法
- en: Real-time database on the server using MongoDB
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在服务器上使用MongoDB的实时数据库
- en: Communication between clients and the server is abstracted; the client-side
    and server-side databases can be easily synchronized in real-time
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端和服务器之间的通信是抽象的；客户端和服务器端数据库可以轻松实时同步
- en: Optional hybrid mobile app (Android and iOS), built in one command
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可选的混合移动应用程序（Android和iOS），一条命令构建
- en: Integrated developer tools, such as a powerful command-line utility and an easy-to-use
    build tool
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成开发工具，如强大的命令行实用程序和易于使用的构建工具
- en: Meteor-specific packages (but you can also use npm packages)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Meteor特定的包（但您也可以使用npm包）
- en: As you can see, JavaScript is used everywhere. Meteor also encourages you to
    share code between the client and the server.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，JavaScript随处可见。Meteor还鼓励您在客户端和服务器之间共享代码。
- en: Since Meteor manages the entire stack, it offers very powerful systems that
    are easy to use. For example, the entire stack is fully reactive and real-time--if
    a client sends an update to the server, all the other clients will receive the
    new data and their UI will automatically be up to date.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Meteor管理整个堆栈，它提供了非常强大且易于使用的系统。例如，整个堆栈是完全反应式和实时的--如果客户端发送更新到服务器，所有其他客户端将接收新数据，并且他们的用户界面将自动更新。
- en: Meteor has its own build system called "IsoBuild" and doesn't use Webpack. It
    focuses on ease of use (no configuration), but is, as a result, also less flexible.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor有自己的构建系统称为"IsoBuild"，并且不使用Webpack。它专注于易用性（无需配置），但结果也较不灵活。
- en: Installing Meteor
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Meteor
- en: If you don't have Meteor on your system, you need to open the Installation Guide
    on the official Meteor website at [https://www.meteor.com/install](https://www.meteor.com/install).
    Follow the instructions there for your OS to install Meteor.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的系统上没有Meteor，您需要打开官方Meteor网站上的安装指南[https://www.meteor.com/install](https://www.meteor.com/install)。按照您的操作系统在那里安装Meteor。
- en: 'When you are done, you can check whether Meteor was correctly installed with
    the following command:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，您可以使用以下命令检查Meteor是否已正确安装：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The current version of Meteor should be displayed.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 应显示Meteor的当前版本。
- en: Creating the project
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建项目
- en: 'Now that Meteor is installed, let''s set up a new project:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在Meteor已安装，让我们设置一个新项目：
- en: 'Let''s create our first Meteor project with the `meteor create` command:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们使用`meteor create`命令创建我们的第一个Meteor项目：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `--bare` argument tells Meteor we want an empty project. By default, Meteor
    will generate some boilerplate files we don't need, so this keeps us from having
    to delete them.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`--bare`参数告诉Meteor我们想要一个空项目。默认情况下，Meteor会生成一些我们不需要的样板文件，因此这样可以避免我们不得不删除它们。'
- en: 'Then, we need two Meteor-specific packages--one for compiling the Vue components,
    and one for compiling Stylus inside those components. Install them with the `meteor
    add` command:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们需要两个特定于Meteor的软件包——一个用于编译Vue组件，一个用于在这些组件内部编译Stylus。使用`meteor add`命令安装它们：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We will also install the `vue` and `vue-router` package from npm:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还将从npm安装`vue`和`vue-router`软件包：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note that we use the `meteor npm` command instead of just `npm`. This is to
    have the same environment as Meteor (nodejs and npm versions).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们使用`meteor npm`命令，而不是只用`npm`。这是为了与Meteor（nodejs和npm版本）保持相同的环境。
- en: 'To start our Meteor app in development mode, just run the `meteor` command:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在开发模式下启动我们的Meteor应用程序，只需运行`meteor`命令：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Meteor should start an HTTP proxy, a MongoDB, and the nodejs server:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor应该启动一个HTTP代理、一个MongoDB和nodejs服务器：
- en: '![](assets/f841197f-6922-486c-85ed-664cec9bd2af.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f841197f-6922-486c-85ed-664cec9bd2af.png)'
- en: It also shows the URL where the app is available; however, if you open it right
    now, it will be blank.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 它还显示了应用程序可用的URL；但是，如果您现在打开它，它将是空白的。
- en: Our first Vue Meteor app
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们的第一个Vue Meteor应用程序
- en: 'In this section, we will display a simple Vue component in our app:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将在我们的应用程序中显示一个简单的Vue组件：
- en: 'Create a new `index.html` file inside the project directory and tell Meteor
    we want `div` in the page body with the `app` id:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目目录中创建一个新的`index.html`文件，并告诉Meteor我们希望在页面主体中有`app` id的`div`：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This is not a real HTML file. It is a special format where we can inject additional
    elements to the `head` or `body` section of the final HTML page. Here, Meteor
    will add a `title` into the `head` section and the `<div>` into the `body` section.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是一个真正的HTML文件。这是一种特殊的格式，我们可以向最终HTML页面的`head`或`body`部分注入附加元素。在这里，Meteor将在`head`部分添加一个`title`，在`body`部分添加`<div>`。
- en: 'Create a new `client` folder, new `components` subfolder, and a new `App.vue`
    component with a simple template:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`client`文件夹中创建一个新的`components`子文件夹，并创建一个名为`App.vue`的新组件，其中包含一个简单的模板：
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Download ([https://github.com/Akryum/packt-vue-project-guide/tree/master/chapter8-full/client](https://github.com/Akryum/packt-vue-project-guide/tree/master/chapter8-full/client))
    this stylus file in the `client` folder and add it to the main `App.vue` component:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`client`文件夹中下载（[https://github.com/Akryum/packt-vue-project-guide/tree/master/chapter8-full/client](https://github.com/Akryum/packt-vue-project-guide/tree/master/chapter8-full/client)）这个stylus文件，并将其添加到主`App.vue`组件中：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Create a `main.js` file in the `client` folder that starts the Vue application
    inside the `Meteor.startup` hook:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`client`文件夹中创建一个`main.js`文件，该文件在`Meteor.startup`钩子内启动Vue应用程序：
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In a Meteor app, it is recommended that you create the Vue app inside the `Meteor.startup`
    hook to ensure that all the Meteor systems are ready before starting the frontend.This
    code will only be run on the client because it is located in a `client` folder.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在Meteor应用程序中，建议您在`Meteor.startup`钩子内创建Vue应用程序，以确保在启动前端之前所有Meteor系统都已准备就绪。此代码仅在客户端上运行，因为它位于`client`文件夹中。
- en: You should now have a simple app displayed in your browser. You can also open
    the Vue devtools and check whether you have the `App` component present on the
    page.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您应该在浏览器中看到一个简单的应用程序。您还可以打开 Vue devtools 并检查页面上是否有 `App` 组件。
- en: Routing
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 路由
- en: 'Let''s add some routing to the app; we will have two pages--the dashboard with
    indicators and a page with buttons to generate fake data:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为应用程序添加一些路由；我们将有两个页面--带有指标的仪表板和一个带有生成虚假数据按钮的页面：
- en: In the `client/components` folder, create two new components--`ProductionGenerator.vue`
    and `ProductionDashboard.vue`.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `client/components` 文件夹中，创建两个新组件--`ProductionGenerator.vue` 和 `ProductionDashboard.vue`。
- en: 'Next to the `main.js` file, create the router in a `router.js` file:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `main.js` 文件旁边，创建一个 `router.js` 文件来创建路由：
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Then, import the router in the `main.js` file and inject it into the app, like
    we did in [Chapter 5](2ec000b2-cfbd-4da5-af9c-974dec1813a2.xhtml), *Project 3
    - Support Center*.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在 `main.js` 文件中导入路由并将其注入到应用程序中，就像我们在 [第 5 章](2ec000b2-cfbd-4da5-af9c-974dec1813a2.xhtml)
    中所做的那样，*项目 3 - 支持中心*。
- en: 'In the `App.vue` main component, add the navigation menu and the router view:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `App.vue` 主组件中，添加导航菜单和路由视图：
- en: '[PRE10]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The basic structure of our app is now done:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应用程序的基本结构现在已经完成：
- en: '![](assets/bdae787e-a9df-4bf1-b0b1-5d6dd5646740.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/bdae787e-a9df-4bf1-b0b1-5d6dd5646740.png)'
- en: Production measures
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生产度量
- en: 'The first page we will make is the Measures page, where we will have two buttons:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将制作的第一个页面是度量页面，我们将在其中有两个按钮：
- en: The first one will generate a fake production measure with current `date` and
    random `value`
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个将生成一个带有当前 `date` 和随机 `value` 的虚假生产度量
- en: The second one will also generate a measure, but with the `error` property set
    to `true`
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个将生成一个度量，但 `error` 属性设置为 `true`
- en: All these measures will be stored in a collection called "Measures".
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些度量将存储在一个名为 "Measures" 的集合中。
- en: Meteor collections integration
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Meteor 集合集成
- en: A Meteor collection is a reactive list of objects, similar to a MongoDB collection
    (in fact, it uses MongoDB under the hood).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor 集合是一个响应式对象列表，类似于 MongoDB 集合（实际上，它在内部使用 MongoDB）。
- en: 'We need to use a Vue plugin to integrate the Meteor collections into our Vue
    app in order to update it automatically:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要使用一个 Vue 插件来将 Meteor 集合集成到我们的 Vue 应用程序中，以便自动更新它：
- en: 'Add the `vue-meteor-tracker` npm package:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加 `vue-meteor-tracker` npm 包：
- en: '[PRE11]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Then, install the library into Vue:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，将库安装到 Vue 中：
- en: '[PRE12]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Restart Meteor with the `meteor` command.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `meteor` 命令重新启动 Meteor。
- en: The app is now aware of the Meteor collection and we can use them in our components,
    as we will do in a moment.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序现在知道了 Meteor 集合，我们可以在我们的组件中使用它们，就像我们马上要做的那样。
- en: Setting up data
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置数据
- en: The next step is setting up the Meteor collection where we will store our measures
    data.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是设置我们将存储度量数据的 Meteor 集合。
- en: Adding a collection
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加一个集合
- en: 'We will store our measures into a `Measures` Meteor collection. Create a new
    `lib` folder in the project directory. All the code in this folder will be executed
    first, both on the client and the server. Create a `collections.js` file, where
    we will declare our `Measures` collection:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把我们的度量存储到一个 `Measures` Meteor 集合中。在项目目录中创建一个新的 `lib` 文件夹。该文件夹中的所有代码将首先在客户端和服务器上执行。创建一个
    `collections.js` 文件，在其中我们将声明我们的 `Measures` 集合：
- en: '[PRE13]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Adding a Meteor method
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加一个 Meteor 方法
- en: A `Meteor` method is a special function that will be called both on the client
    and the server. This is very useful for updating collection data and will improve
    the perceived speed of the app--the client will execute on minimongo without waiting
    for the server to receive and process it.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`Meteor` 方法是一个特殊的函数，将在客户端和服务器上都被调用。这对于更新集合数据非常有用，并将改善应用程序的感知速度--客户端将在 minimongo
    上执行，而不必等待服务器接收和处理它。'
- en: This technique is called "Optimistic Update" and is very effective when the
    network quality is poor.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术称为“乐观更新”，在网络质量不佳时非常有效。
- en: 'Next to the `collections.js` file in the `lib` folder, create a new `methods.js`
    file. Then, add a `measure.add` method that inserts a new measure into the `Measures`
    collection:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`lib`文件夹中的`collections.js`文件旁边，创建一个新的`methods.js`文件。然后，添加一个`measure.add`方法，将新的测量插入到“Measures”集合中：
- en: '[PRE14]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'We can now call this method with the `Meteor.call` function:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以使用`Meteor.call`函数调用这个方法：
- en: '[PRE15]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The method will be run on both the client (using the client-side database called
    minimongo) and on the server. That way, the update will be instant for the client.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法将在客户端（使用名为minimongo的客户端数据库）和服务器上运行。这样，客户端的更新将是即时的。
- en: Simulating measures
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模拟测量
- en: 'Without further delay, let''s build the simple component that will call this
    `measure.add` Meteor method:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 不要再拖延了，让我们构建一个简单的组件，调用这个`measure.add` Meteor方法：
- en: 'Add two buttons in the template of `ProductionGenerator.vue`:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`ProductionGenerator.vue`的模板中添加两个按钮：
- en: '[PRE16]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Then, in the component script, create the `generateMeasure` method that generates
    some dummy data and then call the `measure.add` Meteor method:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在组件脚本中，创建`generateMeasure`方法来生成一些虚拟数据，然后调用`measure.add` Meteor方法：
- en: '[PRE17]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The component should look like this:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 组件应该是这样的：
- en: '![](assets/2ba275af-0171-4c26-8ec4-01b2671f1217.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2ba275af-0171-4c26-8ec4-01b2671f1217.png)'
- en: If you click on the buttons, nothing visible should happen.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您点击按钮，不应该有任何可见的变化。
- en: Inspecting the data
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查数据
- en: There is an easy way to check whether our code works and to verify that you
    can add items in the `Measures` collection. We can connect to the `MongoDB` database
    in a single command.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种简单的方法可以检查我们的代码是否有效，并验证您是否可以在“Measures”集合中添加项目。我们可以用一条命令连接到“MongoDB”数据库。
- en: 'In another terminal, run the following command to connect to the app''s database:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一个终端中，运行以下命令连接到应用程序的数据库：
- en: '[PRE18]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Then, enter this MongoDB query to fetch the documents of the `measures` collection
    (the argument used when creating the `Measures` Meteor collection):'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，输入这个MongoDB查询，以获取“measures”集合的文档（在创建“Measures”Meteor集合时使用的参数）：
- en: '[PRE19]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'If you clicked on the buttons, a list of measure documents should be displayed:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您点击了按钮，应该显示一列测量文档：
- en: '![](assets/fb0cc09c-1e40-4e00-971f-f56144f113da.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fb0cc09c-1e40-4e00-971f-f56144f113da.png)'
- en: This means that our Meteor method worked and objects were inserted in our MongoDB
    database.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们的Meteor方法有效，并且对象已插入到我们的MongoDB数据库中。
- en: Dashboard and reporting
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 仪表板和报告
- en: Now that our first page is done, we can continue with the real-time dashboard.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的第一页做好了，我们可以继续实时仪表板。
- en: Progress bars library
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进度条库
- en: 'To display some pretty indicators, let''s install another Vue library that
    allows drawing progress bars along SVG paths; that way, we can have semi-circular
    bars:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 为了显示一些漂亮的指示器，让我们安装另一个Vue库，允许沿SVG路径绘制进度条；这样，我们可以有半圆形的进度条：
- en: 'Add the `vue-progress-path` npm package to the project:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`vue-progress-path`npm包添加到项目中：
- en: '[PRE20]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: We need to tell the Vue compiler for Meteor not to process the files in `node_modules`
    where the package is installed.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要告诉Meteor的Vue编译器不要处理安装包的“node_modules”中的文件。
- en: 'Create a new `.vueignore` file in the project root directory. This file works
    like a `.gitignore`: each line is a rule to ignore some paths. If it ends with
    a slash `/`, it will ignore only corresponding folders. So, the content of `.vueignore`
    should be as follows:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目根目录创建一个新的`.vueignore`文件。这个文件像`.gitignore`一样工作：每一行都是忽略某些路径的规则。如果以斜杠`/`结尾，它将只忽略相应的文件夹。因此，`.vueignore`的内容应该如下所示：
- en: '[PRE21]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Finally, install the `vue-progress-path` plugin in the `client/main.js` file:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在`client/main.js`文件中安装`vue-progress-path`插件：
- en: '[PRE22]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Meteor publication
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Meteor发布
- en: To synchronize data, the client must subscribe to a publication declared on
    the server. A Meteor publication is a function that returns a Meteor collection
    query. It can take arguments to filter the data that will be synchronized.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 为了同步数据，客户端必须订阅服务器上声明的发布。Meteor发布是一个返回Meteor集合查询的函数。它可以接受参数来过滤将要同步的数据。
- en: 'For our app, we will only need a simple `measures` publication that sends all
    the documents of the `Measures` collection:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的应用程序，我们只需要一个简单的`measures`发布，它发送`Measures`集合的所有文档：
- en: 'This code should only be run on the server. So, create a new `server` in the
    `project` folder and a new `publications.js` file inside that folder:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这段代码应该只在服务器上运行。因此，在`project`文件夹中创建一个新的`server`，并在该文件夹内创建一个新的`publications.js`文件：
- en: '[PRE23]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: This code will only run on the server because it is located in a folder called
    `server`.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码只会在服务器上运行，因为它位于一个名为`server`的文件夹中。
- en: Creating the Dashboard component
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建仪表板组件
- en: We are ready to build our `ProductionDashboard` component. Thanks to the `vue-meteor-tracker`
    we installed earlier, we have a new component definition option--`meteor`. This
    is an object that describes the publications that need to be subscribed to and
    the collection data that needs to be retrieved for that component.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经准备好构建我们的`ProductionDashboard`组件。由于我们之前安装的`vue-meteor-tracker`，我们有一个新的组件定义选项--`meteor`。这是一个描述需要订阅的发布和需要为该组件检索的集合数据的对象。
- en: 'Add the following script section with the `meteor` definition option:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下带有`meteor`定义选项的脚本部分：
- en: '[PRE24]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Inside the `meteor` option, subscribe to the `measures` publication with the
    `$subscribe` object:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`meteor`选项内，使用`$subscribe`对象订阅`measures`发布：
- en: '[PRE25]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The empty array means we pass no parameter to the publication.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 空数组意味着我们没有向发布传递参数。
- en: 'Retrieve the measures with a query on the `Measures` Meteor collection inside
    the `meteor` option:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`meteor`选项内的`Measures` Meteor集合上的查询来检索测量值：
- en: '[PRE26]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The second parameter of the `find` method is an options object very similar
    to the MongoDB JavaScript API. Here, we are sorting the documents by their date
    in descending order, thanks to the `sort` property of the options object.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '`find`方法的第二个参数是一个选项对象，非常类似于MongoDB JavaScript API。在这里，我们通过选项对象的`sort`属性，按照它们的日期降序排序文档。'
- en: Finally, create the `measures` data property and initialize it to an empty array.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，创建`measures`数据属性，并将其初始化为空数组。
- en: 'The script of the component should now look like this:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 组件的脚本现在应该是这样的：
- en: '[PRE27]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: In the browser devtools, you can now check whether the component has retrieved
    the items from the collection.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器开发工具中，您现在可以检查组件是否已从集合中检索到项目。
- en: Indicators
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 指标
- en: 'We will create a separate component for the dashboard indicators, as follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为仪表板指标创建一个单独的组件，如下所示：
- en: In the `components` folder, create a new `ProductionIndicator.vue` component.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`components`文件夹中，创建一个新的`ProductionIndicator.vue`组件。
- en: 'Declare a template that displays a progress bar, a title, and additional info
    text:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 声明一个模板，显示进度条、标题和额外的信息文本：
- en: '[PRE28]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Add the `value`, `title`, and `info` props:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加`value`，`title`和`info`属性：
- en: '[PRE29]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Back in our `ProductionDashboard` component, let''s compute the average of
    the values and the rate of errors:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回到我们的`ProductionDashboard`组件，让我们计算平均值和错误率：
- en: '[PRE30]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: In the preceding code snippet, we cached the length of the `measures` array
    in a `length` computed property.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码片段中，我们使用`length`计算属性缓存了`measures`数组的长度。
- en: 'Add two indicators in the templates - one for the average value and one for
    the error rate:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在模板中添加两个指标 - 一个用于平均值，一个用于错误率：
- en: '[PRE31]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Don't forget to import `ProductionIndicator` into the component!
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记将`ProductionIndicator`导入到组件中！
- en: 'The indicators should look like this:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 指标应该是这样的：
- en: '![](assets/250ed504-0d91-419f-aecc-b1c4fe0495e2.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/250ed504-0d91-419f-aecc-b1c4fe0495e2.png)'
- en: Listing the measures
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出测量
- en: 'Finally, we will display a list of the measures below the indicators:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将在指示器下方显示测量列表：
- en: 'Add a simple list of `<div>` elements for each measure, displaying the date
    if it has an error and the value:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为每个测量添加一个简单的`<div>`元素列表，如果有错误则显示日期和值：
- en: '[PRE33]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The app should now look as follows, with a navigation toolbar, two indicators,
    and the measures list:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序现在应该如下所示，带有导航工具栏、两个指示器和测量列表：
- en: '![](assets/3b986909-83ed-4486-bcad-ee0d70125eb8.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3b986909-83ed-4486-bcad-ee0d70125eb8.png)'
- en: If you open the app in another window and put your windows side by side, you
    can see the full-stack reactivity of Meteor in action. Open the dashboard in one
    window and the generator page in the other window. Then, add fake measures and
    watch the data update on the other window in real time.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在另一个窗口中打开应用程序并将窗口并排放置，您可以看到Meteor的全栈响应性。在一个窗口中打开仪表板，在另一个窗口中打开生成器页面。然后，添加虚拟测量，并观察另一个窗口中的数据实时更新。
- en: If you want to learn more about Meteor, check out the official website ([https://www.meteor.com/developers](https://www.meteor.com/developers))
    and the Vue integration repository ([https://github.com/meteor-vue/vue-meteor](https://github.com/meteor-vue/vue-meteor)).
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解更多关于Meteor的信息，请访问官方网站([https://www.meteor.com/developers](https://www.meteor.com/developers))和Vue集成存储库([https://github.com/meteor-vue/vue-meteor](https://github.com/meteor-vue/vue-meteor))。
- en: Summary
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this final chapter, we created a project using a new full-stack framework
    called Meteor. We integrated Vue into the app and set up a Meteor reactive collection.
    Using a Meteor method, we inserted documents into the collection and displayed
    in real-time the data in a dashboard component.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在这最后一章中，我们使用了一个名为Meteor的新全栈框架创建了一个项目。我们将Vue集成到应用程序中，并设置了一个Meteor响应式集合。使用Meteor方法，我们将文档插入到集合中，并实时在仪表板组件中显示数据。
- en: This book may be over, but your journey using Vue is only beginning. We started
    with very basic concepts around templates and reactive data, writing simple applications
    without any build tools. Even with not much baggage, we were able to make a Mardown
    Notebook and even a browser Card Game with animations. Then, we started using
    the full set of tools at our disposal to make larger apps. The official command-line
    tool--vue-cli--was a great help in scaffolding our projects. The Single-File-Components
    (`.vue` files) make the components easy to maintain and evolve. We can even use
    preprocessing languages, such as stylus, very easily. The vue-router official
    library is mandatory for managing multiple pages, like we did in [Chapter 5](2ec000b2-cfbd-4da5-af9c-974dec1813a2.xhtml),
    *Project 3 - Support Center*, with a nice user system and private routes. Next,
    we went to a whole other level with advanced features, such as Google OAuth and
    Google Maps, while architecturing our Geolocated Blog in a scalable and safe way
    using the official Vuex library. Then, we improved the quality of our Online Shop
    code with ESLint and wrote unit tests for our component. We even added localization
    and server-side rendering to the app, so now it has a very professional feeling.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书可能已经结束了，但你使用Vue的旅程才刚刚开始。我们从模板和响应式数据的基本概念开始，编写简单的应用程序，而无需任何构建工具。即使没有太多负担，我们也能制作一个Mardown笔记本，甚至是带有动画的浏览器卡牌游戏。然后，我们开始使用我们可以使用的全部工具来制作更大的应用程序。官方命令行工具--vue-cli--在搭建项目方面非常有帮助。单文件组件（`.vue`文件）使组件易于维护和演变。我们甚至可以非常轻松地使用预处理语言，比如stylus。vue-router官方库是管理多个页面的必备工具，就像我们在[第5章](2ec000b2-cfbd-4da5-af9c-974dec1813a2.xhtml)中所做的那样，*项目3-支持中心*，具有良好的用户系统和私有路由。接下来，我们通过使用官方的Vuex库，在可扩展和安全的方式上构建了具有高级功能的地理定位博客，比如Google
    OAuth和Google Maps。然后，我们通过使用ESLint提高了我们在线商店代码的质量，并为我们的组件编写了单元测试。我们甚至为应用程序添加了本地化和服务器端渲染，所以现在它具有非常专业的感觉。
- en: You can now practice on the projects we built by improving them, and you can
    even start your own. Using Vue will improve your skills, but you can also attend
    events, chat online with the community, get involved ([https://github.com/vuejs/vue](https://github.com/vuejs/vue)),
    or help others in learning Vue. Sharing your knowledge will only increase your
    own, and you will become better at what you do.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以通过改进我们构建的项目来练习，甚至可以开始你自己的项目。使用Vue将提高你的技能，但你也可以参加活动，在线与社区交流，参与其中（[https://github.com/vuejs/vue](https://github.com/vuejs/vue)），或帮助他人学习Vue。分享你的知识只会增加你自己的知识，你会变得更擅长你所做的事情。
