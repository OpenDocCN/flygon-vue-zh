["```js\nmeteor --version\n```", "```js\n meteor create --bare <folder>\n cd <folder>\n```", "```js\n meteor add akryum:vue-component akryum:vue-stylus\n```", "```js\n meteor npm i -S vue vue-router\n```", "```js\n meteor\n```", "```js\n      <head>\n        <title>Production Dashboard</title>\n      </head>\n      <body>\n        <div id=\"app\"></div>\n      </body>\n```", "```js\n      <!-- client/components/App.vue -->\n      <template>\n        <div id=\"#app\">\n          <h1>Meteor</h1>\n        </div>\n      </template>\n```", "```js\n      <style lang=\"stylus\" src=\"../style.styl\" />\n```", "```js\n      import { Meteor } from 'meteor/meteor'\n      import Vue from 'vue'\n      import App from './components/App.vue'\n\n      Meteor.startup(() => {\n        new Vue({\n          el: '#app',\n          ...App,\n        })\n      })\n```", "```js\n      import Vue from 'vue'\n      import VueRouter from 'vue-router'\n\n      import ProductionDashboard from \n      './components/ProductionDashboard.vue'\n      import ProductionGenerator from \n      './components/ProductionGenerator.vue'\n\n      Vue.use(VueRouter)\n\n      const routes = [\n        { path: '/', name: 'dashboard', component: ProductionDashboard \n        },\n        { path: '/generate', name: 'generate',\n          component: ProductionGenerator },\n      ]\n\n      const router = new VueRouter({\n        mode: 'history',\n        routes,\n      })\n\n      export default router\n```", "```js\n      <nav>\n        <router-link :to=\"{ name: 'dashboard' }\" exact>Dashboard\n          </router-link>\n        <router-link :to=\"{ name: 'generate' }\">Measure</router-link>\n      </nav>\n      <router-view />\n```", "```js\n meteor npm i -S vue-meteor-tracker\n```", "```js\n      import VueMeteorTracker from 'vue-meteor-tracker'\n\n      Vue.use(VueMeteorTracker)\n```", "```js\nimport { Mongo } from 'meteor/mongo'\n\nexport const Measures = new Mongo.Collection('measures')\n```", "```js\n      import { Meteor } from 'meteor/meteor'\n      import { Measures } from './collections'\n\n      Meteor.methods({\n        'measure.add' (measure) {\n          Measures.insert({\n            ...measure,\n            date: new Date(),\n          })\n        },\n      })\n```", "```js\nMeteor.call('measure.add', someMeasure)\n```", "```js\n      <template>\n        <div class=\"production-generator\">\n          <h1>Measure production</h1>\n\n          <section class=\"actions\">\n            <button @click=\"generateMeasure(false)\">Generate \n            Measure</button>\n            <button @click=\"generateMeasure(true)\">Generate \n            Error</button>\n          </section>\n        </div>\n      </template>\n```", "```js\n      <script>\n      import { Meteor } from 'meteor/meteor'\n\n      export default {\n        methods: {\n          generateMeasure (error) {\n            const value = Math.round(Math.random() * 100)\n            const measure = {\n              value,\n              error,\n            }\n            Meteor.call('measure.add', measure)\n          },\n        },\n      }\n      </script>\n```", "```js\nmeteor mongo\n```", "```js\ndb.measures.find({})\n```", "```js\n meteor npm i -S vue-progress-path\n```", "```js\n      node_modules/\n```", "```js\n import 'vue-progress-path/dist/vue-progress-path.css'\n      import VueProgress from 'vue-progress-path'\n\n      Vue.use(VueProgress, {\n        defaultShape: 'semicircle',\n      })\n```", "```js\n      import { Meteor } from 'meteor/meteor'\n      import { Measures } from '../lib/collections'\n\n      Meteor.publish('measures', function () {\n        return Measures.find({})\n      })\n```", "```js\n      <script>\n      export default {\n        meteor: {\n          // Subscriptions and Collections queries here\n        },\n      }\n      </script>\n```", "```js\n      meteor: {\n        $subscribe: {\n          'measures': [],\n        },\n      },\n```", "```js\n      meteor: {\n        // ...\n\n        measures () {\n          return Measures.find({}, {\n            sort: { date: -1 },\n          })\n        },\n      },\n```", "```js\n      <script>\n      import { Measures } from '../../lib/collections'\n\n      export default {\n        data () {\n          return {\n            measures: [],\n          }\n        },\n\n        meteor: {\n          $subscribe: {\n            'measures': [],\n          },\n\n          measures () {\n            return Measures.find({}, {\n              sort: { date: -1 },\n            })\n          },\n        },\n      }\n      </script>\n```", "```js\n      <template>\n        <div class=\"production-indicator\">\n          <loading-progress :progress=\"value\" />\n          <div class=\"title\">{{ title }}</div>\n          <div class=\"info\">{{ info }}</div>\n        </div>\n      </template>\n```", "```js\n      <script>\n      export default {\n        props: {\n          value: {\n            type: Number,\n            required: true,\n          },\n          title: String,\n          info: [String, Number],\n        },\n      }\n      </script>\n```", "```js\n      computed: {\n        length () {\n          return this.measures.length\n        },\n\n        average () {\n          if (!this.length) return 0\n          let total = this.measures.reduce(\n            (total, measure) => total += measure.value,\n            0\n          )\n          return total / this.length\n        },\n\n        errorRate () {\n          if (!this.length) return 0\n          let total = this.measures.reduce(\n            (total, measure) => total += measure.error ? 1 : 0,\n            0\n          )\n          return total / this.length\n        },\n      },\n```", "```js\n      <template>\n        <div class=\"production-dashboard\">\n          <h1>Production Dashboard</h1>\n\n          <section class=\"indicators\">\n            <ProductionIndicator\n              :value=\"average / 100\"\n              title=\"Average\"\n              :info=\"Math.round(average)\"\n            />\n            <ProductionIndicator\n              class=\"danger\"\n              :value=\"errorRate\"\n              title=\"Errors\"\n              :info=\"`${Math.round(errorRate * 100)}%`\"\n            />\n```", "```js\n          </section>\n        </div>\n      </template>\n```", "```js\n      <section class=\"list\">\n        <div\n          v-for=\"item of measures\"\n          :key=\"item._id\"\n        >\n          <div class=\"date\">{{ item.date.toLocaleString() }}</div>\n          <div class=\"error\">{{ item.error ? 'Error' : '' }}</div>\n          <div class=\"value\">{{ item.value }}</div>\n        </div>\n      </section>\n```"]