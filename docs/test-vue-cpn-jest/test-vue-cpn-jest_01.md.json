["```js\nnpm install -g vue-cli\nvue init webpack vue-test\ncd vue-test\n```", "```js\n# Install dependencies\nnpm i -D jest vue-jest babel-jest\n```", "```js\nnpm i -D @vue/test-utils\n```", "```js\n{\n\u00a0\u00a0\"jest\": {\n\u00a0\u00a0\u00a0\u00a0\"moduleNameMapper\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"^vue$\": \"vue/dist/vue.common.js\"\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0\"moduleFileExtensions\": [\"js\", \"vue\"],\n\u00a0\u00a0\u00a0\u00a0\"transform\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"^.+\\\\.js$\": \"<rootDir>/node_modules/babel-jest\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\".*\\\\.(vue)$\": \"<rootDir>/node_modules/vue-jest\"\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0}\n}\n```", "```js\n{\n\u00a0\u00a0\"scripts\": {\n\u00a0\u00a0\u00a0\u00a0\"test\": \"jest\"\n\u00a0\u00a0}\n}\n```", "```js\n<template>\n\u00a0\u00a0<ul>\n\u00a0\u00a0\u00a0\u00a0<li v-for=\"message in messages\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{{ message }}\n\u00a0\u00a0\u00a0\u00a0</li>\n\u00a0\u00a0</ul>\n</template>\n<script>\n\u00a0\u00a0export default {\n\u00a0\u00a0\u00a0\u00a0name: \"list\",\n\u00a0\u00a0\u00a0\u00a0props: [\"messages\"]\n\u00a0\u00a0};\n</script>\n```", "```js\n<template>\n\u00a0\u00a0<div id=\"app\">\n\u00a0\u00a0\u00a0\u00a0<MessageList :messages=\"messages\" />\n\u00a0\u00a0</div>\n</template>\n<script>\n\u00a0\u00a0import MessageList from \"./components/MessageList\";\n\u00a0\u00a0export default {\n\u00a0\u00a0\u00a0\u00a0name: \"app\",\n\u00a0\u00a0\u00a0\u00a0data: () => ({ messages: [\"Hey John\", \"Howdy Paco\"] }),\n\u00a0\u00a0\u00a0\u00a0components: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0MessageList\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0};\n</script>\n```", "```js\nimport Vue from \"vue\";\nimport App from \"../src/App\";\ndescribe(\"App.test.js\", () => {\n\u00a0\u00a0let cmp, vm;\n\u00a0\u00a0beforeEach(() => {\n\u00a0\u00a0\u00a0\u00a0cmp = Vue.extend(App); // Create a copy of the original component\n\u00a0\u00a0\u00a0\u00a0vm = new cmp({\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0data: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Replace data value with this fake data\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0messages: [\"Cat\"]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}).$mount(); // Instances and mounts the component\n\u00a0\u00a0});\n\u00a0\u00a0it('equals messages to [\"Cat\"]', () => {\n\u00a0\u00a0\u00a0\u00a0expect(vm.messages).toEqual([\"Cat\"]);\n\u00a0\u00a0});\n});\n```", "```js\nnpm t -- --watch\n```", "```js\nit(\"has the expected html structure\", () => {\n\u00a0\u00a0expect(cmp.element).toMatchSnapshot();\n});\n```", "```js\n// Jest Snapshot v1, https://goo.gl/fbAQLP\nexports['App.test.js has the expected html structure 1'] = '\n<div id=\"app\">\n\u00a0\u00a0<ul>\n\u00a0\u00a0\u00a0\u00a0<li>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Cat\n\u00a0\u00a0\u00a0\u00a0</li>\n\u00a0\u00a0</ul>\n</div>\n';\n```", "```js\nimport { shallowMount } from \"@vue/test-utils\";\nimport App from \"../src/App\";\ndescribe(\"App.test.js\", () => {\n\u00a0\u00a0let cmp;\n\u00a0\u00a0beforeEach(() => {\n\u00a0\u00a0\u00a0\u00a0cmp = shallowMount(App, {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Create a shallow instance of the component\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0data: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0messages: [\"Cat\"]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0});\n\u00a0\u00a0it('equals messages to [\"Cat\"]', () => {\n\u00a0\u00a0\u00a0\u00a0// Within cmp.vm, we can access all Vue instance methods\n\u00a0\u00a0\u00a0\u00a0expect(cmp.vm.messages).toEqual([\"Cat\"]);\n\u00a0\u00a0});\n\u00a0\u00a0it(\"has the expected html structure\", () => {\n\u00a0\u00a0\u00a0\u00a0expect(cmp.element).toMatchSnapshot();\n\u00a0\u00a0});\n});\n```", "```js\n// Jest Snapshot v1, https://goo.gl/fbAQLP\nexports['App.test.js has the expected html structure 1'] = '\n<div id=\"app\">\n\u00a0\u00a0<!--  -->\n</div>\n';\n```", "```js\nimport { mount } from '@vue/test-utils'\nimport MessageList from '../src/components/MessageList'\ndescribe('MessageList.test.js', () => {\n\u00a0\u00a0let cmp\n\u00a0\u00a0beforeEach(() => {\n\u00a0\u00a0\u00a0\u00a0cmp = mount(MessageList, {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Be aware that props is overridden using 'propsData'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0propsData: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0messages: ['Cat']\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0})\n\u00a0\u00a0})\n\u00a0\u00a0it('has received ['Cat'] as the message property', () => {\n\u00a0\u00a0\u00a0\u00a0expect(cmp.vm.messages).toEqual(['Cat'])\n\u00a0\u00a0})\n\u00a0\u00a0it('has the expected html structure', () => {\n\u00a0\u00a0\u00a0\u00a0expect(cmp.element).toMatchSnapshot()\n\u00a0\u00a0})\n})\n```"]