["```js\n<template>\n\u00a0\u00a0<List>\n\u00a0\u00a0\u00a0\u00a0<ListItem :someProp=\"someValue\" />\n\u00a0\u00a0\u00a0\u00a0<ListItem :someProp=\"someValue\" />\n\u00a0\u00a0\u00a0\u00a0<ListItemImage :image=\"imageUrl\" :someProp=\"someValue\" />\n\u00a0\u00a0</List>\n</template>\n```", "```js\n<template>\n\u00a0\u00a0<ul>\n\u00a0\u00a0\u00a0\u00a0<!-- slot here will equal to what's inside <List> -->\n\u00a0\u00a0\u00a0\u00a0<slot></slot>\n\u00a0\u00a0</ul>\n</template>\n```", "```js\n<template>\n\u00a0\u00a0<li> {{ someProp }} </li>\n</template>\n```", "```js\n<ul>\n\u00a0\u00a0<li> someValue </li>\n\u00a0\u00a0<li> someValue </li>\n\u00a0\u00a0<li> someValue </li> <!-- assume the same implementation for ListItemImage -->\n</ul>\n```", "```js\n<template>\n\u00a0\u00a0<ul>\n\u00a0\u00a0\u00a0\u00a0<Message\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0@message-clicked=\"handleMessageClick\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:message=\"message\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0v-for=\"message in messages\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:key=\"message\"/>\n\u00a0\u00a0</ul>\n</template>\n```", "```js\n<template>\n\u00a0\u00a0<div id=\"app\">\n\u00a0\u00a0\u00a0\u00a0<MessageList>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<Message\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0@message-clicked=\"handleMessageClick\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:message=\"message\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0v-for=\"message in messages\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:key=\"message\"/>\n\u00a0\u00a0\u00a0\u00a0</MessageList>\n\u00a0\u00a0</div>\n</template>\n<script>\nimport MessageList from \"./components/MessageList\";\nimport Message from \"./components/Message\";\nexport default {\n\u00a0\u00a0name: \"app\",\n\u00a0\u00a0data: () => ({ messages: [\"Hey John\", \"Howdy Paco\"] }),\n\u00a0\u00a0methods: {\n\u00a0\u00a0\u00a0\u00a0handleMessageClick(message) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(message);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0},\n\u00a0\u00a0components: {\n\u00a0\u00a0\u00a0\u00a0MessageList,\n\u00a0\u00a0\u00a0\u00a0Message\n\u00a0\u00a0}\n};\n</script>\n```", "```js\n<template>\n\u00a0\u00a0<ul class=\"list-messages\">\n\u00a0\u00a0\u00a0\u00a0<slot></slot>\n\u00a0\u00a0</ul>\n</template>\n<script>\nexport default {\n\u00a0\u00a0name: \"MessageList\"\n};\n</script>\n```", "```js\nconst children = this.$slots.default\n\u00a0\u00a0.map(vnode => vnode.componentInstance)\n\u00a0\u00a0.filter(cmp => !!cmp);\n```", "```js\nbeforeEach(() => {\n\u00a0\u00a0cmp = shallowMount(MessageList, {\n\u00a0\u00a0\u00a0\u00a0slots: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0default: '<div class=\"fake-msg\"></div>'\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0});\n});\n```", "```js\nit(\"Messages are inserted in a ul.list-messages element\", () => {\n\u00a0\u00a0const list = cmp.find(\"ul.list-messages\");\n\u00a0\u00a0expect(list.findAll(\".fake-msg\").length).toBe(1);\n});\n```", "```js\nimport AnyComponent from \"anycomponent\";\nshallowMount(MessageList, {\n\u00a0\u00a0slots: {\n\u00a0\u00a0\u00a0\u00a0default: AnyComponent // or [AnyComponent, AnyComponent]\n\u00a0\u00a0}\n});\n```", "```js\nbeforeEach(() => {\n\u00a0\u00a0const messageWrapper = {\n\u00a0\u00a0\u00a0\u00a0render(h) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return h(Message, { props: { message: \"hey\" } });\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0};\n\u00a0\u00a0cmp = shallowMount(MessageList, {\n\u00a0\u00a0\u00a0\u00a0slots: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0default: messageWrapper\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0});\n});\nit(\"Messages are inserted in a MessageList component\", () => {\n\u00a0\u00a0const list = cmp.find(MessageList);\n\u00a0\u00a0expect(list.find(Message).isVueInstance()).toBe(true);\n});\n```", "```js\n<template>\n\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0<header class=\"list-header\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<slot name=\"header\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0This is a default header\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</slot>\n\u00a0\u00a0\u00a0\u00a0</header>\n\u00a0\u00a0\u00a0\u00a0<ul class=\"list-messages\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<slot></slot>\n\u00a0\u00a0\u00a0\u00a0</ul>\n\u00a0\u00a0</div>\n</template>\n```", "```js\n<template>\n\u00a0\u00a0<div id=\"app\">\n\u00a0\u00a0\u00a0\u00a0<MessageList>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<header slot=\"header\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Awesome header\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</header>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<Message\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0@message-clicked=\"handleMessageClick\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:message=\"message\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0v-for=\"message in messages\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:key=\"message\"/>\n\u00a0\u00a0\u00a0\u00a0</MessageList>\n\u00a0\u00a0</div>\n</template>\n```", "```js\nit(\"Header slot renders a default header text\", () => {\n\u00a0\u00a0const header = cmp.find(\".list-header\");\n\u00a0\u00a0expect(header.text().trim()).toBe(\"This is a default header\");\n});\n```", "```js\nit(\"Header slot is rendered withing .list-header\", () => {\n\u00a0\u00a0const component = shallowMount(MessageList, {\n\u00a0\u00a0\u00a0\u00a0slots: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0header: \"<div>What an awesome header</div>\"\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0});\n\u00a0\u00a0const header = component.find(\".list-header\");\n\u00a0\u00a0expect(header.text().trim()).toBe(\"What an awesome header\");\n});\n```", "```js\nit(\"Message length is higher than 5\", () => {\n\u00a0\u00a0const messages = cmp.findAll(Message);\n\u00a0\u00a0messages.wrappers.forEach(c => {\n\u00a0\u00a0\u00a0\u00a0expect(c.vm.message.length).toBeGreaterThan(5);\n\u00a0\u00a0});\n});\n```", "```js\nbeforeEach(() => {\n\u00a0\u00a0const messageWrapper = {\n\u00a0\u00a0\u00a0\u00a0render(h) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return h(Message, { props: { message: \"hey yo\" } });\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0};\n});\n```"]