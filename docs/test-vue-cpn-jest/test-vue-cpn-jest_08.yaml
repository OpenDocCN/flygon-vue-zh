- en: '*Chapter 8*'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第8章*'
- en: Enhance Jest Configuration with Module Aliases
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用模块别名增强 Jest 配置
- en: 'The module managers that we have in the JavaScript community, primarily ES
    Modules and CommonJS, don''t support project-based paths. They only support relative
    paths for our own modules and paths for the `node_modules` folder. As a project
    grows a little, it''s common to see paths such as the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 JavaScript 社区中拥有的模块管理器，主要是 ES 模块和 CommonJS，并不支持基于项目的路径。它们只支持我们自己模块的相对路径和
    `node_modules` 文件夹的路径。当项目稍微增长时，通常会看到以下路径：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Luckily, we have different ways to cope with this, in a way that we can define
    aliases for folders relative to the project root, so we can write the previous
    line as follows:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，我们有不同的方法来应对这个问题，以便我们可以为相对于项目根目录的文件夹定义别名，这样我们可以将前一行写成如下形式：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here, `@` is an arbitrary character to define the root project. You can define
    your own, however. Let's see what solutions we have available to apply module
    aliasing. Let's begin from where we left off in the **last chapter** ([https://github.com/alexjoverm/vue-testing-series/tree/test-slots](https://github.com/alexjoverm/vue-testing-series/tree/test-slots)).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`@` 是一个任意字符，用于定义根项目。您可以自行定义。让我们看看我们有哪些可用的解决方案来应用模块别名。让我们从**上一章**中离开的地方开始（[https://github.com/alexjoverm/vue-testing-series/tree/test-slots](https://github.com/alexjoverm/vue-testing-series/tree/test-slots)）。
- en: Webpack Aliases
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Webpack 别名
- en: '**Webpack aliases** ([https://webpack.js.org/configuration/resolve/#resolve-alias](https://webpack.js.org/configuration/resolve/#resolve-alias))
    are very simple to set up. You just need to add a `resolve.alias` property to
    your webpack configuration. If you take a look at `build/webpack.base.conf.js`,
    it already has it defined:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**Webpack 别名** ([https://webpack.js.org/configuration/resolve/#resolve-alias](https://webpack.js.org/configuration/resolve/#resolve-alias))
    设置非常简单。您只需要在 webpack 配置中添加一个 `resolve.alias` 属性。如果您查看 `build/webpack.base.conf.js`，您会发现它已经定义了：'
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Taking this as an entry point, we can add a simple alias that points to the
    `src` folder and use that as the root:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以此为起点，我们可以添加一个简单的别名，指向 `src` 文件夹，并将其用作根目录：
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'With this alone, we can access anything, taking the root project as the `@`
    symbol. Let''s go to `src/App.vue` and change the reference to those two components:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 仅凭此，我们就可以访问任何东西，以根项目作为 `@` 符号。让我们去 `src/App.vue` 并更改对这两个组件的引用：
- en: '[PRE4]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: And if we run `npm start` and open the browser at `localhost:8080`, that should
    work out of the box.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们运行 `npm start` 并在 `localhost:8080` 打开浏览器，那应该可以直接使用。
- en: 'However, if we try to run the tests by running `npm t`, we''ll see that Jest
    doesn''t find the modules. We still haven''t configured Jest to do this. Therefore,
    let''s go to `package.json`, where the Jest config is located, and add `"@/([^\\.]*)$":
    "<rootDir>/src/$1"` to `moduleNameMapper`:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '然而，如果我们尝试通过运行 `npm t` 来运行测试，我们会发现 Jest 找不到模块。我们还没有配置 Jest 来做这个。因此，让我们去 `package.json`，Jest
    配置所在的地方，并将 `"@/([^\\.]*)$": "<rootDir>/src/$1"` 添加到 `moduleNameMapper` 中：'
- en: '[PRE5]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here is an explanation of the preceding code snippet:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前面代码片段的解释：
- en: '`@(.*)$`: Whatever starts with ``@``, and continues with literally whatever
    (`(.*)$`) till the end of the string, grouping it by using the parenthesis.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@(.*)$`：任何以 `@` 开头，并且继续以任何字符 (`(.*)$`) 直到字符串结束，通过使用括号进行分组。'
- en: '`<rootDir>/src/$1`: `<rootDir>` is a special Jest word, meaning the root directory.
    Then, we map it to `src` and, with `$1`, we append the whatever clause from the
    `(.*)` statement.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<rootDir>/src/$1`：`<rootDir>` 是 Jest 的特殊词，表示根目录。然后，我们将其映射到 `src`，并且使用 `$1`，我们将
    `(.*)` 语句中的任何子句附加上去。'
- en: For example, `@/components/MessageList` will be mapped to `../src/components/MessageList`
    when you're importing it from the `src` or `test` folders.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当你从 `src` 或 `test` 文件夹导入时，`@/components/MessageList` 将被映射到 `../src/components/MessageList`。
- en: 'That''s really it. Now, you can even update your `App.test.js` file to use
    the alias as well since it''s usable from within the tests:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样。现在，你甚至可以更新你的`App.test.js`文件来使用别名，因为它也可以在测试中使用：
- en: '[PRE6]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Also, it will work for both `.vue` and `.js` files.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 而且，它对`.vue`和`.js`文件都适用。
- en: Multiple Aliases
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多个别名
- en: Very often, multiple aliases are used for convenience, so instead of using just
    a single `@` to define your root folder, you use many. For example, let's say
    you have an `actions` folder and a `models` folder. If you create an alias for
    each one and then you move the folders around, you just need to change the aliases
    instead of updating all the references to it in the codebase. That's the power
    of module aliases – they make your codebase easier to maintain and cleaner.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 经常使用多个别名以方便起见，所以不仅仅使用一个`@`来定义你的根文件夹，你可以使用多个。例如，假设你有一个`actions`文件夹和一个`models`文件夹。如果你为每个文件夹创建一个别名，然后移动文件夹，你只需要改变别名，而不是在代码库中更新所有对它的引用。这就是模块别名的威力
    - 它们使得你的代码库更容易维护和更清晰。
- en: 'Now, let''s add a `components` alias to `build/webpack.base.conf.js`:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在`build/webpack.base.conf.js`中添加一个`components`别名：
- en: '[PRE7]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Then, we just need to add it to the Jest configuration in `package.json` too:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们只需要在`package.json`中的Jest配置中添加它：
- en: '[PRE8]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'It is as simple as that. Now, we can try it in `App.vue` to use both forms:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这么简单。现在，我们可以在`App.vue`中尝试使用两种形式：
- en: '[PRE9]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Stop and rerun the tests and that should work. You may also run `npm start`
    and try that.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 停止并重新运行测试，那应该可以工作。你也可以运行`npm start`来尝试一下。
- en: Other Solutions
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他解决方案
- en: I've seen **babel-plugin-webpack-alias** ([https://github.com/trayio/babel-plugin-webpack-alias](https://github.com/trayio/babel-plugin-webpack-alias)),
    especially used for other testing frameworks such as **mocha** ([https://mochajs.org/](https://mochajs.org/)),
    which doesn't have a module mapper.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我看到了**babel-plugin-webpack-alias**（[https://github.com/trayio/babel-plugin-webpack-alias](https://github.com/trayio/babel-plugin-webpack-alias)），特别是用于其他测试框架，比如**mocha**（[https://mochajs.org/](https://mochajs.org/)），它没有模块映射。
- en: I haven't tried it myself since Jest already provides you with that, but if
    you have done so, or want to try, please share how it went.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我自己还没有尝试过，因为Jest已经为你提供了这个功能，但如果你已经这样做了，或者想尝试一下，请分享一下效果如何。
- en: Wrapping Up
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Adding module aliases is very simple and can keep your code base much cleaner
    and easier to maintain. Jest also makes it very easy to define them; you just
    need to keep in sync with webpack aliases, and you can say bye-bye to dot-hell
    references.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 添加模块别名非常简单，可以使你的代码库更清晰、更容易维护。Jest也很容易定义它们；你只需要与webpack别名保持同步，然后你就可以告别点地狱的引用了。
- en: You can find the working code relating to this chapter on **GitHub** ([https://github.com/alexjoverm/vue-testing-series/tree/Enhance-Jest-configuration-with-Module-Aliases](https://github.com/alexjoverm/vue-testing-series/tree/Enhance-Jest-configuration-with-Module-Aliases)).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在**GitHub**上找到与本章相关的工作代码（[https://github.com/alexjoverm/vue-testing-series/tree/Enhance-Jest-configuration-with-Module-Aliases](https://github.com/alexjoverm/vue-testing-series/tree/Enhance-Jest-configuration-with-Module-Aliases)）。
