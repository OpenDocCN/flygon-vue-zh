["```js\n// components/copyright.vue\n<template>\n  <p v-html=\"copyright\"></p>\n</template>\n\n<script>\nexport default {\n  data () {\n    return { copyright: '&copy; Lau Tiam Kok' }\n  }\n}\n</script>\n```", "```js\n// components/copyright.vue\nexport default {\n  asyncData () {\n    return { copyright: '&copy; Lau Tiam Kok' }\n  }\n}\n```", "```js\n$ npm i axios\n```", "```js\n// components/copyright.vue\nimport axios from 'axios'\n\nexport default {\n  data () {\n    return { copyright: null }\n  },\n  fetch () {\n    const { data } = axios.get('http/path/to/site-info.json')\n    this.copyright = data.copyright  \n  }\n}\n```", "```js\n// components/copyright.vue\nexport default {\n  props: ['copyright']\n}\n```", "```js\nVue.component('post-item', {\n  data () {\n    return { text: 'Hello World!' }\n  },\n  template: '<p>{{ text }}</p>'\n})\n```", "```js\n<div id=\"post\">\n  <post-item></post-item>\n</div>\n\n<script type=\"text/javascript\">\n  Vue.component('post-item', { ... }\n  new Vue({ el: '#post' })\n</script>\n```", "```js\nVue.component('user-item', {\n  template: '<li>John Doe</li>'\n})\n```", "```js\nVue.component('user-item', {\n  props: ['name'],\n  template: '<li>{{ name }}</li>'\n})\n```", "```js\n<ol>\n  <user-item\n    v-for=\"user in users\"\n    v-bind:name=\"user.name\"\n    v-bind:key=\"user.id\"\n  ></user-item>\n</ol>\n```", "```js\n<ol>\n  <user-item\n    v-for=\"user in users\"\n    v-bind:user=\"user\"\n    v-bind:key=\"user.id\"\n  ></user-item>\n</ol>\n```", "```js\nVue.component('user-item', {\n  props: ['user'],\n  template: '<li>{{ user.name }}</li>'\n})\n```", "```js\n<script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"></script>\n```", "```js\n<div id=\"app\">\n  <ol>\n    <user-item\n      v-for=\"user in users\"\n      v-bind:user=\"user\"\n      v-bind:key=\"user.id\"\n    ></user-item>\n  </ol>\n</div>\n```", "```js\nVue.component('user-item', {\n  props: ['user'],\n  template: '<li>{{ user.name }}</li>'\n})\n\nnew Vue({\n  el: '#app',\n  data: {\n    users: [\n      { id: 0, name: 'John Doe' },\n      { id: 1, name: 'Jane Doe' },\n      { id: 2, name: 'Mary Moe' }\n    ]\n  }\n})\n```", "```js\n$emit(<event>)\n```", "```js\nv-on:<event>=\"<event-handler>\"\n```", "```js\n<div id=\"todos\">\n  <todo-item\n    v-on:completed=\"handleCompleted\"\n  ></todo-item>\n</div>\n```", "```js\nVue.component('todo-item', {\n  template: '<button v-on:click=\"clicked\">Task completed</button>',\n  methods: {\n    clicked () {\n      this.$emit('completed')\n    }\n  }\n})\n```", "```js\nnew Vue({\n  el: '#todos',\n  methods: {\n    handleCompleted () {\n      alert('Task Done')\n    }\n  }\n})\n```", "```js\n$emit(<event>, <value>)\n```", "```js\nv-on:<event>=\"<event-handler> = $event\"\n```", "```js\nmethods: {\n  handleCompleted (<value>) { ... }\n}\n```", "```js\n// Child\nclicked () {\n  this.$emit('completed', 'Task done')\n}\n\n// Parent\nmethods: {\n  handleCompleted (value) {\n    alert(value)\n  }\n}\n```", "```js\n<custom-input v-model=\"newTodoText\"></custom-input>\n\nVue.component('custom-input', {\n  props: ['value'],\n  template: `<input v-on:input=\"$emit('input', $event.target.value)\">`,\n})\n```", "```js\n<input v-model=\"handler\">\n```", "```js\n<input\n  v-bind:value=\"handler\"\n  v-on:input=\"handler = $event.target.value\"\n>\n```", "```js\nv-bind:value=\"newTodoText\"\nv-on:input=\"newTodoText = $event.target.value\"\n```", "```js\n<p>{{ newTodoText }}</p>\n\nnew Vue({\n  el: '#todos',\n  data: {\n    newTodoText: null\n  }\n})\n```", "```js\nVue.component('custom-input', {\n  props: {\n    value: null\n  },\n  model: {\n    prop: 'value', // <-- default\n    event: 'input' // <-- default\n  }\n})\n```", "```js\nVue.component('custom-checkbox', {\n  model: {\n    prop: 'checked',\n    event: 'change'\n  },\n  props: {\n    checked: Boolean\n  },\n  template: `\n    <input\n      type=\"checkbox\"\n      v-bind:checked=\"checked\"\n      v-on:change=\"changed\"\n      name=\"subscribe\"\n      value=\"newsletter\"\n    >\n  `\n  ,\n  methods: {\n    changed ($event) {\n      this.$emit('change', $event.target.checked)\n    }\n  }\n})\n```", "```js\nname=\"subscribe\"\nvalue=\"newsletter\"\n```", "```js\n[{\n  \"name\":\"subscribe\",\n  \"value\":\"newsletter\"\n}]\n```", "```js\nmodel: {\n  prop: 'checked',\n  event: 'change'\n}\n```", "```js\n[{\n  \"name\":\"subscribe\",\n  \"value\":\"on\"\n}]\n```", "```js\n<ol>\n  <user-item\n    v-for=\"user in users\"\n    v-bind:user=\"user\"\n    v-bind:key=\"user.id\"\n  ></user-item>\n</ol>\n```", "```js\n<div v-for=\"(user, index) in users\" :key=\"index\">\n  //...\n</div>\n```", "```js\n<div v-for=\"user in users\" :key=\"user.id\">\n  //...\n</div>\n```", "```js\nVue.component('user-item', {\n  props: ['key', 'user']\n})\n```", "```js\n[Vue warn]: \"key\" is a reserved attribute and cannot be used as \ncomponent prop.\n```", "```js\n<script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"></script>\n<script src=\"http://code.jquery.com/jquery-3.3.1.js\"></script>\n<style type=\"text/css\">\n  .removed {\n    text-decoration: line-through;\n  }\n  .removed button {\n    display: none;\n  }\n</style>\n```", "```js\n<div id=\"todo-list-example\">\n  <form v-on:submit.prevent=\"addNewTodo\">\n    <label for=\"new-todo\">Add a todo</label>\n    <input\n      v-model=\"newTodoText\"\n      id=\"new-todo\"\n      placeholder=\"E.g. Feed the cat\"\n    >\n    <button>Add</button>\n  </form>\n  <ul>\n    <todo-item\n      v-for=\"(todo, index) in todos\"\n      v-bind:key=\"index\"\n      v-bind:title=\"todo.title\"\n    ></todo-item>\n  </ul>\n</div>\n```", "```js\nVue.component('todo-item', {\n  template: `<li>{{ title }} <button v-\n   on:click=\"remove($event)\">Remove</button></li>`,\n  props: ['title'],\n  methods: {\n    remove: function ($event) {\n      $($event.target).parent().addClass('removed')\n    }\n  }\n})\n```", "```js\nnew Vue({\n  el: '#todo-list-example',\n  data: {\n    newTodoText: '',\n    todos: [\n      { id: 1, title: 'Do the dishes' },\n      //...\n    ],\n    nextTodoId: 4\n  },\n  methods: {\n    addNewTodo: function () {\n      this.todos.unshift({\n        id: this.nextTodoId++,\n        title: this.newTodoText\n      })\n      this.newTodoText = ''\n    }\n  }\n})\n```", "```js\nDo the dishes  (with a strike-through)\n```", "```js\nFeed the cat (with a strike-through)\n```", "```js\nlet numbers = [1,2,3]\n\n<div v-for=\"(number, index) in numbers\" :key=\"index\">\n  // Which turns into number - index\n  1 - 0\n  2 - 1\n  3 - 2\n</div>\n```", "```js\n<div v-for=\"(number, index) in numbers\" :key=\"index\">\n  4 - 0\n  1 - 1\n  2 - 2\n  3 - 3\n</div>\n```", "```js\n<user-item\n  v-for=\"(user, index) in users\"\n  v-bind:key=\"user.id\"\n  v-bind:name=\"user.name\"\n></user-item>\n```", "```js\n<div id=\"app\">\n  <template v-if=\"type === 'fruits'\">\n    <label>Fruits</label>\n    <input />\n  </template>\n  <template v-else>\n    <label>Vegetables</label>\n    <input />\n  </template>\n  <button v-on:click=\"toggleType\">Toggle Type</button>\n</div>\n\n<script type=\"text/javascript\">\n  new Vue({\n    el: '#app',\n    data: { type: 'fruits' },\n    methods: {\n      toggleType: function () {\n        return this.type = this.type === 'fruits' ? 'vegetables' : 'fruits'\n      }\n    }\n  })\n</script>\n```", "```js\n<template v-if=\"type === 'fruits'\">\n  <label>Fruits</label>\n  <input key=\"fruits-input\"/>\n</template>\n<template v-else>\n  <label>Vegetables</label>\n  <input key=\"vegetables-input\"/>\n</template>\n```", "```js\nconst Foo = { template: '<div>foo</div>' }\nconst Bar = { template: '<div>bar</div>' }\n```", "```js\n// components/foo.js\nVue.component('page-foo', {\n  data: function () {\n    return { message: 'foo' }\n  },\n  template: '<div>{{ count }}</div>'\n})\n```", "```js\n// index.vue\n<template>\n  <p>{{ message }}</p>\n</template>\n\n<script>\nexport default {\n  data () {\n    return { message: 'Hello World!' }\n  }\n}\n</script>\n\n<style scoped>\np {\n  font-size: 2em;\n  text-align: center;\n}\n</style>\n```", "```js\n// package.json\n{\n  \"name\": \"vue-single-file-component\",\n  \"version\": \"1.0.0\"\n}\n```", "```js\n$ npm i vue-loader --save-dev \n$ npm i vue-template-compiler --save-dev\n```", "```js\n// package.json\n\"scripts\": {\n  \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\n  \"watch\": \"webpack --watch\",\n  \"build\": \"webpack --config webpack.prod.js\"\n}\n```", "```js\n// webpack.common.js\nconst VueLoaderPlugin = require('vue-loader/lib/plugin')\n\nmodule.exports = {\n  mode: 'development',\n  module: {\n    rules: [\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader'\n      },\n      {\n        test: /\\.js$/,\n        loader: 'babel-loader'\n      },\n      {\n        test: /\\.css$/,\n        use: [\n          'vue-style-loader',\n          'css-loader'\n        ]\n      }\n    ]\n  },\n  plugins: [\n    new VueLoaderPlugin()\n  ]\n}\n```", "```js\n// index.html\n<!doctype html>\n<html>\n  <head>\n    <title>Todo Grocery Application (Single File \n     Components)</title>\n  </head>\n  <body>\n    <div id=\"todos\"></div>\n  </body>\n</html>\n```", "```js\n// src/entry.js\n'use strict'\n\nimport Vue from 'vue/dist/vue.js'\nimport App from './app.vue'\n\nnew Vue({\n  el: 'todos',\n  template: '<App/>',\n  components: {\n    App\n  }\n})\n```", "```js\n// src/app.vue\n<template>\n  <div>\n    <ol>\n      <TodoItem\n        v-for=\"thing in groceryList\"\n        v-bind:item=\"thing\"\n        v-bind:key=\"item.id\"\n        v-on:add-item=\"addItem\"\n        v-on:delete-item=\"deleteItem\"\n      ></TodoItem>\n    </ol>\n    <p><span v-html=\"&pound;\"></span>{{ total }}</p>\n  </div>\n</template>\n\n<script>\nimport TodoItem from './todo-item.vue'\nexport default {\n  data () {\n    return {\n      cart: [],\n      total: 0,\n      groceryList: [\n        { id: 0, text: 'Lentils', price: 2 },\n        //...\n      ]\n    }\n  },\n  components: {\n    TodoItem\n  }\n}\n</script>\n```", "```js\n// src/app.vue\nmethods: {\n  addItem (item) {\n    this.cart.push(item)\n    this.total = this.shoppingCartTotal\n  },\n  deleteItem (item) {\n    this.cart.splice(this.cart.findIndex(e => e === item), 1)\n    this.total = this.shoppingCartTotal\n  }\n},\ncomputed: {\n  shoppingCartTotal () {\n    let prices = this.cart.map(item => item.price)\n    let sum = prices.reduce((accumulator, currentValue) =>\n     accumulator + currentValue, 0)\n    return sum\n  }\n}\n```", "```js\n// src/todo-item.vue\n<template>\n  <li>\n    <input type=\"checkbox\" :name=\"item.id\" v-model=\"checked\"> {{\n     item.text }}\n    <span v-html=\"&pound;\"></span>{{ item.price }}\n  </li>\n</template>\n\n<script>\nexport default {\n  props: ['item'],\n  data () {\n    return { checked: false }\n  },\n  methods: {\n    addToCart (item) {\n      this.$emit('add-item', item)\n    }\n  },\n  watch: {\n    checked (boolean) {\n      if (boolean === false) {\n        return this.$emit('delete-item', this.item)\n      }\n      this.$emit('add-item', this.item)\n    }\n  }\n}\n</script>\n```", "```js\n// components/nav.vue\n<template>\n  <li>\n    <nuxt-link :to=\"item.link\" v-html=\"item.name\">\n    </nuxt-link>\n  </li>\n</template>\n\n<script>\nexport default {\n  props: ['item']\n}\n</script>\n```", "```js\n// components/social.vue\n<template>\n  <li>\n    <a :href=\"item.link\" target=\"_blank\">\n      <i :class=\"item.classes\"></i>\n    </a>\n  </li>\n</template>\n\n<script>\nexport default {\n  props: ['item']\n}\n</script>\n```", "```js\n// layouts/default.vue\nimport Nav from '~/components/nav.vue'\nimport Social from '~/components/social.vue'\n\ncomponents: {\n  Nav,\n  Social\n}\n```", "```js\n// layouts/default.vue\n<template v-for=\"item in nav\">\n  <li><nuxt-link :to=\"item.link\" v-html=\"item.name\">\n  </nuxt-link></li>\n</template>\n\n<template v-for=\"item in social\">\n  <li>\n    <a :href=\"item.link\" target=\"_blank\">\n      <i :class=\"item.classes\"></i>\n    </a>\n  </li>\n</template>\n```", "```js\n// layouts/default.vue\n<Nav\n  v-for=\"item in nav\"\n  v-bind:item=\"item\"\n  v-bind:key=\"item.slug\"\n ></Nav>\n\n<Social\n  v-for=\"item in social\"\n  v-bind:item=\"item\"\n  v-bind:key=\"item.name\"\n ></Social>\n```", "```js\n// components/copyright.vue\nexport default {\n  data () {\n    return { copyright: '&copy; Lau Tiam Kok' }\n  }\n}\n```", "```js\n// components/copyright.vue\nexport default {\n  props: ['copyright']\n}\n```", "```js\n// layouts/default.vue\ndata () {\n  return {\n    copyright: '&copy; Lau Tiam Kok',\n  }\n}\n```", "```js\n// layouts/default.vue\n<Copyright />\n```", "```js\n// layouts/default.vue\n<Copyright v-bind:copyright=\"copyright\" />\n```", "```js\n// components/input-checkbox.vue\n<template>\n  <input\n    type=\"checkbox\"\n    v-bind:checked=\"checked\"\n    v-on:change=\"changed\"\n    name=\"subscribe\"\n    value=\"newsletter\"\n  >\n</template>\n\n<script>\nexport default {\n  model: {\n    prop: 'checked',\n    event: 'change'\n  },\n  props: { checked: Boolean },\n  methods: {\n    changed ($event) {\n      this.$emit('change', $event.target.checked)\n    }\n  }\n}\n</script>\n```", "```js\nVue.component('my-component-name', { ... })\n```", "```js\nVue.component('component-x', { ... })\nVue.component('component-y', { ... })\nVue.component('component-z', { ... })\n\nnew Vue({ el: '#app' })\n\n<div id=\"app\">\n  <component-x></component-x>\n  <component-y></component-y>\n  <component-z></component-z>\n</div>\n```", "```js\nvar ComponentX = { ... }\nvar ComponentY = { ... }\nvar ComponentZ = { ... }\n```", "```js\nnew Vue({\n  el: '#app',\n  components: {\n    'component-x': ComponentX,\n    'component-y': ComponentY,\n    'component-z': ComponentZ\n  }\n})\n```", "```js\nVue.component('user-item', {\n  props: ['user'],\n  template: '<li>{{ user.name }}</li>'\n})\n```", "```js\nconst UserItem = {\n  props: ['user'],\n  template: '<li>{{ user.name }}</li>'\n}\n```", "```js\nnew Vue({\n  el: '#app',\n  data: {\n    users: [\n      { id: 0, name: 'John Doe' },\n      //...\n    ]\n  },\n  components: {\n    'user-item': UserItem\n  }\n})\n```", "```js\nvar ComponentX = { ... }\n\nvar ComponentZ = {\n  components: {\n    'component-x': ComponentX\n  }\n}\n```", "```js\n// components/ComponentZ.vue\nimport Componentx from './Componentx.vue'\n\nexport default {\n  components: {\n    'component-x': ComponentX\n  }\n}\n\n<component-x\n  v-for=\"item in items\"\n  ...\n></component-x>\n```", "```js\n// components/ComponentZ.vue\nexport default {\n  components: {\n    ComponentX\n  }\n}\n```", "```js\n<ComponentX\n  v-for=\"item in items\"\n  ...\n></ComponentX>\n```", "```js\n// components/global/sample-1.vue\n<template>\n  <p>{{ message }}</p>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      message: 'A message from sample global component 1.'\n    }\n  }\n}\n</script>\n```", "```js\n// plugins/global-components.js\nimport Vue from 'vue'\nimport Sample from '~/components/global/sample-1.vue'\n\nVue.component('sample-1', Sample)\n```", "```js\nVue.component('sample-2', {\n  render (createElement) {\n    return createElement('p', 'A message from sample global\n     component 2.')\n  }\n})\n```", "```js\n// nuxt.config.js\nplugins: [\n  '~/plugins/global-components.js',\n]\n```", "```js\n// nuxt.config.js\nplugins: [\n  { src: '~/plugins/global-components.js',  mode: 'client' }\n]\n```", "```js\n// pages/about.vue\n<sample-1 />\n<sample-2 />\n```", "```js\n<p>A message from sample global component 1.</p>\n<p>A message from sample global component 2.</p>\n```", "```js\n<img src=\"~/assets/sample-1.jpg\">\n```", "```js\ncreateElement('img', {\n  attrs: {\n    src: require('~/assets/sample-1.jpg') // this is now a module request\n  }\n})\n```", "```js\n// pages/about.vue\n<template>\n  <img :src=\"'~/assets/images' + post.image.src\" :alt=\"post.image.alt\">\n</template>\n\nconst post = {\n  title: 'About',\n  image: {\n    src: '/about.jpg',\n    alt: 'Sample alt 1'\n  }\n}\n\nexport default {\n  data () {\n    return { post }\n  }\n}\n```", "```js\n<img :src=\"require('~/assets/images/about.jpg')\" :alt=\"post.image.alt\">\n```", "```js\n<img :src=\"loadAssetImage(post.image.src)\" :alt=\"post.image.alt\">\n```", "```js\nvar myMixin = {\n  created () {\n    this.hello()\n  },\n  methods: {\n    hello () { console.log('hello from mixin!') }\n  }\n}\n```", "```js\nconst Foo = Vue.extend({\n  mixins: [myMixin],\n  template: '<div>foo</div>'\n})\n```", "```js\n// plugins/mixin-basic.js\nexport default {\n  created () {\n    this.hello()\n  },\n  methods: {\n    hello () {\n      console.log('hello from mixin!')\n    }\n  }\n}\n```", "```js\n// pages/about.vue\nimport Mixin from '~/plugins/mixin-basic.js'\n\nexport default {\n  mixins: [Mixin]\n}\n```", "```js\nVue.mixin({\n  mounted () {\n    console.log('hello from mixin!')\n  }\n})\n```", "```js\nconst app = new Vue({\n  //...\n}).$mount('#app')\n```", "```js\n// plugins/mixin-utils.js\nimport Vue from 'vue'\n\nVue.mixin({\n  methods: {\n    loadAssetImage (src) {\n      return require('~/assets/images' + src)\n    }\n  }\n})\n```", "```js\n// nuxt.config.js\nmodule.exports = {\n  plugins: [\n    '~/plugins/mixin-utils.js'\n  ]\n}\n```", "```js\n// pages/about.vue\n<img :src=\"loadAssetImage(post.image.src)\" :alt=\"post.image.alt\">\n```", "```js\n// .js\nVue.component('post', { ... })\n\n// .vue\nexport default {\n  name: 'post'\n}\n```", "```js\n// .js\nVue.component('post-item', { ... })\n\n// .vue\nexport default {\n  name: 'PostItem'\n}\n```", "```js\n// .js\nVue.component('foo-component', {\n  data: { ... }\n})\n\n// .vue\nexport default {\n  data: { ... }\n}\n```", "```js\n// .js\nVue.component('foo-component', {\n  data () {\n    return { ... }\n  }\n})\n\n// .vue\nexport default {\n  data () {\n    return { ... }\n  }\n}\n\n// .js or .vue\nnew Vue({\n  data: { ... }\n})\n```", "```js\nprops: ['message']\n```", "```js\nprops: {\n  message: String\n}\n```", "```js\nprops: {\n  message: {\n    type: String,\n    required: false,\n    validator (value) { ... }\n  }\n}\n```", "```js\n// .js\nVue.component('PostList', { ... })\n\nVue.component('PostItem', { ... })\n```", "```js\ncomponents/\n|- PostList.js\n|- PostItem.js\n```", "```js\ncomponents/\n|- PostList.vue\n|- PostItem.vue\n```", "```js\ncomponents/\n|- postitem.vue\n\ncomponents/\n|- postItem.vue\n```", "```js\n// PascalCase\ncomponents/\n|- PostItem.vue\n\n// kebab-case\ncomponents/\n|- post-item.vue\n```", "```js\n// .vue\n<PostItem></PostItem>\n\n// .html\n<post-item/>\n```", "```js\n// .vue\n<PostItem/>\n\n// .html\n<post-item></post-item>\n```"]