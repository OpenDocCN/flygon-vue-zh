["```js\n// nuxt.config.js\nexport default {\n  mode: 'spa'\n}\n```", "```js\nsrc\n\u251c\u2500\u2500 favicon.ico\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 components\n\u2502 \u251c\u2500\u2500 about.vue\n\u2502 \u251c\u2500\u2500 secured.vue\n\u2502 \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 routes\n  \u251c\u2500\u2500 about.js\n  \u251c\u2500\u2500 secured.js\n  \u2514\u2500\u2500 ...\n```", "```js\ndist\n\u251c\u2500\u2500 favicon.ico\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 css\n\u2502 \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 js\n  \u2514\u2500\u2500 ...\n```", "```js\npages\n\u251c\u2500\u2500 about.vue\n\u251c\u2500\u2500 secured.vue\n\u251c\u2500\u2500 ...\n\u2514\u2500\u2500 users\n  \u251c\u2500\u2500 about.js\n  \u251c\u2500\u2500 index.vu\n  \u2514\u2500\u2500 _id.vue\n```", "```js\ndist\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 favicon.ico\n\u251c\u2500\u2500 about\n\u2502 \u2514\u2500\u2500 index.html\n\u251c\u2500\u2500 secured\n\u2502 \u2514\u2500\u2500 index.html\n\u251c\u2500\u2500 users\n\u2502 \u2514\u2500\u2500 index.html\n\u2514\u2500\u2500 ...\n```", "```js\n$ npm run build\n$ npm run start\n```", "```js\n$ npx create-nuxt-app <project-name>\n```", "```js\n? Project name\n? Project description\n//...\n? Rendering mode:  \n  Universal (SSR / SSG)  \n> Single Page App \n```", "```js\n// nuxt.config.js\nexport default {\n  mode: 'spa'\n}\n```", "```js\n$ npm run dev\n```", "```js\n\u2713 Client\n  Compiled successfully in 1.76s\n```", "```js\n\u2713 Client\n  Compiled successfully in 2.75s\n\n\u2713 Server\n  Compiled successfully in 2.56s\n```", "```js\n-| pages/\n---| index.vue\n---| about.vue\n---| login.vue\n---| secret.vue\n---| users/\n-----| index.vue\n-----| _id.vue\n```", "```js\n-| store/\n---| index.js\n---| state.js\n---| mutations.js\n---| actions.js\n```", "```js\n// store/index.js\nconst cookie = process.server ? require('cookie') : undefined\n\nexport const actions = {\n  nuxtServerInit ({ commit }, { req }) {\n    if (\n      req \n      && req.headers \n      && req.headers.cookie \n      && req.headers.cookie.indexOf('auth') > -1\n    ) {\n      let auth = cookie.parse(req.headers.cookie)['auth']\n      commit('setAuth', JSON.parse(auth))\n    }\n  }\n}\n```", "```js\n$ npm i js-cookie\n```", "```js\n// store/index.js\nimport cookies from 'js-cookie'\n\nexport const actions = {\n  nuxtClientInit ({ commit }, ctx) {\n    let auth = cookies.get('auth')\n    if (auth) {\n      commit('setAuth', JSON.parse(auth))\n    }\n  }\n}\n```", "```js\n// plugins/nuxt-client-init.js\nexport default async (ctx) => {\n  await ctx.store.dispatch('nuxtClientInit', ctx)\n}\n```", "```js\n// nuxt.config.js\nexport default {\n  plugins: [\n    { src: '~/plugins/nuxt-client-init.js', mode: 'client' }\n  ]\n}\n```", "```js\n$ npm i axios\n```", "```js\n// pages/users/index.vue\nconst instance = axios.create({\n  baseURL: '<api-address>',\n  timeout: <value>,\n  headers: { '<x-custom-header>': '<value>' }\n})\n```", "```js\n// plugins/axios-typicode.js\nimport axios from 'axios'\n\nconst instance = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com'\n})\n\nexport default (ctx, inject) => {\n  ctx.$axiosTypicode = instance\n  inject('axiosTypicode', instance)\n}\n```", "```js\n// nuxt.config.js\nexport default {\n  plugins: [\n    { src: '~/plugins/axios-typicode.js', mode: 'client' }\n  ]\n}\n```", "```js\n// pages/users/index.vue\nexport default {\n  async asyncData({ $axiosTypicode }) {\n    let { data } = await $axiosTypicode.get('/users')\n    return { users: data }\n  }\n}\n```", "```js\n// pages/users/index.vue\nexport default {\n  async asyncData({ app }) {\n    let { data } = await app.$axiosTypicode.get('/users')\n    return { users: data }\n  }\n}\n```", "```js\n// plugins/axios-api.js\nimport axios from 'axios'\n\nexport default axios.create({\n  baseURL: 'http://localhost:4000',\n  withCredentials: true\n})\n```", "```js\n// store/actions.js\nimport axios from '~/plugins/axios-api'\n\nasync login({ commit }, { username, password }) {\n  const { data } = await axios.post('/public/users/login', { \n   username, password })\n  //...\n}\n```", "```js\n// middleware/token.js\nimport axios from '~/plugins/axios-api'\n\nexport default async ({ store, error }) => {\n  //...\n  axios.defaults.headers.common['Authorization'] = Bearer: \n  ${store.state.auth.token}\n}\n```", "```js\n{\n  baseURL: 'http://localhost:4000',\n  withCredentials: true\n}\n```", "```js\n// nuxt.config.js\nexport default {\n  mode: 'spa'\n}\n```", "```js\n{\n  \"scripts\": {\n    \"generate\": \"nuxt generate\"\n  }\n}\n```", "```js\n\u2139 Generating output directory: dist/\n\u2139 Generating pages \n\u2713 Generated /about\n\u2713 Generated /login\n\u2713 Generated /secret\n\u2713 Generated /users\n\u2713 Generated /\n```", "```js\n// nuxt.config.js\nexport default {\n  mode: 'universal'\n}\n```", "```js\n\u2139 Generating output directory: dist/\n\u2139 Generating pages with full static mode \n\u2713 Generated /about\n\u2713 Generated /secret\n\u2713 Generated /login\n\u2713 Generated /users\n\u2713 Generated /users/1\n\u2713 Generated /users/2\n...\n...\n\u2713 Generated /users/10\n\u2713 Generated /\n```", "```js\n// nuxt.config.js\nexport default {\n  mode: 'spa'\n}\n```", "```js\nHash: c36ee9714ee9427ac1ff \nVersion: webpack 4.43.0 \nTime: 5540ms \nBuilt at: 11/07/2020 07:58:09 \n                         Asset       Size  Chunks                         Chunk Names \n../server/client.manifest.json   9.31 KiB          [emitted]               \n                      LICENSES  617 bytes          [emitted]               \n                app.922dbd1.js     57 KiB       0  [emitted] \n                [immutable] app \n        commons/app.7236c86.js    182 KiB       1  [emitted] \n        [immutable] commons/app \n        pages/about.75fcd06.js  667 bytes       2  [emitted] \n        [immutable] pages/about \n        pages/index.76b5c20.js  784 bytes       3  [emitted] \n        [immutable] pages/index \n        pages/login.09e509e.js   3.14 KiB       4  [emitted]\n        [immutable] pages/login \n      pages/secured.f086299.js   1.36 KiB       5  [emitted] \n       [immutable] pages/secured \n    pages/users/_id.e1c568c.js   1.69 KiB       6  [emitted] \n      [immutable] pages/users/_id \n  pages/users/index.b3e7aa8.js    1.5 KiB       7  [emitted]\n    [immutable] pages/users/index \n            runtime.266b4bf.js   2.47 KiB       8  [emitted] \n            [immutable] runtime \n+ 1 hidden asset \nEntrypoint app = runtime.266b4bf.js commons/app.7236c86.js app.922dbd1.js \n\u2139 Ready to run nuxt generate \n```", "```js\n$ npm run start\n```", "```js\nNuxt.js @ v2.14.0\n\n> Environment: production\n> Rendering: client-side\n> Target: static\nListening: http://localhost:3000/\n\n\u2139 Serving static application from dist/ \n```", "```js\n<username>.github.io/<app-name>\n```", "```js\n<username>.github.io/<repository-name>\n```", "```js\nexport default {\n  router: {\n    base: '/<repository-name>/'\n  }\n}\n```", "```js\n// nuxt.config.js\nconst routerBase = process.env.DEPLOY_ENV === 'GH_PAGES' ? {\n  router: {\n    base: '/<repository-name>/'\n  }\n} : {}\n```", "```js\n// nuxt.config.js\nexport default {\n  ...routerBase\n}\n```", "```js\n// package.json\n\"scripts\": {\n  \"build:gh-pages\": \"DEPLOY_ENV=GH_PAGES nuxt build\",   \n  \"generate:gh-pages\": \"DEPLOY_ENV=GH_PAGES nuxt generate\"\n}\n```", "```js\n$ npm run generate:gh-pages\n```", "```js\n$ npm run build:gh-pages\n```"]