["```js\n$ sudo apt update\n$ sudo apt install apache2\n```", "```js\n$ apache2 -v\nServer version: Apache/2.4.41 (Ubuntu)\nServer built: 2019-08-14T14:36:32\n```", "```js\n$ sudo systemctl stop apache2\n$ sudo systemctl start apache2\n$ sudo systemctl enable apache2\n```", "```js\n$ sudo systemctl status apache2\n```", "```js\napache2.service - The Apache HTTP Server\n Loaded: loaded (/lib/systemd/system/apache2.service; enabled; vendor preset: enabled)\n Active: active (running) since Thu 2020-08-06 13:17:25 CEST; 52min ago\n //...\n```", "```js\n$ sudo apt update\n$ sudo apt install php\n```", "```js\n$ sudo apt install -y php7.4-{bcmath,bz2,curl,gd,intl,json,mbstring,xml,zip,mysql}\n```", "```js\n$ sudo a2dismod php7.3\n$ sudo a2enmod php7.4\n```", "```js\n$ sudo apt-get purge 'php*'\n```", "```js\n$ sudo service apache2 restart\n```", "```js\n$ php -v\n```", "```js\nPHP 7.4.8 (cli) (built: Jul 13 2020 16:46:22) ( NTS )\nCopyright (c) The PHP Group\nZend Engine v3.4.0, Copyright (c) Zend Technologies\n with Zend OPcache v7.4.8, Copyright (c), by Zend Technologies\n```", "```js\n$ sudo nano /etc/php/7.4/apache2/php.ini\n```", "```js\nupload_max_filesize = 2M\n```", "```js\nupload_max_filesize = 32M\n```", "```js\npost_max_size = 48M\nmemory_limit = 256M\nmax_execution_time = 600\n```", "```js\n$ sudo service apache2 restart\n```", "```js\n$ php -S 0.0.0.0:8181\n```", "```js\n$ cd ~/www\n$ php -S localhost:8181 -t public\n```", "```js\n// public/index.php\n<?php\necho 'Hello world!';\n```", "```js\n[Sun Mar 22 09:12:37 2020] PHP 7.4.4 Development Server (http://localhost:8181) started\n```", "```js\nStart-line\nHTTP Headers\n\nBody\n```", "```js\n$ php -S localhost:8181 -t public\n```", "```js\n$ curl http://0.0.0.0:8181 \\\n --trace-ascii \\\n /dev/stdout\n```", "```js\n== Info: Trying 0.0.0.0:8181...\n== Info: TCP_NODELAY set\n== Info: Connected to 0.0.0.0 (127.0.0.1) port 8181 (0)\n=> Send header, 76 bytes (0x4c)\n0000: GET / HTTP/1.1\n0010: Host: 0.0.0.0:8181\n0024: User-Agent: curl/7.65.3\n003d: Accept: /\n004a:\n```", "```js\n== Info: Mark bundle as not supporting multiuse\n<= Recv header, 17 bytes (0x11)\n0000: HTTP/1.1 200 OK\n<= Recv header, 20 bytes (0x14)\n0000: Host: 0.0.0.0:8181\n<= Recv header, 37 bytes (0x25)\n0000: Date: Sat, 21 Mar 2020 20:33:09 GMT\n<= Recv header, 19 bytes (0x13)\n0000: Connection: close\n<= Recv header, 25 bytes (0x19)\n0000: X-Powered-By: PHP/7.4.4\n<= Recv header, 40 bytes (0x28)\n0000: Content-type: text/html; charset=UTF-8\n<= Recv header, 2 bytes (0x2)\n0000:\n<= Recv data, 12 bytes (0xc)\n0000: Hello world!\n== Info: Closing connection 0\n```", "```js\n// public/index.php\n<?php\nprint_r($_POST);\n```", "```js\n$ php -S localhost:8181 -t public\n```", "```js\n$ curl http://0.0.0.0:8181 \\\n -d \"param1=value1&param2=value2\" \\\n --trace-ascii \\\n /dev/stdout\n```", "```js\n== Info: Trying 0.0.0.0:8181...\n== Info: TCP_NODELAY set\n== Info: Connected to 0.0.0.0 (127.0.0.1) port 8181 (0)\n=> Send header, 146 bytes (0x92)\n0000: POST / HTTP/1.1\n0011: Host: 0.0.0.0:8181\n0025: User-Agent: curl/7.65.3\n003e: Accept: /\n004b: Content-Length: 27\n005f: Content-Type: application/x-www-form-urlencoded\n0090:\n=> Send data, 27 bytes (0x1b)\n0000: param1=value1&param2=value2\n== Info: upload completely sent off: 27 out of 27 bytes\n\n```", "```js\n== Info: Mark bundle as not supporting multiuse\n<= Recv header, 17 bytes (0x11)\n0000: HTTP/1.1 200 OK\n<= Recv header, 20 bytes (0x14)\n0000: Host: 0.0.0.0:8181\n<= Recv header, 37 bytes (0x25)\n0000: Date: Sat, 21 Mar 2020 20:43:06 GMT\n<= Recv header, 19 bytes (0x13)\n0000: Connection: close\n<= Recv header, 25 bytes (0x19)\n0000: X-Powered-By: PHP/7.4.4\n<= Recv header, 40 bytes (0x28)\n0000: Content-type: text/html; charset=UTF-8\n<= Recv header, 2 bytes (0x2)\n0000:\n<= Recv data, 56 bytes (0x38)\n0000: Array.(. [param1] => value1\\. [param2] => value2.).\nArray\n(\n    [param1] => value1\n    [param2] => value2\n)\n== Info: Closing connection 0\n```", "```js\n$ curl -X PUT http://0.0.0.0:8181 \\\n -d \"param1=value1&param2=value2\" \\\n --trace-ascii \\\n /dev/stdout\n```", "```js\n$ curl -X DELETE http://0.0.0.0:8181 \\\n -d \"param1=value1&param2=value2\" \\\n --trace-ascii \\\n /dev/stdout\n```", "```js\n// public/index.php\n<?php\nprint_r($_GET);\n```", "```js\nconst http = require('http')\n\nhttp.createServer((request, response) => {\n  response.writeHead(200, {'Content-Type': 'text/plain'})\n  response.end('Hello World')\n}).listen(8080)\n```", "```js\nconst Koa = require('koa')\nconst app = new Koa()\n\napp.use(async ctx => {\n  ctx\n  ctx.request\n  ctx.response\n})\n```", "```js\nconst express = require('express')\nconst app = express()\n\napp.get('/', (req, res) => res.send('Hello World!'))\n```", "```js\nage = 20\nif age == 20:\n  print(\"age is 20\")\n```", "```js\nif age == 20:\nprint(\"age is 20\")\n```", "```js\nif age == 20:\n print(\"age is 20\")\n  print(\"age is 20\")\n```", "```js\nif (age == 20) {\nprint(\"age is 20\");\n}\n```", "```js\nif (age == 20) {\n print(\"age is 20\");\n  print(\"age is 20\");\n}\n```", "```js\ndeclare(strict_types = 1);\n\nfunction returnInt(int $value): int\n{\n    return $value;\n}\n\nprint(returnInt(2));\n```", "```js\nfunction returnInt(int $value): int\n{\n    return $value + 1.0;\n}\n```", "```js\nPHP Fatal error: Uncaught TypeError: Return value of returnInt() must be of the type int, float returned in ...\n```", "```js\nclass Fruit\n{\n    public function setName(int $arg1, $arg2): string\n    {\n        return 'kiwi';\n    }\n}\n```", "```js\n<?php\n\n/**\n * The block of comments...\n */\n\ndeclare(strict_types=1);\n\nnamespace VendorName\\PackageName;\n\nuse VendorName\\PackageName\\{ClassX as X, ClassY, ClassZ as Z};\nuse VendorName\\PackageName\\SomeNamespace\\ClassW as W;\n\nuse function VendorName\\PackageName\\{functionX, functionY, functionZ};\n\nuse const VendorName\\PackageName\\{ConstantX, ConstantY, ConstantZ};\n\n/**\n * The block of comments...\n */\nclass Fruit\n{\n    //...\n}\n```", "```js\n<?php\nnamespace VendorName\\PackageName;\n\nuse FruitClass;\nuse VegetableClass as Veg;\n```", "```js\n\\<NamespaceName>(\\<SubNamespaceNames>)\\<ClassName>\n```", "```js\n$ php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\n$ php -r \"if (hash_file('sha384', 'composer-setup.php') === 'e5325b19b381bfd88ce90a5ddb7823406b2a38cff6bb704b0acc289a09c8128d4a8ce2bbafcd1fcbdc38666422fe2806') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"\n```", "```js\n$ sudo php composer-setup.php\n```", "```js\nAll settings correct for using Composer\nDownloading...\n\nComposer (version 1.10.9) successfully installed to: /home/lau/composer.phar\nUse it: php composer.phar\n```", "```js\n$ php -r \"unlink('composer-setup.php');\"\n```", "```js\n$ sudo mv composer.phar /usr/local/bin/composer\n```", "```js\n$ composer\n```", "```js\n   ______\n  / ____/___ ____ ___ ____ ____ ________ _____\n / / / __ \\/ __ __ \\/ __ \\/ __ \\/ ___/ _ \\/ ___/\n/ /___/ /_/ / / / / / / /_/ / /_/ (__ ) __/ /\n\\____/\\____/_/ /_/ /_/ .___/\\____/____/\\___/_/\n                    /_/\nComposer version 1.10.9 2020-07-16 12:57:00\n...\n...\n```", "```js\n$ composer -V\nComposer version 1.10.9 2020-07-16 12:57:00\n```", "```js\n$ composer require monolog/monolog\n```", "```js\n{\n    \"require\": {\n        \"monolog/monolog\": \"^2.0\"\n    }\n}\n```", "```js\n$ composer install\n```", "```js\nrequire __DIR__ . '/vendor/autoload.php';\n\n$log = new Monolog\\Logger('name');\n$log->pushHandler(new Monolog\\Handler\\StreamHandler('path/to/your.log', Monolog\\Logger::WARNING));\n$log->addWarning('Foo');\n$log->error('Bar');\n```", "```js\n{\n    \"autoload\": {\n        \"psr-4\": {\"Spectre\\\\\": \"src/\"}\n    }\n}\n```", "```js\n{\n    \"autoload\": {\n        \"psr-4\": {\n            \"Spectre\\\\\": [\n                \"module1/\",\n                \"module2/\"\n            ]\n        }\n    }\n}\n```", "```js\n{\n    \"autoload\": {\n        \"psr-4\": {\n            \"Spectre\\\\\": [\n                //...\n            ],\n            \"AnotherNamespace\\\\\": [\n                //...\n            ]\n        }\n    }\n}\n```", "```js\n// public/index.php\nchdir(dirname(__DIR__));\nrequire_once 'vendor/autoload.php';\n```", "```js\n**$ php -S localhost:8181 -t public** \n```", "```js\n$ composer require zendframework/zend-diactoros\n```", "```js\n$request = Zend\\Diactoros\\ServerRequestFactory::fromGlobals(\n    $_SERVER,\n    $_GET,\n    $_POST,\n    $_COOKIE,\n    $_FILES\n);\n```", "```js\n$response = new Zend\\Diactoros\\Response();\n$response->getBody()->write(\"Hello \");\n```", "```js\n$response->getBody()->write(\"World!\");\n```", "```js\n$response = $response\n    ->withHeader('Content-Type', 'text/plain');\n```", "```js\necho $response->getBody();\n```", "```js\n$request = Zend\\Diactoros\\ServerRequestFactory::fromGlobals(\n    //...\n);\nprint_r(get_class_methods($request));\n```", "```js\n$response = new Zend\\Diactoros\\Response();\nprint_r(get_class_methods($response));\n```", "```js\n// Psr\\Http\\Server\\RequestHandlerInterface\n\nnamespace Psr\\Http\\Server;\n\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\ServerRequestInterface;\n\ninterface RequestHandlerInterface\n{\n    public function handle(ServerRequestInterface $request) : \n     ResponseInterface;\n}\n```", "```js\n$ composer require zendframework/zend-httphandlerrunner\n```", "```js\n//...\n$response = $response\n    ->withHeader('Content-Type', 'text/plain');\n\n(new Zend\\HttpHandlerRunner\\Emitter\\SapiEmitter)->emit($response);\n```", "```js\n// Psr\\Http\\Server\\MiddlewareInterface\n\nnamespace Psr\\Http\\Server;\n\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\ServerRequestInterface;\nuse Psr\\Http\\Server\\RequestHandlerInterface;\n\ninterface MiddlewareInterface\n{\n    public function process(\n        ServerRequestInterface $request,\n        RequestHandlerInterface $handler\n    ) : ResponseInterface;\n}\n```", "```js\n$ composer require zendframework/zend-stratigility\n```", "```js\nuse function Zend\\Stratigility\\middleware;\n\n$app = new Zend\\Stratigility\\MiddlewarePipe();\n\n// Create a request\n$request = Zend\\Diactoros\\ServerRequestFactory::fromGlobals(\n    //...\n);\n```", "```js\n$app->pipe(middleware(function ($request, $handler) {\n    $response = $handler->handle($request);\n    return $response\n        ->withHeader('Content-Type', 'text/plain');\n}));\n\n$app->pipe(middleware(function ($request, $handler) {\n    $response = $handler->handle($request);\n    $response->getBody()->write(\"User Agent: \" . \n     $request->getHeader('user-agent')[0]);\n    return $response;\n}));\n\n$app->pipe(middleware(function ($request, $handler) {\n    $response = new Zend\\Diactoros\\Response();\n    $response->getBody()->write(\"Hello world!\\n\");\n    $response->getBody()->write(\"Request method: \" .\n     $request->getMethod() . \"\\n\");\n    return $response;\n}));\n```", "```js\n$response = $app->handle($request);\n(new Zend\\HttpHandlerRunner\\Emitter\\SapiEmitter)->\n  emit($response);\n```", "```js\nHello world!\nRequest method: GET\nUser Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 \n (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\n```", "```js\n$ composer require league/route\n```", "```js\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\ServerRequestInterface;\n\n$request = Zend\\Diactoros\\ServerRequestFactory::fromGlobals(\n    //...\n);\n\n$router = new League\\Route\\Router;\n\n$router->map('GET', '/', function (ServerRequestInterface $request) : ResponseInterface {\n    $response = new Zend\\Diactoros\\Response;\n    $response->getBody()->write('<h1>Hello, World!</h1>');\n    return $response;\n});\n```", "```js\n$response = $router->dispatch($request);\n(new Zend\\HttpHandlerRunner\\Emitter\\SapiEmitter)->emit($response);\n```", "```js\nuse function Zend\\Stratigility\\middleware;\n\n$router = new League\\Route\\Router;\n$router->middleware(<middleware>);\n```", "```js\n$router\n    ->group('/private', function ($router) {\n        // ... add routes\n    })\n    ->middleware(<middleware>)\n;\n```", "```js\n$router\n    ->map('GET', '/secret', <SomeController>)\n    ->middleware(<middleware>)\n;\n```", "```js\nuse function Zend\\Stratigility\\middleware;\n\n$router = new League\\Route\\Router;\n$router->middleware(middleware(function ($request, $handler) {\n    //...\n}));\n```", "```js\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\ServerRequestInterface;\nuse Psr\\Http\\Server\\MiddlewareInterface;\nuse Psr\\Http\\Server\\RequestHandlerInterface;\n\n$router = new League\\Route\\Router;\n\n$router->middleware(new class implements MiddlewareInterface {\n    public function process(ServerRequestInterface $request, \n    RequestHandlerInterface $handler) : ResponseInterface\n    {\n        $response = $handler->handle($request);\n        return $response->withHeader('X-Clacks-Overhead', \n        'GNU Terry Pratchett');\n    }\n});\n```", "```js\nCREATE TABLE user (\n  uuid varchar(255) NOT NULL,\n  name varchar(255) NOT NULL,\n  slug varchar(255) NOT NULL,\n  created_on int(10) unsigned NOT NULL,\n  updated_on int(10) unsigned NOT NULL,\n  UNIQUE KEY slug (slug)\n) ENGINE=MyISAM DEFAULT CHARSET=utf8;\n```", "```js\n$ composer require ramsey/uuid\n```", "```js\nuse Ramsey\\Uuid\\Uuid;\n\n$uuid1 = Uuid::uuid1();\necho $uuid1->toString();\n```", "```js\n$ php -m\n```", "```js\n[PHP Modules]\n...\nPDO\npdo_mysql\n...\n```", "```js\n$ php -m|grep -i pdo\nPDO\npdo_mysql\n```", "```js\n$ php -m|grep -i pdo_\npdo_mysql\n```", "```js\nprint_r(PDO::getAvailableDrivers());\n```", "```js\nArray\n(\n    [0] => mysql\n)\n```", "```js\nextension_loaded ('PDO'); // returns boolean\nextension_loaded('pdo_mysql'); // returns boolean\nget_loaded_extensions(); // returns array\n```", "```js\n$ apt-cache search php7.4|grep mysql\nphp7.4-mysql - MySQL module for PHP\n```", "```js\n$ sudo apt-get install php7.4-mysql\n$ sudo service apache2 restart\n```", "```js\n$servername = \"localhost\";\n$username = \"<username>\";\n$password = \"<password>\";\n$dbname = \"<dbname>\";\n$connection = new PDO(\n    \"mysql:host=$servername;dbname=$dbname\",\n    $username,\n    $password\n)\n```", "```js\n$stmt = $connection->prepare(\"\n    INSERT INTO user (\n        uuid,\n        name,\n        slug,\n        created_on,\n        updated_on\n    ) VALUES (\n        :uuid,\n        :name,\n        :slug,\n        :created_on,\n        :updated_on\n    )\n\");\n$stmt->bindParam(':uuid', $uuid);\n$stmt->bindParam(':name', $name);\n$stmt->bindParam(':slug', $slug);\n$stmt->bindParam(':created_on', $createdOn);\n$stmt->bindParam(':updated_on', $updatedOn);\n```", "```js\n$uuid = \"25769c6c-d34d-4bfe-ba98-e0ee856f3e7a\";\n$name = \"John Doe\";\n$slug = \"john-doe\";\n$createdOn = (new DateTime())->getTimestamp();\n$updatedOn = $createdOn;\n$stmt->execute();\n```", "```js\n$ composer require catfan/medoo\n```", "```js\nuse Medoo\\Medoo;\n\n$database = new Medoo([\n  'database_type' => 'mysql',\n  'database_name' => '<dbname>',\n  'server' => 'localhost',\n  'username' => '<username>',\n  'password' => '<password>'\n]);\n```", "```js\n$database->insert('user', [\n    'uuid' => '41263659-3c1f-305a-bfac-6a7c9eab0507',\n    'name' => 'Jane',\n    'slug' => 'jane',\n    'created_on' => '1568072289'\n]);\n```", "```js\n$database->select('user', [\n    'uuid',\n    'name',\n    'slug',\n    'created_on',\n    'updated_on',\n]);\n```", "```js\n$database->get('user', [\n    'uuid',\n    'name',\n    'slug',\n    'created_on',\n    'updated_on',\n    ], [\n    'slug' => 'jane'\n]);\n```", "```js\n$database->update('user', [\n    'name' => 'Janey',\n    'slug' => 'jane',\n    'updated_on' => '1568091701'\n], [\n    'uuid' => '41263659-3c1f-305a-bfac-6a7c9eab0507'\n]);\n```", "```js\n$database->delete('user', [\n    'uuid' => '41263659-3c1f-305a-bfac-6a7c9eab0507'\n]);\n```", "```js\n// Nuxt app\nfront-end\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 nuxt.config.js\n\u2514\u2500\u2500 pages\n    \u251c\u2500\u2500 index.vue\n    \u2514\u2500\u2500 ...\n\n// PHP API\nbackend\n\u251c\u2500\u2500 composer.json\n\u251c\u2500\u2500 vendor\n\u2502 \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 ...\n\u2514\u2500\u2500 ...\n```", "```js\n// PHP API\nbackend\n\u251c\u2500\u2500 composer.json\n\u251c\u2500\u2500 middlewares.php\n\u251c\u2500\u2500 routes.php\n\u251c\u2500\u2500 vendor\n\u2502 \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 public\n\u2502 \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 static\n\u2502 \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 config\n\u2502 \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 core\n\u2502 \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 middleware\n\u2502 \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 module\n    \u2514\u2500\u2500 ...\n```", "```js\n// backend/routes.php\n$modules = require './config/routes.php';\n\nforeach ($modules as $module) {\n    require './module/' . $module . 'index.php';\n}\n```", "```js\n// backend/config/routes.php\nreturn [\n    'Home/',\n    'User/'.\n    //...\n];\n```", "```js\n// backend/middlewares.php\nrequire './middleware/outputDecorator.php';\n```", "```js\n{\"status\":<status code>,\"data\":<data>}\n```", "```js\n// backend/middleware/outputDecorator.php\nuse function Zend\\Stratigility\\middleware;\n\n$router->middleware(middleware(function ($request, $handler) {\n    $response = $handler->handle($request);\n    $existingContent = (string) $response->getBody();\n    $contentDecoded = json_decode($existingContent, true);\n    $status = $response->getStatusCode();\n    $data = [\n        \"status\" => $status,\n        \"data\" => $contentDecoded\n    ];\n    $payload = json_encode($data);\n\n    $response->getBody()->rewind();\n    $response->getBody()->write($payload);\n\n    return $response\n        ->withHeader('Content-Type', 'application/json')\n        ->withStatus($status);\n}));\n```", "```js\n// backend/core/mysql.php\n$dbconfig = require './config/mysql.php';\n$mysql = new Medoo\\Medoo([\n    'database_type' => $dbconfig['type'],\n    'database_name' => $dbconfig['name'],\n    'server' => $dbconfig['host'],\n    'username' => $dbconfig['username'],\n    'password' => $dbconfig['password']\n]);\nreturn $mysql;\n```", "```js\n// backend/public/index.php\nchdir(dirname(__DIR__));\nrequire_once 'vendor/autoload.php';\n\n$request = Zend\\Diactoros\\ServerRequestFactory::fromGlobals(\n    //...\n);\n\n$router = new League\\Route\\Router;\ntry {\n    require 'middlewares.php';\n    require 'routes.php';\n    $response = $router->dispatch($request);\n} catch(Exception $exception) {\n    // handle errors\n}\n\n(new Zend\\HttpHandlerRunner\\Emitter\\SapiEmitter)->emit($response);\n```", "```js\n\n\u2514\u2500\u2500 module\n    \u251c\u2500\u2500 Home\n    \u2502 \u251c\u2500\u2500 index.php\n    \u2502 \u2514\u2500\u2500 _routes\n    \u2502 \u2514\u2500\u2500 hello_world.php\n    \u2514\u2500\u2500 User\n        \u251c\u2500\u2500 index.php\n        \u2514\u2500\u2500 _routes\n           \u2514\u2500\u2500 ...\n```", "```js\n// module/Home/_routes/hello_world.php\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\ServerRequestInterface;\n\n$router->get('/', function (ServerRequestInterface $request) : \n  ResponseInterface {\n    return new Zend\\Diactoros\\Response\\JsonResponse(\n     'Hello world!');\n});\n```", "```js\n\u2514\u2500\u2500 User\n    \u251c\u2500\u2500 index.php\n    \u251c\u2500\u2500 _routes\n    \u2502 \u251c\u2500\u2500 delete_user.php\n    \u2502 \u251c\u2500\u2500 fetch_user.php\n    \u2502 \u2514\u2500\u2500 ...\n    \u2514\u2500\u2500 Controller\n        \u2514\u2500\u2500 ...\n```", "```js\n// module/User/_routes/fetch_users.php\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\ServerRequestInterface;\n\n$router->get('/users', function (ServerRequestInterface $request) : ResponseInterface {\n    $database = require './core/mysql.php';\n    $users = (new Spectre\\User\\Controller\\\n     Fetch\\Users($database))->fetch();\n    return new Zend\\Diactoros\\Response\\JsonResponse($users);\n});\n```", "```js\n\u2514\u2500\u2500 Controller\n    \u251c\u2500\u2500 Controller.php\n    \u251c\u2500\u2500 Insert\n    \u2502 \u2514\u2500\u2500 User.php\n    \u251c\u2500\u2500 Fetch\n    \u2502 \u251c\u2500\u2500 User.php\n    \u2502 \u2514\u2500\u2500 Users.php\n    \u251c\u2500\u2500 Update\n    \u2502 \u2514\u2500\u2500 User.php\n    \u2514\u2500\u2500 Delete\n        \u2514\u2500\u2500 User.php\n```", "```js\n// module/User/Controller/Controller.php\nnamespace Spectre\\User\\Controller;\n\nuse Medoo\\Medoo;\n\nabstract class Controller\n{\n    protected $database;\n\n    public function __construct(Medoo $database)\n    {\n        $this->database = $database;\n    }\n}\n```", "```js\n// module/User/Controller/Fetch/Users.php\nnamespace Spectre\\User\\Controller\\Fetch;\n\nuse Spectre\\User\\Controller\\Controller;\n\nclass Users extends Controller\n{\n    public function fetch()\n    {\n        $columns = [\n            'uuid',\n            'name',\n            'slug',\n            'created_on',\n            'updated_on',\n        ];\n        return $this->database->select('user', $columns);\n    }\n}\n```", "```js\n{\"status\":200,\"data\":[{\"uuid\":\"...\",\"name\":\"Jane\",\"slug\":\"jane\",...},{...},{...}]}\n```", "```js\n$ npm install @nuxtjs/axios\n$ npm install @nuxtjs/proxy\n```", "```js\n// nuxt.config.js\nmodule.exports = {\n  modules: [\n    '@nuxtjs/axios'\n  ],\n\n  axios: {\n    proxy: true\n  },\n\n  proxy: {\n    '/api/': { target: 'http://0.0.0.0:8181', \n     pathRewrite: {'^/api/': ''} }\n  }\n}\n```", "```js\n$axios.get('/api/users')\n```", "```js\nhttp://0.0.0.0:8181/api/users\n```", "```js\nhttp://0.0.0.0:8181/users\n```", "```js\nusers\n\u251c\u2500\u2500 index.vue\n\u251c\u2500\u2500 _slug.vue\n\u251c\u2500\u2500 add\n\u2502 \u2514\u2500\u2500 index.vue\n\u251c\u2500\u2500 update\n\u2502 \u2514\u2500\u2500 _slug.vue\n\u2514\u2500\u2500 delete\n    \u2514\u2500\u2500 _slug.vue\n```", "```js\n// pages/users/index.vue\nexport default {\n  async asyncData ({ error, $axios }) {\n    try {\n      let { data } = await $axios.get('/api/users')\n      return {\n        users: data.data\n      }\n    } catch (err) {\n      // handle errors.\n    }\n  }\n}\n```"]