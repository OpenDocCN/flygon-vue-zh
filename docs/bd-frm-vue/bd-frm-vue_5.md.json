["```js\n> npm install vuelidate\n```", "```js\nimport Vuelidate from 'vuelidate';\nVue.use(Vuelidate);\n```", "```js\n<input type=\"text\" v-model=\"form.website\" />\n```", "```js\nform: {\n  firstName: '',\n  lastName: '',\n  email: '',\n  love: 'fun',\n  telephone: '',\n  website: ''\n},\n```", "```js\nvalidations: {\n  form: {\n    website: {\n      // our validations will go here\n    }\n  }\n}\n```", "```js\nimport { url } from 'vuelidate/lib/validators';\n```", "```js\nvalidations: {\n  form: {\n    website: {\n      url // Validate that the \"website\" input is a valid URL\n    }\n   }\n },\n```", "```js\n<input type=\"text\" v-model=\"$v.form.website.$model\" />\n<pre>{{ $v }}</pre>\n```", "```js\n<input \n  type=\"text\"\n  v-model=\"$v.form.website.$model\" \n  class=\"form-control\"\n  :class=\"{ \n    'is-valid': !$v.form.website.$error && $v.form.website.$dirty,\n    'is-invalid': $v.form.website.$error\n  }\"\n/>\n```", "```js\nvalidations: {\nform: {\nfirst_name: { alpha, required },\nlast_name: { alpha },\n    email: { email, required },\n  telephone: {\n      validPhone: phone => phone.match(/((\\(\\d{3}\\) ?)|(\\d{3}-))? \n      \\d{3}-\\d{4}/) !== null\n    },\n    website: { url },\n    love: { required }\n  }\n},\n```", "```js\nimport { url, alpha, email, required } from 'vuelidate/lib/validators';\n```", "```js\n<form>\n  <BaseInput \n    label=\"First Name:\" \n    v-model=\"$v.form.firstName.$model\" \n  />\n  <BaseInput \n    label=\"Last Name:\" \n    v-model=\"$v.form.lastName.$model\" \n  />\n  <BaseInput \n    label=\"Email:\" \n    v-model=\"$v.form.email.$model\" \n    type=\"email\" \n  />\n  <BaseInput \n    label=\"The URL of your favorite Vue-made website\"\n    v-model=\"$v.form.website.$model\"\n  />\n  <BaseInput \n    label=\"Telephone\"\n    type=\"text\" \n    v-model=\"$v.form.telephone.$model\"\n    :mask=\"'(###)###-####'\"\n  />\n  <BaseSelect \n    label=\"What do you love most about Vue?\" \n    :options=\"loveOptions\"\n    v-model=\"$v.form.love.$model\"\n  />\n  <div class=\"form-group\">\n    <button \n      :disabled=\"!formIsValid\" \n      @click.prevent=\"onSubmit\" \n      type=\"submit\" \n      class=\"btn btn-primary\"\n    >Submit</button>\n  </div>\n</form>\n```", "```js\nvalidator: {\ntype: Object,\n  required: false,\n  validator($v) {\n    return $v.hasOwnProperty('$model');\n  }\n}\n```", "```js\n:class=\"{\n  'is-valid': validator && !validator.$error && validator.$dirty,\n  'is-invalid': validator && validator.$error\n}\"\n```", "```js\n<BaseInput \n  label=\"First Name:\" \n  v-model=\"$v.form.firstName.$model\" \n  :validator=\"$v.form.firstName\"\n/>\n<BaseInput \n  label=\"Last Name:\" \n  v-model=\"$v.form.lastName.$model\" \n  :validator=\"$v.form.lastName\"\n/>\n<BaseInput \n  label=\"Email:\" \n  v-model=\"$v.form.email.$model\" \n  :validator=\"$v.form.email\"\n  type=\"email\" \n/>\n<BaseInput \n  label=\"The URL of your favorite Vue-made website\"\n  v-model=\"$v.form.website.$model\"\n  :validator=\"$v.form.website\"\n/>\n<BaseInput \n  label=\"Telephone\"\n  type=\"text\" \n  v-model=\"$v.form.telephone.$model\"\n  :validator=\"$v.form.telephone\"\n  :mask=\"'(###)###-####'\"\n/>\n```", "```js\nvalidator: {\ntype: Object,\n required: false,\n  validator($v) {\n   return $v.hasOwnProperty('$model');\n  }\n}\n```", "```js\n:class=\"{\n  'is-valid': validator && !validator.$error,\n  'is-invalid': validator && validator.$error\n}\"\n```", "```js\n<BaseSelect \n  label=\"What do you love most about Vue?\" \n  :options=\"loveOptions\"\n  v-model=\"$v.form.love.$model\"\n  :validator=\"$v.form.love\"\n/>\n```", "```js\ncomputed: {}\n```", "```js\n<button \n :disabled=\"$v.$error\" \n  @click.prevent=\"onSubmit\" \n  type=\"submit\" \n  class=\"btn btn-primary\"\n>Submit</button>\n```", "```js\nonSubmit() {\n  this.$v.$touch();\n  if (!this.$v.$invalid) return;   \n  axios.post('http://localhost:3000/dolphins', { params:        \n  this.form }).then(response => {\n  console.log('Form has been posted', response);\n  }).catch(err => {\n  console.log('An error occurred', err);\n  });\n}\n```"]