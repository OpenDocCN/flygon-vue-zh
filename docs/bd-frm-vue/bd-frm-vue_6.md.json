["```js\n> npm install vuex\n```", "```js\nimport Vuex from 'vuex';\nVue.use(Vuex);\nconst store = new Vuex.store({\n  // Our global store\n});\n```", "```js\nnew Vue({\nstore: store,\n  render: h => h(App),\n}).$mount('#app');\n```", "```js\n{ \n   \"firstName\": \"Marina\",\n   \"lastName\": \"Mosti\",\n    \"email\": \"marina@test.com\",\n    \"love\": \"fun\",\n    \"telephone\": \"(800)555-5555\",\n    \"website\": \"http://dev.to/marinamosti\"\n}\n\n```", "```js\nstate: {\n  user: {\n    firstName: '',\n    lastName: '',\n    email: '',\n    love: 'fun',\n   telephone: '',\n    website: ''\n  }\n},\n```", "```js\nmutations: {\n updateUser(state, user) {\n    state.user = user;\n  },\n},\n```", "```js\nimport axios from 'axios';\n```", "```js\ngetLoggedInUser(context) {\n    axios.get('http://localhost:3000/user')\n    .then(response => {\n      context.commit('updateUser', response.data);\n    });\n  },\n```", "```js\ncreated() {\n this.$store.dispatch('getLoggedInUser');\n}\n```", "```js\n<template>\n <div class=\"row\">\n    <div class=\"col-12 text-right\">\n      <p v-if=\"$store.state.user\">\n        Welcome back, {{ $store.state.user.firstName }}!\n      </p>\n    </div>\n  </div>\n</template>\n```", "```js\nimport 'TheHeader' from '@/components/TheHeader' \n```", "```js\ncomponents: { BaseInput, BaseSelect, TheHeader },\n```", "```js\n<div id=\"app\" class=\"container py-4\">\n    <TheHeader />\n    ...\n```", "```js\nupdateUser(property, value) {\n  this.$store.dispatch('updateUserData', {\n    property,\n    value\n  });\n\n  this.$v.form[property].$touch();\n}\n```", "```js\ndata() {\n  return {\n    loveOptions: [\n      { label: 'Fun to use', value: 'fun' },\n      { label: 'Friendly learning curve', value: 'curve' },\n      { label: 'Amazing documentation', value: 'docs' },\n      { label: 'Fantastic community', value: 'community' }\n    ]\n  }\n},\n```", "```js\nfirstName() {\n  return this.$store.state.user.firstName;\n}\n```", "```js\nimport { mapState } from 'vuex';\n```", "```js\ncomputed: {\n  ...mapState({form: 'user'}),\n},\n```", "```js\n<BaseInput \n  label=\"First Name:\"\n  :value=\"$store.state.user.firstName\"\n  @input=\"updateUser('firstName', $event)\"\n  :validator=\"$v.form.firstName\"\n/>\n<BaseInput  \n  label=\"Last Name:\"\n  :value=\"$store.state.user.lastName\"\n  @input=\"updateUser('lastName', $event)\"\n  :validator=\"$v.form.lastName\"\n/>\n<BaseInput \n  label=\"Email:\" \n  :value=\"$store.state.user.email\"\n  @input=\"updateUser('email', $event)\"\n  :validator=\"$v.form.email\"\n  type=\"email\" \n/>\n<BaseInput \n  label=\"The URL of your favorite Vue-made website\"\n  :value=\"$store.state.user.website\"\n  @input=\"updateUser('website', $event)\"\n  :validator=\"$v.form.website\"\n/>\n<BaseInput \n  label=\"Telephone\"\n  type=\"text\" \n  :value=\"$store.state.user.telephone\"\n  @input=\"updateUser('telephone', $event)\"\n  :validator=\"$v.form.telephone\"\n  :mask=\"'(###)###-####'\"\n/>\n<BaseSelect \n  label=\"What do you love most about Vue?\" \n  :options=\"loveOptions\"\n  :value=\"$store.state.user.love\"\n  @input=\"updateUser('love', $event)\"\n  :validator=\"$v.form.love\"\n/>\n```", "```js\nupdateUserData(context, payload) {\nconst userCopy = {...context.state.user};\n  userCopy[payload.property] = payload.value;\n  context.commit('updateUser', userCopy);\n}\n```"]