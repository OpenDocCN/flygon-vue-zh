["```js\n<div id=\"app\">\n  <div v-custom-directive>{{ something }}</div>\n<!-- etc -->\n```", "```js\n<div id=\"app\">\n  <div v-custom-directive=\"aValue\">{{ something }}</div>\n<!-- etc -->\n```", "```js\nVue.directive('customDirective', {\n  // details for the directive go here\n}\n```", "```js\ndirectives: {\n  directiveName: {\n    // some code to describe functionality\n  }\n}\n```", "```js\n<div id=\"app\" class=\"container mt-5\">\n  <h1 class=\"h2\">{{ heading }}</h1>\n  <div v-custom-directive>\n    Just some text here\n  </div>\n</div>\n```", "```js\nVue.directive('customDirective', {\n  inserted: function(el) {\n    el.style.cssText = `\n      color: blue; \n      border: 1px solid black; \n      background: gray; \n      padding: 20px; \n      width: 50%;\n    `\n  }\n});\n\nnew Vue({\n  el: '#app',\n  data() {\n    return {\n      heading: 'A custom global directive'\n    }\n  }\n});\n```", "```js\n<main id=\"app\">\n    <custom-article v-custom-directive></custom-article>\n    <custom-article></custom-article>\n    <another-custom-article v-another-custom></another-custom-article>\n</main>\n```", "```js\nconst anotherCustom = {\n  inserted: function(el) {\n    el.style.cssText = `\n      color: green; \n      border: 1px solid black; \n      background: yellow; \n      padding: 20px; \n      width: 50%;\n    ` \n  }\n}\n\nconst customArticle = {\n  template: `\n    <article>\n      Our own custom article component!\n    </article>`\n}\n\nVue.component('another-custom-article', {\n  template: `\n    <article>\n      Another custom article component! \n      This one has it's own child component too!\n      Here it is:\n      <custom-article v-custom-directive></custom-article>\n    </article>`,\n    components: {\n      'customArticle': customArticle\n    },\n    directives: {\n      customDirective: {\n        inserted: function(el) {\n          el.style.cssText = `\n            color: blue; \n            border: 1px solid black; \n            background: gray; \n            padding: 20px; \n            width: 50%;\n          ` \n      }\n    } \n  } \n})\n\nnew Vue({\n    el: '#app',\n    components: { \n      'customArticle': customArticle,\n    },\n    directives: {\n      customDirective: {\n        inserted: function(el) {\n          el.style.cssText = `\n            color: blue; \n            border: 1px solid black; \n            background: gray; \n            padding: 20px; \n            width: 50%;\n          ` \n       }\n     },\n     'anotherCustom': anotherCustom\n  }\n})\n```", "```js\n<div id=\"app\" class=\"container mt-5\">\n  <h1 class=\"h2\">{{ heading }}</h1>\n  <button v-buttonize=\"tomato\">\n    Just some text here\n  </button>\n  <button v-buttonize=\"lightgoldenrod\">\n    Just some text here\n  </button>\n  <button v-buttonize=\"potato\">\n    Just some text here\n  </button> \n</div>\n```", "```js\nVue.directive('buttonize', {\n  bind(el, binding) {\n    var exp = binding.expression;\n    el.style.cssText += `\n      padding: 10px 20px; \n      border: none; \n      border-radius: 3px; \n      cursor: pointer\n    `;\n    switch(exp) {\n      case 'tomato':\n          el.style.cssText += `\n            background: tomato;\n            color: white;\n          `;\n          break;\n       case 'lightgoldenrod':\n          el.style.cssText += `\n            background: darkgoldenrod;\n            color: lightgoldenrod;\n          `;\n          break;\n        default:\n            el.style.cssText += `\n              background: gray;\n              color: white;\n            `\n    }\n  }\n});\n```", "```js\nnew Vue({\n  el: '#app',\n  data() {\n    return {\n      heading: 'A custom global directive'\n    }\n  }\n});\n```", "```js\nvue create simple-plugin\ncd simple-plugin\nnpm run-serve\n```", "```js\nexport default {\n\n}\n```", "```js\nexport default {\n    install(Vue, options) {\n        alert('This is a simple plugin and currently the options argument is ' + options);\n    }\n}\n```", "```js\nimport SimplePlugin from './plugins/SimplePlugin'\nVue.use(SimplePlugin)\n```", "```js\nThis is the simplest possible Vue plugin and currently the options argument is undefined\n```", "```js\nimport Vue from 'vue'\nimport App from './App.vue'\n\n//import SimplePlugin from './plugins/SimplePlugin'\nimport OptionsPlugin from './plugins/OptionsPlugin'\n\n//Vue.use(SimplestPlugin)\nVue.use(OptionsPlugin)\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App)\n}).$mount('#app')\n```", "```js\nexport default {\n  install(Vue) {\n    Vue.directive('text-length', {\n        bind(el, binding, vnode) {\n            const textLength = el.innerText.length;\n            console.log(\"This element, \" + el.nodeName + \", has text with \" + textLength + \" characters\");\n\n            el.style.cssText = \"border: 2px solid tomato\";\n        }\n    })\n  }\n}\n```", "```js\n<template>\n  <div class=\"hello\">\n    <h1 v-text-length>{{ msg }}</h1>\n```", "```js\nThis element, H1, has text with 26 characters\n```", "```js\nconst OptionsPlugin = { \n  install(Vue, options) {\n    Vue.directive('text-length', {\n        bind(el, binding, vnode) {\n            const textLength = el.innerText.length;\n            console.log(\"This element, \" + el.nodeName + \", has text with \" + textLength + \" characters\");\n\n      if (textLength < 40) {\n        el.style.cssText += \"border:\" + options.selectedOption.plum;\n      } else if (textLength >= 40) {\n        el.style.cssText += \"border:\" + options.selectedOption.orange;\n      }\n        }\n    })\n  }\n};\n\nexport default OptionsPlugin;\n```", "```js\nVue.use(OptionsPlugin, {\n  selectedOption: {\n    plum: \"5px dashed purple\",\n    orange: \"10px double orange\"\n  }\n})\n```", "```js\n<template>\n  <div class=\"hello\">\n    <h1 v-text-length>{{ msg }}</h1>\n    <p v-text-length>\n```", "```js\nThis element, H1, has text with 26 characters\nThis element, P, has text with 121 characters\n```", "```js\nnpm whoami\n```", "```js\nnpm adduser\n```", "```js\npackage name: \"vue-options-plugin\"\nversion: (1.0.0)\ndescription: A simple Vue plugin that shows how to use the options object\nentry point: \"OptionsPlugin.vue\"\ntest command:\ngit repository:\nkeywords:\nlicense: (ISC)\nAbout to write to ...\nIs this ok? (yes)\n```", "```js\nnpm init --scope=username\n```", "```js\ntouch OptionsPlugin.vue\n```", "```js\n{\n  \"name\": \"vue-options-plugin\",\n  \"version\": \"1.0.0\",\n  \"description\": \"A simple Vue plugin that shows how to use options object\",\n  \"main\": \"OptionsPlugin.vue\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"<your-username-here>\",\n  \"license\": \"ISC\"\n}\n```", "```js\nconst OptionsPlugin = { \n  install(Vue, options) {\n    Vue.directive('text-length', {\n        bind(el, binding, vnode) {\n            const textLength = el.innerText.length;\n            console.log(\"This element, \" + el.nodeName + \", has text with \" + textLength + \" characters\");\n\n      if (textLength < 40) {\n        el.style.cssText += \"border:\" + options.selectedOption.plum;\n      } else if (textLength >= 40) {\n        el.style.cssText += \"border:\" + options.selectedOption.orange;\n      }\n        }\n    })\n  }\n};\n\nexport default OptionsPlugin;\n```", "```js\n# optionsplugin\n<p> A demo of making a simple Vue 2 plugin and using it with values stored in the options object. This plugin logs out to the console the number of characters in an element. It also adds different CSS styles based on the length of characters in the element.</p>\n\n## Installation\n```", "```js\n## Configuration\n```", "```js\n## Usage\n<p>To use it, simply add the plugin's custom directive of v-text-length to an element in your template's code.</p>\n```", "```js\nnpm publish --access=public\n```", "```js\n+ vue-options-plugin@1.0.0\n```", "```js\nvue create just-another-project\ncd just-another-project\nnpm run-serve\n```", "```js\nnpm install --save vue-options-plugin\n```", "```js\nimport VueOptionsPlugin from 'vue-options-plugin'\n```"]