["```js\nbutton {\n  background-color: red;\n}\n```", "```js\nbutton:hover {\n  background-color: blue;\n}\n```", "```js\nbutton {\n background-color: red;\n transition: background-color 4s;\n}\nbutton:hover {\n background-color: blue;\n}\n```", "```js\ntransition: property-to-transition transition-duration, property-to-transition transition-duration\n```", "```js\nbutton {\n  background-color: red;\n}\nbutton:hover {\n  animation: change-color 4s;\n}\n@keyframes change-color {\n  0% {\n    background: red;\n  }\n  100% {\n    background: blue;\n  }\n}\n```", "```js\n<!-- HTML -->\n<div id=\"app\">\n  <button>Hover me!</button>\n  <custom-component></custom-component>\n</div>\n\n// JS\nVue.component('customComponent', {\n  template: `\n    <button>Hover me too!</button>\n  `\n});\nnew Vue({\n  el: '#app'\n});\n\n/* CSS */\nbutton {\n  background-color: red;\n  transition: background-color 4s;\n}\nbutton:hover {\n  background-color: blue;\n}\n/* some additional styling */\n* {\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n```", "```js\n<!-- HTML -->\n<div id=\"app\">\n  <button v-on:click=\"show = !show\">\n    Show? {{ show }}\n  </button>\n  <transition>\n    <span v-if=\"show\">\n      <custom-component></custom-component>\n    </span>\n  </transition>\n</div>\n\n// JS\nVue.component('customComponent', {\n  template: `\n    <button>Hover me!</button>\n  `\n});\nnew Vue({\n  el: '#app',\n  data: {\n    show: true\n  }\n});\n\n/* CSS is the same as in the previous example */\n```", "```js\n.v-enter {\n  opacity: 0;\n}\n.v-enter-active {\n transition: opacity 3s;\n}\n```", "```js\n.v-leave {\n  opacity: 1;\n}\n.v-leave-active {\n  transition: opacity 3s;\n}\n.v-leave-to {\n  opacity: 0;\n}\n```", "```js\n.v-enter --> .v-enter-active --> .v-enter-to --> .v-leave --> v-leave-active --> .v-leave-to\n```", "```js\n.v-enter, .v-leave-to {\n  opacity: 0;\n}\n.v-enter-active, .v-leave-active {\n  transition: opacity 3s;\n}\n.v-enter-to, .v-leave {\n  opacity: 1;\n}\n```", "```js\n<!-- HTML -->\n<div id=\"app\">\n  <button v-on:click=\"show = !show\">\n    Show? {{ show }}\n  </button>\n  <transition name=\"named\">\n    <span v-if=\"show\">\n      <custom-component></custom-component>\n    </span>\n  </transition>\n</div>\n\n/* CSS */\n/* 'named' transition */\n.named-enter, .named-leave-to {\n  opacity: 0;\n}\n.named-enter-active, .named-leave-active {\n  transition: opacity 3s;\n}\n.named-enter-to, .named-leave {\n  opacity: 1;\n}\n\n// JS is unchanged\n```", "```js\n<div id=\"app\">\n  <button v-on:click=\"show = !show\">\n    Show? {{ show }}\n  </button>\n  <transition name=\"converted\">\n    <span v-if=\"show\">\n      <custom-component></custom-component>\n    </span>\n  </transition>\n</div>\n```", "```js\nVue.component('customComponent', {\n  template: `\n    <button>Lorem ipsum</button>\n  `\n});\nnew Vue({\n  el: '#app',\n  data: {\n    show: false\n  }\n});\n```", "```js\n/* 'named' transition is replaced with 'converted' animation */\n.converted-enter-active {\n  animation: converted .5s;\n}\n.converted-leave-active {\n  animation: converted .5s reverse;\n}\n@keyframes converted {\n  0% { opacity: 0; }\n  35% { background-color: purple; }\n  65% { background-color: green; }\n  100% { opacity: 1; }\n}\n/* other styles */\nbutton {\n  background-color: red;\n  transition: background-color 4s;\n}\nbutton:hover {\n  background-color: blue;\n}\n/* some additional styling */\n* {\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 18px;\n  font-weight: 600;\n}\nspan {\n  display: inline-block;\n}\n```", "```js\n<div id=\"app\">\n  <button v-on:click=\"show = !show\">\n    Show? {{ show }}\n  </button>\n  <transition :duration=\"4000\"\n     name=\"converted\"\n     enter-active-class=\"rubberBand animated\"\n     leave-active-class=\"bounceOut animated\">\n        <div v-if=\"show\">\n          <custom-component>\n          </custom-component>\n        </div>\n  </transition>\n</div>\n```", "```js\nVue.component('customComponent', {\n  template: `\n    <button>Lorem ipsum</button>\n  `\n});\nnew Vue({\n  el: '#app',\n  data: {\n    show: false\n  }\n});\n```", "```js\nbutton {\n  background-color: red;\n  transition: background-color 4s;\n}\nbutton:hover {\n  background-color: blue;\n}\n\n* {\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 18px;\n  font-weight: 600;\n}\n* { overflow: hidden }\n```", "```js\n<transition mode=\"in-out\">\n```", "```js\n<div id=\"app\">\n  <transition name=\"smooth\" mode=\"out-in\" :duration=\"500\">\n      <button v-if=\"show\" \n              key=\"first\" \n              v-on:click=\"show = !show\">\n                Show? {{ show }}\n      </button>\n      <button v-else\n              key=\"second\" \n              v-on:click=\"show = !show\">\n                Show? {{ show }}\n      </button> \n  </transition>\n  <transition :duration=\"1000\"\n     enter-active-class=\"slideInDown animated\"\n     leave-active-class=\"slideOutDown animated\">\n        <div v-if=\"show\">\n          <custom-component>\n          </custom-component>\n        </div>\n  </transition>\n</div>\n```", "```js\nVue.component('customComponent', {\n  template: `\n    <button>Lorem ipsum</button>\n  `\n});\nnew Vue({\n  el: '#app',\n  data: {\n    show: false\n  }\n});\n```", "```js\n/* CSS classes used are imported from the Animate CSS library\nand can be found in Settings of this pen */\n/* other styles */\n.smooth-enter, .smooth-leave-to {\n  opacity: 0;\n}\n.smooth-enter-active, .smooth-leave-active {\n  transition: opacity .5s;\n}\n.smooth-enter-to, .smooth-leave {\n  opacity: 1;\n}\n\nbutton {\n  background-color: red;\n  transition: background-color 4s;\n}\nbutton:hover {\n  background-color: blue;\n}\n\n* {\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 18px;\n  font-weight: 600;\n}\n* { overflow: hidden }\n```", "```js\n<p v-bind:class=\"{}\">Some text...</p>\n```", "```js\n<button v-bind:class=\"{'btn': true, 'btn-lg': true, 'btn-primary': true, 'btn-secondary': false}\">A button</button>\n```", "```js\n<button v-bind:class=\"'btn':true','btn-lg':true, 'btn-primary':true, 'btn-secondary':btnClicked\">\nA button\n</button>\n```", "```js\ndata: {\n  btnClicked: false,\n}\n```", "```js\n<button \n  v-on:click=\"btnClicked = !btnClicked\" \n  v-bind:class=\"'btn':true','btn-lg':true, 'btn-primary':true, 'btn-secondary':btnClicked\">\n    A button\n</button>\n```", "```js\n<!-- HTML -->\n<div id=\"app\" class=\"p-4\">\n  <h1>Improving dynamic CSS classes example</h1>\n  <p class=\"lead\">Click the button below a few times</p>\n  <button \n    v-on:click=\"btnClicked = !btnClicked\" \n    v-bind:class=\"btnClicked ? btnPrimary : btnSecondary\">\n      btnClicked {{ btnClicked }} \n  </button>\n</div>\n\n// JS\nnew Vue({\n  el: '#app',\n  data() {\n    return {\n      btnClicked: false,\n      btnPrimary: 'btn btn-lg btn-primary',\n      btnSecondary: 'btn btn-lg btn-secondary'\n    }\n  }\n})\n```", "```js\n      btnPrimary: 'btn btn-lg btn-primary bounce animated',\n```", "```js\nbtnSecondary: 'btn btn-lg btn-secondary tada animated'\n```", "```js\n<!-- HTML -->\n<div id=\"app\">\n    <div class=\"tale\">\n        <transition-group>\n          <button \n                  class=\"bare\" \n                  key=\"howManyClaps\" \n                  v-if=\"clapCount\">\n                    {{ clapCount }}\n          </button>\n          <button \n                  class=\"fa fa-thumbs-o-up animated orange\" \n                  key=\"theClapButton\" \n                  v-on:click=\"aClap()\">\n          </button>\n        </transition-group>\n    </div>\n</div>\n```", "```js\nnew Vue({\n  el: \"#app\",\n  data: { \n    clapCount: false\n  },\n  methods: {\n    aClap() {\n      var target = document.querySelector('.fa-thumbs-o-up');\n      if (!target.classList.contains('wobble')) {\n        target.classList.add('wobble');\n      }\n      setTimeout(function() {\n        target.classList.remove('wobble')}, 300\n      )\n      if (this.clapCount < 10) {\n        this.clapCount++\n      } else {\n        target.classList.remove('orange','wobble')\n      }\n    }\n  }\n});\n```", "```js\nbutton.bare {\n  font-size: 30px;\n  background: white;\n  border: none;\n  margin: 0 20px;\n}\nbutton:focus.bare, button:focus.fa {\n  outline: 0;\n}\nbutton.fa {\n  cursor: pointer;\n  color: white;\n  padding: 20px;\n  border-radius: 50%;\n  font-size: 30px;\n  border: none;\n}\n.orange {\n  background: orange;\n}\n\n/* animation hooks */\n.v-enter,\n.v-leave-to{\n  opacity: 0;\n  transform: translate(1000px, 500px);\n}\n.v-enter-active,\n.v-leave-active {\n  transition: opacity 5s, transform 1s\n}\n```", "```js\n  methods: {\n    // ENTER transitions...\n    beforeEnter: function(el) {},\n    enter: function(el, done) {},\n    afterEnter: function(el) {},\n    enterCancelled: function(el) {},\n    // LEAVE transitions...\n    beforeLeave: function(el) {},\n    leave: function(el,done) {},\n    afterLeave: function(el) {},\n    leaveCancelled: function(el) {},\n  }\n```", "```js\n<transition \n  v-on:before-enter=\"beforeEnter\"\n  v-on:enter=\"enter\"\n  v-on:leave=\"leave\"\n  v-bind:css=\"false\">\n<p v-if=\"show\" style=\"font-size:25px\">Animation example with velocity</p>\n</transition>\n```", "```js\nnew Vue({\n  el: \"#app\",\n  data: { \n    clapCount: false\n  },\n  methods: {\n    beforeEnter: function(el) {\n      el.style.opacity = 0\n    },\n        enter: function (el, done) {\n      Velocity(el, { opacity: 1, fontSize: '1.4em' }, { duration: 300 })\n      Velocity(el, { fontSize: '1em' }, { complete: done })\n    },\n    leave: function (el, done) {\n      Velocity(el, { translateX: '15px', rotateZ: '50deg' }, { \n      duration: 600 })\n      Velocity(el, { rotateZ: '100deg' }, { loop: 2 })\n      Velocity(el, {\n        rotateZ: '45deg',\n        translateY: '30px',\n        translateX: '30px',\n        opacity: 0\n      }, { complete: done })},\n    aClap() {\n      var target = document.querySelector('.fa-thumbs-o-up');\n      if (!target.classList.contains('wobble')) {\n        target.classList.add('wobble');\n      }\n      setTimeout(function() {\n        target.classList.remove('wobble')}, 300\n      )\n      if (this.clapCount < 10) {\n        this.clapCount++\n      } else {\n        target.classList.remove('orange','wobble')\n      }\n    }\n  }\n});\n```", "```js\nbutton.bare {\n  font-size: 30px;\n  background: white;\n  border: none;\n  margin: 0 20px;\n}\nbutton:focus.bare, button:focus.fa {\n  outline: 0;\n}\nbutton.fa {\n  cursor: pointer;\n  color: white;\n  padding: 20px;\n  border-radius: 50%;\n  font-size: 30px;\n  border: none;\n}\n.orange {\n  background: orange;\n}\n```"]