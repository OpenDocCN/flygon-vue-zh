["```js\nnew Vue(\n  el: \"#app\",\n  // the rest of the Vue instance code here\n)\n```", "```js\nVue.component('custom-article', {\n  template: `\n    <article>\n      Our own custom article component!\n    </article>`\n})\nnew Vue({\n    el: '#app'\n})\n```", "```js\n// JS\nVue.component('custom-article', {\n  template: `\n    <article>\n      Our own custom article component!\n    </article>`\n})\nVue.component('another-custom-article', {\n  template: `\n    <article>\n      Another custom article component! \n      This one has it's own child component too!\n      Here it is:\n      <custom-article></custom-article>\n    </article>`\n})\nnew Vue({\n    el: '#app'\n})\n\n/* CSS */\narticle {\n  font-size: 40px;\n  padding: 20px;\n  color: limegreen;\n  font-family: Arial;\n  border: 3px solid green;\n  border-radius: 10px;\n}\n\n<!-- HTML -->\n<main id=\"app\">\n    <custom-article></custom-article>\n    <custom-article></custom-article>\n    <another-custom-article></another-custom-article>\n</main>\n```", "```js\nVue.component('another-custom-article', { // etc...\n```", "```js\nVue.component('custom-article', {\n  template: `\n    <article>\n      Our own custom article component!\n    </article>`\n})\n```", "```js\nVue.component('custom-article'\n```", "```js\nvar customArticle = {\n  template: `\n    <article>\n      Our own custom article component!\n    </article>`\n}\n```", "```js\nnew Vue({\n    el: '#app',\n    components: { \n      'custom-article': customArticle\n    }\n})\n```", "```js\nVue.component('another-custom-article', {\n  template: `\n    <article>\n      Another custom article component! \n      This one has it's own child component too!\n      Here it is:\n      <custom-article></custom-article>\n    </article>`,\n    //components: {\n    // 'customArticle': customArticle\n    //}\n})\n```", "```js\n    components: {\n     'customArticle': customArticle\n    }\n```", "```js\nnvm install 8.11.4\n```", "```js\nDownloading node.js version 8.11.4 (64-bit)...\n```", "```js\nnvm use 8.11.4\n```", "```js\nnpm install -g vue-cli\n```", "```js\nvue -V\n```", "```js\nnpm install @vue/cli\n```", "```js\nvue create quickstart-vue\n```", "```js\n$ vue create quickstart-vue\n ? Please pick a preset: (Use arrow keys)\n > default (babel, eslint)\n Manually select features\n```", "```js\n$ vue create quickstart-vue\n ? Please pick a preset: (Use arrow keys)\n ? Please pick a preset: default (babel, eslint)\n ? Pick the package manager to use when installing dependencies: (Use arrow keys)\n ? Pick the package manager to use when installing dependencies: NPM\nInstalling CLI plugins. This might take a while...\n```", "```js\n...\nSuccessfully created project quickstart-vue.\nGet started with the following commands:\n$ cd quickstart-vue\n $ npm run serve\n```", "```js\ncd quickstart-vue\n```", "```js\nnpm run serve\n```", "```js\nimport Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App)\n}).$mount('#app')\n```", "```js\nh => h(App)\n```", "```js\nfunction(h) {\n  return h(App); }\n```", "```js\n<template>\n  <div id=\"app\">\n    <HelloWorld msg=\"Welcome to Vue Quickstart!\"/>\n    <HelloAgain />\n  </div>\n</template>\n\n<script>\nimport HelloWorld from './components/HelloWorld.vue';\nimport HelloAgain from './components/HelloAgain.vue'\n\nexport default {\n  name: 'app',\n  components: {\n    HelloWorld, HelloAgain\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: sans-serif;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n```", "```js\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <p>\n      This is the beginning of something great.\n    </p>\n </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\np {\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n}\n</style>\n```", "```js\n<template>\n <p class=\"hello-again\">\n This is another component.\n </p>\n</template>\n\n<script>\nexport default {\n name: 'HelloAgain'\n}\n</script>\n\n<style scoped>\np {\n font-size: 16px;\n text-align: center;\n color: tomato;\n}\n</style>\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\n    <title>quickstart-vue</title>\n  </head>\n  <body>\n    <noscript>\n      <strong>\n        We're sorry but quickstart-vue doesn't work properly \n        without JavaScript enabled. Please enable it to continue.\n      </strong>\n    </noscript>\n    <div id=\"app\"></div>\n    <!-- built files will be auto injected -->\n  </body>\n</html>\n```", "```js\n<template>\n <p class=\"hello-again\">\n This is another component.\n <button v-on:click=\"incrementUp\">Add One</button>\n <br>\n <span>Current value of the counter: {{ counter }}</span>\n </p>\n</template>\n```", "```js\n<script>\nexport default {\n name: 'HelloAgain',\n data() {\n     return {\n         counter: 0\n     }\n },\n methods: {\n     incrementUp: function() {\n         this.counter++\n     }\n }\n}\n</script>\n```", "```js\n<style scoped>\np {\n font-size: 16px;\n text-align: center;\n color: tomato;\n}\nbutton {\n    display: block;\n    margin: 10px auto;\n    background: tomato;\n    color: white;\n    border: none;\n    padding: 5px 10px;\n    font-size: 16px;\n    border-radius: 4px;\n    cursor: pointer;\n}\n</style>\n```", "```js\n<template>\n  <div id=\"app\">\n    <HelloWorld msg=\"Welcome to Vue Quickstart!\"/>\n    <button v-on:click=\"addTen\">Add 10</button>\n    <HelloAgain v-bind:counterFromParent=\"countUp\"/>\n  </div>\n</template>\n```", "```js\n  methods: {\n    addTen() {\n      this.countUp += 10\n    }\n  },\n```", "```js\n  data: function() {\n    return {\n      countUp: 0\n    };\n  },\n```", "```js\nprops: ['counterFromParent']\n```", "```js\n<span>Current value of the counter: {{ counter + counterFromParent }}</span>\n```", "```js\n<template>\n  <div id=\"app\">\n    <HelloWorld msg=\"Welcome to Vue Quickstart!\"/>\n    <button v-on:click=\"addTen\">Add 10</button>\n    <HelloAgain v-bind:counterFromParent=\"countUp\"/>\n  </div>\n</template>\n```", "```js\nthis.$emit();\n```", "```js\nthis.$emit('counterHasBeenReset')\n```", "```js\nthis.$emit('counterHasBeenReset', this.countUp);\n```", "```js\n methods: {\n     incrementUp: function() {\n         this.counter++\n     },\n     resetTheCounter() {\n         this.countUp = 0;\n         this.$emit('counterHasBeenReset', this.countUp);\n     }\n }\n```", "```js\n<button v-on:click=\"resetTheCounter\">Reset parent-added values</button>\n```", "```js\n<HelloAgain v-bind:counterFromParent=\"countUp\" v-on:counterHasBeenReset=\"countUp = $event\" />\n```", "```js\nv-on:counterHasBeenReset=\"countUp = $event\" />\n```", "```js\n<slot></slot>\n```", "```js\n<!-- HTML -->\n<div id=\"app\"></div>\n\n// JS\nVue.component(\"basicComponent\", {\n  template: `\n    <div>\n      <slot name=\"firstSlot\"></slot>\n      <slot name=\"secondSlot\"></slot>\n      <slot></slot>\n    </div>\n  `\n});\n\nnew Vue({\n  el: \"#app\",\n  template: `\n    <basicComponent>\n      <p slot=\"firstSlot\">\n        This content will populate the slot named 'firstSlot' \n        in the 'basicComponent' template\n      </p>\n      <p slot=\"secondSlot\">\n        This content will populate the slot named 'secondSlot' \n        in the 'basicComponent' template\n      </p>\n    </basicComponent>\n  `\n});\n\n/* CSS */\ndiv {\n  font-size: 30px;\n  padding: 20px;\n  color: darkgoldenrod;\n  font-family: Arial;\n  border: 3px solid darkgoldenrod;\n  border-radius: 0px;\n}\n```", "```js\n<slot></slot>\n```", "```js\n<slot>This is some default information</slot>\n```"]