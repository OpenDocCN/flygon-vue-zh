["```js\n> npm install -g @vue/cli @vue/cli-service-global\n```", "```js\n> npm install -g typescript\n```", "```js\n> npm init -y\n```", "```js\n> npm install typescript --only=dev\n```", "```js\n> tsc --init\n```", "```js\nfunction sum(a: number, b: number): number {\n    return a + b;\n}\n\nconst firstNumber: number = 10;\n\nconst secondNumber: number = 20;\n\nconsole.log(sum(firstNumber, secondNumber));\n```", "```js\n> tsc ./index.ts\n```", "```js\nfunction sum(a, b) {\n    return a + b;\n}\nvar firstNumber = 10;\nvar secondNumber = 20;\nconsole.log(sum(firstNumber, secondNumber));\n```", "```js\n> npm init -y\n```", "```js\n> npm install typescript --only=dev\n```", "```js\nconst myText: string = 'My Simple Text';\nconst myTextAgain: string = \"My Simple Text\";\nconst greeting: string = `Welcome back ${myName}!`;\n```", "```js\nconst myAge: number = 31;\nconst hexNumber: number = 0xf010d;\nconst binaryNumber: number = 0b1011;\nconst octalNumber: number = 0o744;\n```", "```js\nconst isTaskDone: boolean = false;\nconst isGreaterThen: boolean = 10 > 5;\n```", "```js\nconst primeNumbers: number[] = [1, 3, 5, 7, 11];\n```", "```js\nconst switchInstructions: Array<boolean> = [true, false, false, true];\n```", "```js\nlet person: [string, number];\nperson = ['Heitor', 31];\n\nconsole.log(`My name is ${person[0]} and I am ${person[1]} years old`);\n```", "```js\nenum ErrorLevel { \n    Info, \n    Debug, \n    Warning, \n    Error, \n    Critical,\n}\n\nconsole.log(ErrorLevel.Error); // 3\nconsole.log(ErrorLevel[3]); // Error\n```", "```js\nenum Color {\n    Red = '#FF0000',\n    Blue = '#0000FF',\n    Green = '#00FF00',\n}\n\nenum Languages {\n    JavaScript = 1,\n    PHP,\n    Python,\n    Java = 10,\n    Ruby,\n    Rust,\n    TypeScript,\n}\n\nconsole.log(Color.Red) // '#FF0000'\nconsole.log(Languages.TypeScript) // 13\n```", "```js\nlet maybeIs: any = 4;\nmaybeIs = 'a string?';\nmaybeIs = true;\n```", "```js\nfunction logThis(str: string): void{\n    console.log(str);\n}\n```", "```js\ninterface IPerson {\n    name: string;\n    age: number;\n}\n\nconst person: IPerson = {\n    name: 'Heitor',\n    age: 31,\n};\n```", "```js\nfunction greetingUser(user: {name: string, lastName: string}) {\n    console.log(`Hello, ${user.name} ${user.lastName}`);\n}\n```", "```js\ntype Person = {\n    name: string,\n    age: number,\n};\n\nconst person: Person = {\n    name: 'Heitor',\n    age: 31,\n};\n\nconsole.log(`My name is ${person.name}, I am ${person.age} years old`);\n```", "```js\nconst sumOfValues: (a:number, b:number): number = (a: number, b: number): number => a + b;\n```", "```js\nconst complexFunction: (a: number) => (b:number) => number = (a: number): (b: number) => number => (b: number): number => a + b;\n```", "```js\nfunction foo(a: number, b:number): number{\n    return a + b;\n}\n```", "```js\nfunction greetingStudent(student: {name: string}){\n    console.log(`Hello ${student.name}`);\n}\n\nconst newStudent = {name: 'Heitor'};\n\ngreetingStudent(newStudent);\n```", "```js\ninterface IStudent {\n    name: string;\n    course?: string;\n    readonly university: string;\n}\n\nfunction greetingStudent(student: IStudent){\n    console.log(`Hello ${student.name}`);\n    if(student.course){\n        console.log(`Welcome to the ${student.course}` semester`);\n    }\n}\n\nconst newStudent: IStudent = { name: 'Heitor', university: 'UDF' };\n\ngreetingStudent(newStudent);\n```", "```js\n{\n    \"compilerOptions\": {\n        \"target\": \"ES5\",\n        \"experimentalDecorators\": true\n    }\n}\n```", "```js\nfunction classSeal(constructor: Function) {\n    Object.seal(constructor);\n    Object.seal(constructor.prototype);\n}\n```", "```js\n@classSeal\nclass Animal {\n    sound: string;\n    constructor(sound: string) {\n        this.sound = sound;\n    }\n    emitSound() {\n        return \"The animal says, \" + this.sound;\n    }\n}\n```", "```js\n> npm init -y\n```", "```js\n> npm install typescript --only=dev\n```", "```js\nexport enum FoodChainType {\n    Carnivorous = 'carnivorous',\n    Herbivorous = 'herbivorous',\n    Omnivorous = 'omnivorous',\n}\n```", "```js\ninterface IAnimal {\n    name: string;\n    sound?: string;\n    family: string;\n    foodChainType: FoodChainType;\n}\n```", "```js\ninterface IAnimalConstructor extends IAnimal { \n}\n```", "```js\ninterface IBasicAnimal extends IAnimal {\n  whoAmI: () => void;\n  makeSound: () => void;\n}\n\nexport class Animal implements IBasicAnimal {\n  public name: string;\n  public sound: string;\n  public family: string;\n  public foodChainType: FoodChainType;\n\n  constructor(params: IAnimalConstructor) {\n    this.name = params.name;\n    this.sound = params.sound || '';\n    this.family = params.family;\n    this.foodChainType = params.foodChainType;\n  }\n\n  public whoAmI(): void {\n    console.log(`I am a ${this.name}, my family is ${this.family}. \n    My diet is ${this.foodChainType}.`);\n    if (this.sound) {\n      console.log([...Array(2).fill(this.sound)].join(', '));\n    }\n  }\n\n  public makeSound(): void {\n    console.log(this.sound);\n  }\n}\n```", "```js\nimport {Animal, FoodChainType} from './Animal';\n\nclass Dog extends Animal {\n  constructor() {\n    super({\n      name: 'Dog',\n      sound: 'Wof!',\n      family: 'Canidae',\n      foodChainType: FoodChainType.Carnivorous,\n    });\n  }n\n}\n```", "```js\n> vue create my-first-project\n```", "```js\n?  Please pick a preset: (Use arrow keys)  default (babel, eslint) \u276f **Manually select features** \u200c\n```", "```js\n?  Check the features needed for your project: (Use arrow keys)  \u276f Babel\n TypeScript Progressive Web App (PWA) Support Router Vuex  CSS Pre-processors  \u276f  Linter / Formatter\n Unit Testing  \u276f **E2E Testing**\n```", "```js\n?  Check the features needed for your project: (Use arrow keys) \u276f Babel\n TypeScript Progressive Web App (PWA) Support Router Vuex \u276f CSS Pre-processors \u276f **Linter / Formatter**\n Unit Testing **E2E Testing**\n```", "```js\n?  Pick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules\n  are supported by default): (Use arrow keys) Sass/SCSS (with dart-sass)  Sass/SCSS (with node-sass)  **Less** \u276f Stylus \n```", "```js\n?  Pick a linter / formatter config: (Use arrow keys) ESLint with error prevention only \u276f **ESLint + Airbnb config** ESLint + Standard config \n  ESLint + Prettier\n```", "```js\n?  Pick additional lint features: (Use arrow keys) **Lint on save** \u276f Lint and fix on commit\n```", "```js\n?  Where do you prefer placing config for Babel, ESLint, etc.?  (Use arrow keys) \u276f **In dedicated config files** In package.json\n```", "```js\n?  Save this as a preset for future projects?  (y/N) n\n```", "```js\n> vue ui\n```", "```js\n> vue ui\n```", "```js\n> vue ui\n```", "```js\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport Component from 'vue-class-component';\n\n@Component\nexport default class Counter extends Vue {\n  valueNumber: number = 0;\n\n  get formattedNumber() {\n    return `Your total number is: ${this.valueNumber}`;\n  }\n\n  increase() {\n    this.valueNumber += 1;\n  }\n\n  decrease() {\n    this.valueNumber -= 1;\n  }\n}\n</script>\n```", "```js\n<template>\n  <div>\n    <fieldset>\n      <legend>{{ formattedNumber }}</legend>\n        <button @click=\"increase\">Increase</button>\n        <button @click=\"decrease\">Decrease</button>\n    </fieldset>\n  </div>\n</template>\n```", "```js\n<template>\n  <div id=\"app\">\n    <Counter />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator';\nimport Counter from './components/Counter.vue';\n\n@Component({\n  components: {\n    Counter,\n  },\n})\nexport default class App extends Vue {\n\n}\n</script>\n<style lang=\"stylus\">\n  #app\n    font-family 'Avenir', Helvetica, Arial, sans-serif\n    -webkit-font-smoothing antialiased\n    -moz-osx-font-smoothing grayscale\n    text-align center\n    color #2c3e50\n    margin-top 60px\n</style>\n```", "```js\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport Component from 'vue-class-component';\n\n@Component\nexport default class CounterByTen extends Vue {\n  valueNumber: number = 0;\n\n  get formattedNumber() {\n    return `Your total number is: ${this.valueNumber}`;\n  }\n\n  increase() {\n    this.valueNumber += 10;\n  }\n\n  decrease() {\n    this.valueNumber -= 10;\n  }\n}\n</script>\n```", "```js\n<template>\n  <div>\n    <fieldset>\n      <legend>{{ this.formattedNumber }}</legend>\n        <button @click=\"increase\">Increase By Ten</button>\n        <button @click=\"decrease\">Decrease By Ten</button>\n    </fieldset>\n  </div>\n</template>\n```", "```js\n<template>\n  <div id=\"app\">\n    <Counter />\n    <hr />\n    <CounterByTen />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator';\nimport Counter from './components/Counter.vue';\nimport CounterByTen from './components/CounterByTen.vue';\n\n@Component({\n  components: {\n    Counter,\n    CounterByTen,\n  },\n})\nexport default class App extends Vue {\n\n}\n</script>\n<style lang=\"stylus\">\n  #app\n    font-family 'Avenir', Helvetica, Arial, sans-serif\n    -webkit-font-smoothing antialiased\n    -moz-osx-font-smoothing grayscale\n    text-align center\n    color #2c3e50\n    margin-top 60px\n</style>\n```", "```js\nimport Vue from 'vue';\nimport Component from 'vue-class-component';\n\n@Component\nexport default class DefaultNumber extends Vue {\n  valueNumber: number = 0;\n\n  get formattedNumber() {\n    return `Your total number is: ${this.valueNumber}`;\n  }\n}\n```", "```js\n<template>\n  <div>\n    <fieldset>\n      <legend>{{ this.formattedNumber }}</legend>\n      <button @click=\"increase\">Increase By Ten</button>\n      <button @click=\"decrease\">Decrease By Ten</button>\n    </fieldset>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport Component, { mixins } from 'vue-class-component';\nimport DefaultNumber from '../mixins/defaultNumber';\n\n@Component\nexport default class CounterByTen extends mixins(DefaultNumber) {\n  increase() {\n    this.valueNumber += 10;\n  }\n\n  decrease() {\n    this.valueNumber -= 10;\n  }\n}\n</script>\n```", "```js\nimport { createDecorator } from 'vue-class-component';\nimport componentMountLogger from './componentLogger';\n\nexport default createDecorator((options) => {\n  options.mixins = [...options.mixins, componentMountLogger];\n});\n```", "```js\nexport default {\n  mounted() {\n    if (this.debug) {\n      const componentName = this.name || '';\n      console.log(`The ${componentName} was mounted \n                                       successfully.`);\n\n      const dataKeys = Object.keys(this.$data);\n\n      if (dataKeys.length) {\n        console.log('The base data are:');\n        console.table(dataKeys);\n\n        dataKeys.forEach((key) => {\n          this.$watch(key, (newValue, oldValue) => {\n            console.log(`The new value for ${key} is: \n                            ${newValue}`);\n            console.log(`The old value for ${key} is: \n                            ${oldValue}`);\n          }, {\n            deep: true,\n          });\n        });\n      }\n    }\n  },\n};\n```", "```js\n<template>\n  <div>\n    <fieldset>\n      <legend>{{ this.formattedNumber }}</legend>\n      <button @click=\"increase\">Increase</button>\n      <button@click=\"decrease\">Decrease</button>\n    </fieldset>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport Component from 'vue-class-component';\nimport componentMount from '../decorators/componentMount';\n\n@Component\n@componentMount\nexport default class Counter extends Vue {\n  valueNumber: number = 0;\n\n  debug: boolean = true;\n\n  get formattedNumber() {\n    return `Your total number is: ${this.valueNumber}`;\n  }\n\n  increase() {\n    this.valueNumber += 1;\n  }\n\n  decrease() {\n    this.valueNumber -= 1;\n  }\n}\n</script>\n```", "```js\nimport Component from 'vue-class-component';\n\nComponent.registerHooks([\n  'beforeRouteEnter',\n  'beforeRouteLeave',\n]);\n```", "```js\nimport './classComponentsHooks/vue-router';\n\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\nVue.config.productionTip = false;\n\nnew Vue({\n router,\n render: h => h(App),\n}).$mount('#app');\n```", "```js\n<template>\n  <div class=\"secure\">\n    <h1>This is an secure page</h1>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator';\nimport { Route, RawLocation } from 'vue-router';\n\ntype RouteNext = (to?: RawLocation | false | ((vm: Vue) => any) | \n   void) => void;\n\n@Component\nexport default class Home extends Vue {\n  beforeRouteEnter(to: Route, from: Route, next: RouteNext) {\n    const securePassword = 'vuejs';\n\n    const userPassword = prompt('What is the password?');\n\n    if (userPassword === securePassword) {\n      next();\n    } else if (!userPassword) {\n      next('/');\n    }\n  }\n\n  beforeRouteLeave(to: Route, from: Route, next: RouteNext) {\n    alert('Bye!');\n    next();\n  }\n}\n</script>\n```", "```js\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from './views/Home.vue';\n\nVue.use(Router);\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n      component: Home,\n    },\n    {\n      path: '/about',\n      name: 'about',\n      component: () => import('./views/About.vue'),\n    },\n    {\n      path: '/secure',\n      name: 'secure',\n      component: () => import('./views/Secure.vue'),\n    },\n  ],\n});\n```", "```js\n<template>\n  <div id=\"app\">\n    <div id=\"nav\">\n      <router-link to=\"/\">Home</router-link> |\n      <router-link to=\"/about\">About</router-link> |\n      <router-link to=\"/secure\">Secure</router-link>\n    </div>\n    <router-view/>\n  </div>\n</template>\n<style lang=\"stylus\">\n#app\n  font-family 'Avenir', Helvetica, Arial, sans-serif\n  -webkit-font-smoothing antialiased\n  -moz-osx-font-smoothing grayscale\n   text-align center\n   color #2c3e50\n\n#nav\n  padding 30px\n  a\n    font-weight bold\n    color #2c3e50\n    &.router-link-exact-active\n      color #42b983\n</style>\n```", "```js\n> npm install -S vue-property-decorator\n```", "```js\nimport {\n  Vue,\n  Component,\n  Prop,\n} from 'vue-property-decorator';\n\n@Component\nexport default class DefaultNumber extends Vue {\n  valueNumber: number = 0;\n\n  @Prop(Number) readonly value: number | undefined;\n\n  get formattedNumber() {\n    return `Your total number is: ${this.valueNumber}`;\n  }\n}\n```", "```js\nimport {\n  Watch,\n  Mixins,\n} from 'vue-property-decorator';\nimport DefaultNumber from './defaultNumber';\n\nexport default class NumberWatchers extends Mixins(DefaultNumber) {\n  @Watch('valueNumber')\n  onValueNumberChanged(val: number) {\n    this.$emit('input', val);\n  }\n\n  @Watch('value', { immediate: true })\n  onValueChanged(val: number) {\n    this.valueNumber = val;\n  }\n}\n```", "```js\n<template>\n  <div>\n    <fieldset>\n      <legend>{{ this.formattedNumber }}</legend>\n      <button @click=\"increase\">Increase</button>\n      <button @click=\"decrease\">Decrease</button>\n    </fieldset>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport Component, { mixins } from 'vue-class-component';\nimport NumberWatcher from '../mixins/numberWatcher';\n\n@Component\nexport default class Counter extends mixins(NumberWatcher) {\n  increase() {\n    this.valueNumber += 1;\n  }\n\n  decrease() {\n    this.valueNumber -= 1;\n  }\n}\n</script>\n```", "```js\n<template>\n  <div>\n    <fieldset>\n      <legend>{{ this.formattedNumber }}</legend>\n      <button @click=\"increase\">Increase By Ten</button>\n      <button @click=\"decrease\">Decrease By Ten</button>\n    </fieldset>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport Component, { mixins } from 'vue-class-component';\nimport NumberWatcher from '../mixins/numberWatcher';\n\n@Component\nexport default class CounterByTen extends mixins(NumberWatcher) {\n  increase() {\n    this.valueNumber += 10;\n  }\n\n  decrease() {\n    this.valueNumber -= 10;\n  }\n}\n</script>\n```", "```js\n<template>\n  <div id=\"app\">\n    <Counter\n      v-model=\"amount\"\n    />\n    <hr />\n    <CounterByTen\n      v-model=\"amount\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator';\nimport Counter from './components/Counter.vue';\nimport CounterByTen from './components/CounterByTen.vue';\n\n@Component({\n  components: {\n    Counter,\n    CounterByTen,\n  },\n})\nexport default class App extends Vue {\n  amount: number = 0;\n}\n</script>\n<style lang=\"stylus\">\n  #app\n    font-family 'Avenir', Helvetica, Arial, sans-serif\n    -webkit-font-smoothing antialiased\n    -moz-osx-font-smoothing grayscale\n    text-align center\n    color #2c3e50\n    margin-top 60px\n</style>\n```"]