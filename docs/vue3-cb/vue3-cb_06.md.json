["```js\n> npm install -g @vue/cli @vue/cli-service-global\n```", "```js\n> vue create initial-routes\n```", "```js\n?  Please pick a preset: (Use arrow keys) default (babel, eslint**)** \u276f **Manually select features** \u200c\n```", "```js\n?  Check the features needed for your project: (Use arrow keys) \u276f Babel\n TypeScript Progressive Web App (PWA) Support \u276f Router\n Vuex  CSS Pre-processors \u276f Linter / Formatter\n Unit Testing E2E Testing\n```", "```js\n?  Use history mode for router? (Requires proper server setup for\n  index fallback in production)  (Y**/n) y**\n```", "```js\n?  Pick a linter / formatter config: (Use arrow keys) ESLint with error prevention only \u276f **ESLint + Airbnb config** ESLint + Standard config \n  ESLint + Prettier\n```", "```js\n?  Pick additional lint features: (Use arrow keys)  Lint on save \u276f Lint and fix on commit\n```", "```js\n?  Where do you prefer placing config for Babel, ESLint, etc.?  (Use arrow keys) \u276f **In dedicated config files****In package.json** \n```", "```js\n?  Save this as a preset for future projects?  (y/N) n\n```", "```js\n<script> export default {\n  name: 'NavigationBar', }; </script>\n```", "```js\n<div id=\"nav\">\n <router-link to=\"/\">\n  Home\n  </router-link> |\n  <router-link to=\"/about\">\n  About\n  </router-link> |\n  <router-link to=\"/contact\">\n  Contact\n  </router-link> </div>\n```", "```js\n<script> export default {\n  name: 'ContactPage', }; </script>\n```", "```js\n<template>\n <div class=\"contact\">\n <h1>This is a contact page</h1>\n </div> </template>\n```", "```js\n<script> export default {\n  name: 'AboutPage', }; </script>\n```", "```js\n<template>\n <div class=\"about\">\n <h1>This is an about page</h1>\n </div> </template>\n```", "```js\nimport NavigationBar from './components/navigationBar.vue';\n```", "```js\nexport default {\n  components: { NavigationBar }, };\n```", "```js\n<template>\n <div id=\"app\">\n <navigation-bar />\n <router-view/>\n </div> </template>\n```", "```js\nimport Vue from 'vue'; import VueRouter from 'vue-router'; import Home from '../views/Home.vue'; import Contact from '../views/contact.vue';\n```", "```js\n{\n  path: '/contact',\n  name: 'contact',\n  component: Contact, },\n```", "```js\n> npm run serve\n```", "```js\n> vue create route-project\n```", "```js\nmounted() {}\n```", "```js\nmounted() {\n  setTimeout(() => {\n  this.$router.push({\n  name: 'contact',\n  params: {\n  name: 'Heitor Ribeiro',\n  age: 31,\n }, }); }, 5000); },\n```", "```js\nmounted() {}\n```", "```js\nmounted() {\n  if (Object.keys(this.$route.params).length) {\n  alert(`Hey! I've got some parameter! \n       ${JSON.stringify(this.$route.params)}`);\n  } },\n```", "```js\n> npm run serve\n```", "```js\n> vue ui\n```", "```js\n<template>\n <div id=\"app\">\n <router-view/>\n </div> </template>\n```", "```js\nexport default {\n  methods: {\n  async changeRoute(name, id = 0) {\n  await this.$router.push({\n name,\n  params: {\n id,\n  },\n  });\n  },\n  } }\n```", "```js\nconst localApi = createAxios({\n  baseURL: `${document.location.protocol}//${document.location.host}`, });\n```", "```js\nimport changeRouteMixin from '@/mixin/changeRoute';\n```", "```js\nmixins: [changeRouteMixin],\n```", "```js\nmethods: {\n  async getAllUsers() {\n  const { data } = await getHttp(`api/users`);\n  this.userList = data;\n  },\n  async deleteUser(id) {\n  await deleteHttp(`api/users/${id}`);\n  await this.getAllUsers();\n  }, }\n```", "```js\n<template>\n <vs-row>\n <vs-col\n  vs-type=\"flex\"\n  vs-justify=\"left\"\n  vs-align=\"left\"\n  vs-w=\"12\">\n <vs-card... />\n    </vs-col>\n  </vs-row>\n</template>\n```", "```js\n<vs-td :data=\"data[index].id\">\n <vs-button\n  color=\"primary\"\n  type=\"filled\"\n  icon=\"remove_red_eye\"\n  size=\"small\"\n  @click=\"changeRoute('view', data[index].id)\"\n  />\n <vs-button\n  color=\"success\"\n  type=\"filled\"\n  icon=\"edit\"\n  size=\"small\"\n  @click=\"changeRoute('edit', data[index].id)\"\n  />\n <vs-button\n  color=\"danger\"\n  type=\"filled\"\n  icon=\"delete\"\n  size=\"small\"\n  @click=\"deleteUser(data[index].id)\"\n  /> </vs-td>\n```", "```js\n<template slot=\"footer\">\n <vs-row vs-justify=\"flex-start\">\n <vs-button\n  color=\"primary\"\n  type=\"filled\"\n  icon=\"fiber_new\"\n  size=\"small\"\n  @click=\"changeRoute('create')\"\n  >\n  Create User\n    </vs-button>\n </vs-row> </template>\n```", "```js\nimport changeRouteMixin from '@/mixin/changeRoute';\n```", "```js\nmixins: [changeRouteMixin],\n```", "```js\nasync createUser() {\n  await postHttp(`/api/users`, {\n  data: {\n  ...this.userData,\n  }\n });\n  this.changeRoute('list'); },\n```", "```js\n<template>\n <vs-row>\n <vs-col\n  vs-type=\"flex\"\n  vs-justify=\"left\"\n  vs-align=\"left\"\n  vs-w=\"12\">\n <vs-card... />\n    </vs-col>\n  </vs-row>\n</template>\n```", "```js\n<vs-button\n  color=\"danger\"\n  type=\"filled\"\n  icon=\"cancel\"\n  size=\"small\"\n  style=\"margin-left: 5px\"\n  @click=\"changeRoute('list')\" >\n  Cancel\n</vs-button>\n```", "```js\nimport changeRouteMixin from '@/mixin/changeRoute';\n```", "```js\nmixins: [changeRouteMixin],\n```", "```js\ncomputed: {\n  userId() {\n  return this.$route.params.id;\n  }, },\n```", "```js\nmethods: {\n  async getUserById() {\n  const { data } = await getHttp(`api/users/${this.userId}`);\n  this.userData = data;\n  }, }\n```", "```js\n<template>\n <vs-row>\n <vs-col\n  vs-type=\"flex\"\n  vs-justify=\"left\"\n  vs-align=\"left\"\n  vs-w=\"12\">\n <vs-card... />\n    </vs-col>\n  </vs-row>\n</template>\n```", "```js\n<vs-button\n  color=\"primary\"\n  type=\"filled\"\n  icon=\"arrow_back\"\n  size=\"small\"\n  style=\"margin-left: 5px\"\n  @click=\"changeRoute('list')\" >\n  Back\n</vs-button>\n```", "```js\nimport changeRouteMixin from '@/mixin/changeRoute';\n```", "```js\nmixins: [changeRouteMixin],\n```", "```js\ncomputed: {\n  userId() {\n  return this.$route.params.id;\n  }, },\n```", "```js\nmethods: {\n  async getUserById() {\n  const { data } = await getHttp(`api/users/${this.userId}`);\n  this.userData = data;\n  },\n  async updateUser() {\n  await patchHttp(`api/users/${this.userData.id}`, {\n  data: {\n  ...this.userData,\n  }\n });\n  this.changeRoute('list');\n  }, },\n```", "```js\n<template>\n <vs-row>\n <vs-col\n  vs-type=\"flex\"\n  vs-justify=\"left\"\n  vs-align=\"left\"\n  vs-w=\"12\">\n <vs-card... />\n    </vs-col>\n  </vs-row>\n</template>\n```", "```js\n<vs-button\n  color=\"danger\"\n  type=\"filled\"\n  icon=\"cancel\"\n  size=\"small\"\n  style=\"margin-left: 5px\"\n  @click=\"changeRoute('list')\" >\n  Cancel\n</vs-button>\n```", "```js\nimport List from '@/views/List.vue'; import View from '@/views/View.vue'; import Edit from '@/views/Edit.vue'; import Create from '@/views/Create.vue'; \n```", "```js\n{\n  path: '/',\n  name: 'list',\n  component: List, },\n```", "```js\n{\n  path: '/view/:id',\n  name: 'view',\n  component: View, },\n```", "```js\n{\n  path: '/edit/:id',\n  name: 'edit',\n  component: Edit, },\n```", "```js\n{\n  path: '/create',\n  name: 'create',\n  component: Create, },\n```", "```js\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes });\n```", "```js\n> npm run serve\n```", "```js\n> vue create http-project\n```", "```js\n{\n  path: '/user',\n  name: 'list',\n  alias: '/',\n  component: List, },\n```", "```js\n{\n  path: '/user/:id',\n  name: 'view',\n  alias: '/view/:id',\n  component: View, },\n```", "```js\n{\n  path: '/user/edit/:id',\n  name: 'edit',\n  alias: '/edit/:id',\n  component: Edit, },\n```", "```js\n{\n  path: '/user/create',\n  name: 'create',\n  alias: '/create',\n  component: Create, },\n```", "```js\n> vue create http-project\n```", "```js\n{\n  path: '/create-new-user',\n  redirect: '/user/create', },\n```", "```js\n{\n  path: '/users',\n  redirect: {\n  name: 'list',\n  }, },\n```", "```js\n{\n  path: '/my-user/:id?',\n  redirect(to) {\n  if (to.params.id) {\n  return '/user/:id';\n  }\n  return '/user';\n  }, },\n```", "```js\n{\n  path: '*',\n  redirect: '/', },\n```", "```js\n> vue create http-project\n```", "```js\n<template>\n  <router-view/>\n</template>\n<script>\n  export default {\n    name: 'User',\n  }\n</script>\n```", "```js\nimport Index from '@/views/user/Index.vue'; import List from '@/views/user/List.vue'; import View from '@/views/user/View.vue'; import Edit from '@/views/user/Edit.vue'; import Create from '@/views/user/Create.vue';\n```", "```js\nexport default [\n {  path: '/user',\n  name: 'user',\n  component: Index,\n  children: [],\n  }, ] \n```", "```js\n{\n  path: '',\n  name: 'list',\n  component: List, },\n```", "```js\n{\n  path: ':id',\n  name: 'view',\n  component: View, },\n```", "```js\n{\n  path: 'edit/:id',\n  name: 'edit',\n  component: Edit, },\n```", "```js\n{\n  path: 'create',\n  name: 'create',\n  component: Create, },\n```", "```js\nimport Vue from 'vue'; import VueRouter from 'vue-router'; import UserRoutes from './user';\n```", "```js\nconst routes = [\n  ...UserRoutes,\n  {\n  path: '*',\n  redirect: '/user',\n  }, ];\n```", "```js\n> vue create http-project\n```", "```js\n<vs-row>\n <vs-col vs-w=\"12\" class=\"text-center\">\n <!-- Icon --> </vs-col>\n <vs-col vs-w=\"12\" class=\"text-center\">\n <!-- Title --> </vs-col>\n <vs-col vs-w=\"12\" class=\"text-center\">\n <!-- Text --> </vs-col>\n <vs-col vs-w=\"12\" class=\"text-center\">\n <!-- Button --> </vs-col> </vs-row>\n```", "```js\n<vs-icon\n  icon=\"sentiment_dissatisfied\"\n  size=\"large\" />\n```", "```js\n<h1>Oops!</h1>\n```", "```js\n<h3>The page you are looking for are not here anymore...</h3>\n```", "```js\n<vs-button\n  type=\"relief\"\n  to=\"/\" >\n  Back to Home...\n</vs-button>\n```", "```js\n<style scoped> </style>\n```", "```js\n.text-center {\n  text-align: center;\n  margin-bottom: 20px; }  \n```", "```js\nimport Vue from 'vue'; import VueRouter from 'vue-router'; import UserRoutes from './user'; import NotFound from '@/views/NotFound';\n```", "```js\n{\n  path: '/',\n  redirect: '/user' },\n```", "```js\n{\n  path: '*',\n  component: NotFound, },  \n```", "```js\n> npm run serve\n```", "```js\n> vue create http-project\n```", "```js\ndata: () => ({\n  username: '',\n  password: '',\n  error: false, }),\n```", "```js\nmethods: {\n  userSignIn() {\n  if (this.username && this.password) {\n  window.sessionStorage.setItem('auth',\n  window.btoa(JSON.stringify({\n  username: this.username\n          })\n ) );\n  this.error = false;\n  this.$router.replace('/user');\n  }\n  this.error = true;\n  return false;\n  }, }\n```", "```js\n<div class=\"container\">\n <vs-row\n  vs-align=\"center\"\n  vs-justify=\"center\"\n  >\n  </vs-row>\n</div>\n```", "```js\n<vs-col\n  vs-lg=\"4\"\n  vs-sm=\"6\"\n  vs-xs=\"10\" >\n <vs-card\n  style=\"margin: 20px;\"\n  >\n  </vs-card>\n</vs-col>\n```", "```js\n<template slot=\"header\">\n <h3>\n  User Login\n  </h3> </template>\n```", "```js\n<vs-row\n  vs-align=\"center\"\n  vs-justify=\"center\" >\n <vs-col vs-w=\"12\">\n  </vs-col>\n <vs-col vs-w=\"12\">\n  </vs-col>\n</vs-row>\n```", "```js\n<vs-input\n  :danger=\"error\"\n  danger-text=\"Check your username or email\"\n  label=\"Username\"\n  placeholder=\"Username or e-mail\"\n  v-model=\"username\" />\n```", "```js\n<vs-input\n  :danger=\"error\"\n  label=\"Password\"\n  type=\"password\"\n  danger-text=\"Check your password\"\n  placeholder=\"Your password\"\n  v-model=\"password\" />\n```", "```js\n<template slot=\"footer\">\n <vs-row vs-justify=\"flex-start\">\n <vs-button\n  color=\"success\"\n  type=\"filled\"\n  icon=\"account_circle\"\n  size=\"small\"\n  @click=\"userSignIn\"\n  >\n  Sign-in\n    </vs-button>\n </vs-row> </template>\n```", "```js\n<style scoped></style>\n```", "```js\n<style scoped>\n  .container {\n  height: 100vh;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-content: center;\n  }    .vs-input {\n  margin: 5px;\n  } </style>\n```", "```js\n> npm run serve\n```", "```js\nexport default (to, from, next) => {  }; \n```", "```js\nif (to.meta.authenticated && sessionStorage.getItem('auth')) {\n  return next(); }\n```", "```js\nif (!to.meta.authenticated) {\n  return next(); }\n```", "```js\nnext('/login');\n```", "```js\nimport Index from '@/views/user/Index.vue';  import List from '@/views/user/List.vue'; import View from '@/views/user/View.vue'; import Edit from '@/views/user/Edit.vue'; import Create from '@/views/user/Create.vue';   export default [\n {  path: '/user',\n  name: 'user',\n  component: Index,\n  meta: {\n  authenticated: true,\n  },\n  children: [\n {  path: '',\n  name: 'list',\n  component: List,\n  meta: {\n  authenticated: true,\n  },\n  },\n  {\n  path: ':id',\n  name: 'view',\n  component: View,\n  meta: {\n  authenticated: true,\n  },\n  },\n  {\n  path: 'edit/:id',\n  name: 'edit',\n  component: Edit,\n  meta: {\n  authenticated: true,\n  },\n  },\n  {\n  path: 'create',\n  name: 'create',\n  component: Create,\n  meta: {\n  authenticated: true,\n  },\n  },\n  ],\n  }, ]\n```", "```js\nimport Vue from 'vue'; import VueRouter from 'vue-router'; import UserRoutes from './user'; import NotFound from '@/views/NotFound'; import Login from '@/views/Login'; import AuthenticationMiddleware from './middleware/authentication';\n```", "```js\n{\n  path: '/login',\n  name: 'login',\n  component: Login,\n  meta: {\n  authenticated: false,\n  }, },\n```", "```js\n{\n  path: '*',\n  component: NotFound,\n  meta: {\n  authenticated: false,\n  }, },\n```", "```js\nrouter.beforeEach(AuthenticationMiddleware);\n```", "```js\n> vue create http-project\n```", "```js\n{\n  path: '/login',\n  name: 'login',\n  component: () => import('@/views/Login'),\n  meta: {\n  authenticated: false,\n }, },\n```", "```js\n{\n  path: '/user',\n  name: 'user',\n  component: () => import('@/views/user/Index.vue'),\n  meta: {\n  authenticated: true,\n  },\n  children: [], },\n```"]