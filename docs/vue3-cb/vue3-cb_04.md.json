["```js\n> npm install -g @vue/cli @vue/cli-service-global\n```", "```js\n> vue create visual-component\n```", "```js\n?  Please pick a preset: **(Use arrow keys)** \u276f default (babel, eslint) \n  Manually select features  \u200c\n```", "```js\n<template>\n <div class=\"cardBox elevation_2\">\n <div class=\"section\">\n This is a Material Card Box\n </div>\n </div>\n</template>\n```", "```js\n<script>\n  export default {\n   name: 'MaterialCardBox',\n  };\n</script>\n```", "```js\n.elevation_0 {\n    border: 1px solid rgba(0, 0, 0, 0.12);\n}\n\n.elevation_1 {\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2),\n        0 1px 1px rgba(0, 0, 0, 0.14),\n        0 2px 1px -1px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_2 {\n    box-shadow: 0 1px 5px rgba(0, 0, 0, 0.2),\n        0 2px 2px rgba(0, 0, 0, 0.14),\n        0 3px 1px -2px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_3 {\n    box-shadow: 0 1px 8px rgba(0, 0, 0, 0.2),\n        0 3px 4px rgba(0, 0, 0, 0.14),\n        0 3px 3px -2px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_4 {\n    box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2),\n        0 4px 5px rgba(0, 0, 0, 0.14),\n        0 1px 10px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_5 {\n    box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2),\n        0 5px 8px rgba(0, 0, 0, 0.14),\n        0 1px 14px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_6 {\n    box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2),\n        0 6px 10px rgba(0, 0, 0, 0.14),\n        0 1px 18px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_7 {\n    box-shadow: 0 4px 5px -2px rgba(0, 0, 0, 0.2),\n        0 7px 10px 1px rgba(0, 0, 0, 0.14),\n        0 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_8 {\n    box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\n        0 8px 10px 1px rgba(0, 0, 0, 0.14),\n        0 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_9 {\n    box-shadow: 0 5px 6px -3px rgba(0, 0, 0, 0.2),\n        0 9px 12px 1px rgba(0, 0, 0, 0.14),\n        0 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_10 {\n    box-shadow: 0 6px 6px -3px rgba(0, 0, 0, 0.2),\n        0 10px 14px 1px rgba(0, 0, 0, 0.14),\n        0 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_11 {\n    box-shadow: 0 6px 7px -4px rgba(0, 0, 0, 0.2),\n        0 11px 15px 1px rgba(0, 0, 0, 0.14),\n        0 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_12 {\n    box-shadow: 0 7px 8px -4px rgba(0, 0, 0, 0.2),\n        0 12px 17px 2px rgba(0, 0, 0, 0.14),\n        0 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_13 {\n    box-shadow: 0 7px 8px -4px rgba(0, 0, 0, 0.2),\n        0 13px 19px 2px rgba(0, 0, 0, 0.14),\n        0 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_14 {\n    box-shadow: 0 7px 9px -4px rgba(0, 0, 0, 0.2),\n        0 14px 21px 2px rgba(0, 0, 0, 0.14),\n        0 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_15 {\n    box-shadow: 0 8px 9px -5px rgba(0, 0, 0, 0.2),\n        0 15px 22px 2px rgba(0, 0, 0, 0.14),\n        0 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_16 {\n    box-shadow: 0 8px 10px -5px rgba(0, 0, 0, 0.2),\n        0 16px 24px 2px rgba(0, 0, 0, 0.14),\n        0 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_17 {\n    box-shadow: 0 8px 11px -5px rgba(0, 0, 0, 0.2),\n        0 17px 26px 2px rgba(0, 0, 0, 0.14),\n        0 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_18 {\n    box-shadow: 0 9px 11px -5px rgba(0, 0, 0, 0.2),\n        0 18px 28px 2px rgba(0, 0, 0, 0.14),\n        0 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_19 {\n    box-shadow: 0 9px 12px -6px rgba(0, 0, 0, 0.2),\n        0 19px 29px 2px rgba(0, 0, 0, 0.14),\n        0 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_20 {\n    box-shadow: 0 10px 13px -6px rgba(0, 0, 0, 0.2),\n        0 20px 31px 3px rgba(0, 0, 0, 0.14),\n        0 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_21 {\n    box-shadow: 0 10px 13px -6px rgba(0, 0, 0, 0.2),\n        0 21px 33px 3px rgba(0, 0, 0, 0.14),\n        0 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_22 {\n    box-shadow: 0 10px 14px -6px rgba(0, 0, 0, 0.2),\n        0 22px 35px 3px rgba(0, 0, 0, 0.14),\n        0 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_23 {\n    box-shadow: 0 11px 14px -7px rgba(0, 0, 0, 0.2),\n        0 23px 36px 3px rgba(0, 0, 0, 0.14),\n        0 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n\n.elevation_24 {\n    box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2),\n        0 24px 38px 3px rgba(0, 0, 0, 0.14),\n        0 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n```", "```js\n<style scoped>\n  @import url('https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap');\n  @import '../style/elevation.css';\n\n  *{\n    font-family: 'Roboto', sans-serif;\n  }\n  .cardBox{\n      width: 100%;\n  max-width: 300px;\n    background-color: #fff;\n    position: relative;\n    display: inline-block;\n    border-radius: 0.25rem;\n  }\n  .cardBox > .section {\n    padding: 1rem;\n    position: relative;\n  }\n</style>\n```", "```js\n> npm run serve\n```", "```js\n<template>\n  <div class=\"cardBox elevation_2\">\n    <div class=\"header\">\n      <slot\n        v-if=\"$slots.header\"\n        name=\"header\"\n      />\n      <div v-else>\n        <h1 class=\"cardHeader cardText\">\n          Card Header\n        </h1>\n        <h2 class=\"cardSubHeader cardText\">\n          Card Sub Header\n        </h2>\n      </div>\n    </div>\n    <div class=\"media\">\n      <slot\n        v-if=\"$slots.media\"\n        name=\"media\"\n      />\n      <img\n        v-else\n        src=\"https://via.placeholder.com/350x250\"\n      >\n    </div>\n    <div\n      v-if=\"$slots.default\"\n      class=\"section cardText\"\n      :class=\"{\n        noBottomPadding: $slots.action,\n        halfPaddingTop: $slots.media,\n      }\"\n    >\n      <slot />\n    </div>\n    <div\n      v-if=\"$slots.action\"\n      class=\"action\"\n    >\n      <slot name=\"action\" />\n    </div>\n  </div>\n</template>\n```", "```js\nh1, h2, h3, h4, h5, h6{\n    margin: 0;\n}\n.cardText{\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    text-decoration: inherit;\n    text-transform: inherit;\n    font-size: 0.875rem;\n    line-height: 1.375rem;\n    letter-spacing: 0.0071428571em;\n}\nh1.cardHeader{\n    font-size: 1.25rem;\n    line-height: 2rem;\n    font-weight: 500;\n    letter-spacing: .0125em;\n}\nh2.cardSubHeader{\n    font-size: .875rem;\n    line-height: 1.25rem;\n    font-weight: 400;\n    letter-spacing: .0178571429em;\n    opacity: .6;\n}\n```", "```js\n<style scoped>\n@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap\");\n@import \"../style/elevation.css\";\n@import \"../style/cardStyles.css\";\n\n* {\n  font-family: \"Roboto\", sans-serif;\n}\n\n.cardBox {\n  width: 100%;\n  max-width: 300px;\n  border-radius: 0.25rem;\n  background-color: #fff;\n  position: relative;\n  display: inline-block;\n  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.2), 0 2px 2px rgba(0, 0, 0, 0.14),\n    0 3px 1px -2px rgba(0, 0, 0, 0.12);\n}\n.cardBox > .header {\n  padding: 1rem;\n  position: relative;\n  display: block;\n}\n.cardBox > .media {\n  overflow: hidden;\n  position: relative;\n  display: block;\n  max-width: 100%;\n}\n.cardBox > .section {\n  padding: 1rem;\n  position: relative;\n  margin-bottom: 1.5rem;\n  display: block;\n}\n.cardBox > .action {\n  padding: 0.5rem;\n  position: relative;\n  display: block;\n}\n.cardBox > .action > *:not(:first-child) {\n  margin-left: 0.4rem;\n}\n.noBottomPadding {\n  padding-bottom: 0 !important;\n}\n.halfPaddingTop {\n  padding-top: 0.5rem !important;\n}\n</style>\n```", "```js\n<template>\n  <div id=\"app\">\n    <MaterialCardBox>\n      <template v-slot:header>\n        <strong>Card Title</strong><br>\n        <span>Card Sub-Title</span>\n      </template>\n      <template v-slot:media>\n        <img src=\"https://via.placeholder.com/350x150\">\n      </template>\n      <p>Main Section</p>\n      <template v-slot:action>\n        <button>Action Button</button>\n        <button>Action Button</button>\n      </template>\n    </MaterialCardBox>\n  </div>\n</template>\n```", "```js\n> npm run serve\n```", "```js\n<script>\nexport default {\n  name: 'MaterialCardBox',\n  inheritAttrs: false,\n  props: {\n    header: {\n      type: String,\n      required: false,\n      default: '',\n      validator: v => typeof v === 'string',\n    },\n    subHeader: {\n      type: String,\n      required: false,\n      default: '',\n      validator: v => typeof v === 'string',\n    },\n    mainText: {\n      type: String,\n      required: false,\n      default: '',\n      validator: v => typeof v === 'string',\n    },\n    showMedia: {\n      type: Boolean,\n      required: false,\n      default: false,\n      validator: v => typeof v === 'boolean',\n    },\n    imgSrc: {\n      type: String,\n      required: false,\n      default: '',\n      validator: v => typeof v === 'string',\n    },\n    showActions: {\n      type: Boolean,\n      required: false,\n      default: false,\n      validator: v => typeof v === 'boolean',\n    },\n    elevation: {\n      type: Number,\n      required: false,\n      default: 2,\n      validator: v => typeof v === 'number',\n    },\n  },\n  computed: {},\n};\n</script>\n```", "```js\n  computed: {\n    showMediaContent() {\n      return (this.$slots.media || this.imgSrc) && this.showMedia;\n    },\n    showActionsButtons() {\n      return this.showActions && this.$slots.action;\n    },\n    showHeader() {\n      return this.$slots.header || (this.header || this.subHeader);\n    },\n    showMainContent() {\n      return this.$slots.default || this.mainText;\n    },\n    cardElevation() {\n      return `elevation_${parseInt(this.elevation, 10)}`;\n    },\n  },\n```", "```js\n<template>\n  <div\n    class=\"cardBox\"\n    :class=\"cardElevation\"\n  >\n    <div\n      v-if=\"showHeader\"\n      class=\"header\"\n    >\n      <slot\n        v-if=\"$slots.header\"\n        name=\"header\"\n      />\n      <div v-else>\n        <h1 class=\"cardHeader cardText\">\n          {{ header }}\n        </h1>\n        <h2 class=\"cardSubHeader cardText\">\n          {{ subHeader }}\n        </h2>\n      </div>\n    </div>\n    <div\n      v-if=\"showMediaContent\"\n      class=\"media\"\n    >\n      <slot\n        v-if=\"$slots.media\"\n        name=\"media\"\n      />\n      <img\n        v-else\n        :src=\"imgSrc\"\n      >\n    </div>\n    <div\n      v-if=\"showMainContent\"\n      class=\"section cardText\"\n      :class=\"{\n        noBottomPadding: $slots.action,\n        halfPaddingTop: $slots.media,\n      }\"\n    >\n      <slot v-if=\"$slots.default\" />\n      <p\n        v-else\n        class=\"cardText\"\n      >\n        {{ mainText }}\n      </p>\n    </div>\n    <div\n      v-if=\"showActionsButtons\"\n      class=\"action\"\n    >\n      <slot\n        v-if=\"$slots.action\"\n        name=\"action\"\n      />\n    </div>\n  </div>\n</template>\n```", "```js\n> npm run serve\n```", "```js\n> npm install --save is-color\n```", "```js\n<script>\n  import isColor from 'is-color';\n\n  export default {\n    name: 'MaterialButton',\n    props: {\n      backgroundColor: {\n        type: String,\n        required: false,\n        default: '#fff',\n        validator: v => typeof v === 'string' && isColor(v),\n      },\n      textColor: {\n        type: String,\n        required: false,\n        default: '#000',\n        validator: v => typeof v === 'string' && isColor(v),\n      },\n      isRound: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n      isFlat: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n    },\n  };\n</script>\n```", "```js\n<template functional>\n  <button\n    tabindex=\"0\"\n    class=\"button\"\n    :class=\"{\n      round: props.isRound,\n      isFlat: props.isFlat,\n    }\"\n    :style=\"{\n      background: props.backgroundColor,\n      color: props.textColor\n    }\"\n    v-on=\"listeners\"\n  >\n    <div\n      tabindex=\"-1\"\n      class=\"button_focus_helper\"\n    />\n    <slot/>\n  </button>\n</template>\n```", "```js\n<style scoped>\n  .button {\n    user-select: none;\n    position: relative;\n    outline: 0;\n    border: 0;\n    border-radius: 0.25rem;\n    vertical-align: middle;\n    cursor: pointer;\n    padding: 4px 16px;\n    font-size: 14px;\n    line-height: 1.718em;\n    text-decoration: none;\n    color: inherit;\n    background: transparent;\n    transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n    min-height: 2.572em;\n    font-weight: 500;\n    text-transform: uppercase;\n  }\n  .button:not(.isFlat){\n    box-shadow: 0 1px 5px rgba(0, 0, 0, 0.2),\n    0 2px 2px rgba(0, 0, 0, 0.14),\n    0 3px 1px -2px rgba(0, 0, 0, 0.12);\n  }\n\n  .button:not(.isFlat):focus:before,\n  .button:not(.isFlat):active:before,\n  .button:not(.isFlat):hover:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    border-radius: inherit;\n    transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n  }\n\n  .button:not(.isFlat):focus:before,\n  .button:not(.isFlat):active:before,\n  .button:not(.isFlat):hover:before {\n    box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2),\n    0 5px 8px rgba(0, 0, 0, 0.14),\n    0 1px 14px rgba(0, 0, 0, 0.12);\n  }\n\n  .button_focus_helper {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    border-radius: inherit;\n    outline: 0;\n    opacity: 0;\n    transition: background-color 0.3s cubic-bezier(0.25, 0.8, 0.5, 1),\n    opacity 0.4s cubic-bezier(0.25, 0.8, 0.5, 1);\n  }\n\n  .button_focus_helper:after, .button_focus_helper:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    border-radius: inherit;\n    transition: background-color 0.3s cubic-bezier(0.25, 0.8, 0.5, 1),\n    opacity 0.6s cubic-bezier(0.25, 0.8, 0.5, 1);\n  }\n\n  .button_focus_helper:before {\n    background: #000;\n  }\n\n  .button_focus_helper:after {\n    background: #fff;\n  }\n\n  .button:focus .button_focus_helper:before,\n  .button:hover .button_focus_helper:before {\n    opacity: .1;\n  }\n\n  .button:focus .button_focus_helper:after,\n  .button:hover .button_focus_helper:after {\n    opacity: .6;\n  }\n\n  .button:focus .button_focus_helper,\n  .button:hover .button_focus_helper {\n    opacity: 0.2;\n  }\n\n  .round {\n    border-radius: 50%;\n  }\n</style>\n```", "```js\n> npm run serve\n```", "```js\n<script>\nexport default {\n  name: 'StarRatingInput',\n  props: {\n    maxRating: {\n      type: Number,\n      required: false,\n      default: 5,\n    },\n  },\n  data: () => ({\n    rating: 0,\n  }),\n  methods: {\n    updateRating(value) {\n      this.rating = value;\n    },\n    emitFinalVote(value) {\n      this.updateRating(value);\n      this.$emit('final-vote', this.rating);\n    },\n    getStarName(rate) {\n      if (rate <= this.rating) {\n        return 'star';\n      }\n      if (Math.fround((rate - this.rating)) < 1) {\n        return 'star_half';\n      }\n      return 'star_border';\n    },\n  },\n};\n</script>\n```", "```js\n<template>\n  <div class=\"starRating\">\n    <span class=\"rateThis\">\n      <slot />\n    </span>\n    <ul>\n      <li\n        v-for=\"rate in maxRating\"\n        :key=\"rate\"\n        @mouseenter=\"updateRating(rate)\"\n        @click=\"emitFinalVote(rate)\"\n        @focus=\"updateRating(rate)\"\n      >\n        <i class=\"material-icons\">\n          {{ getStarName(rate) }}\n        </i>\n      </li>\n    </ul>\n  </div>\n</template>\n```", "```js\n@font-face {\n  font-family: 'Material Icons';\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.gstatic.com/s/materialicons/v48/flUhRq6tzZclQEJ-\n      Vdg-IuiaDsNcIhQ8tQ.woff2) format('woff2');\n}\n\n.material-icons {\n  font-family: 'Material Icons' !important;\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: normal;\n  text-transform: none;\n  display: inline-block;\n  white-space: nowrap;\n  word-wrap: normal;\n  direction: ltr;\n  -webkit-font-feature-settings: 'liga';\n  -webkit-font-smoothing: antialiased;\n}\n```", "```js\nimport Vue from 'vue';\nimport App from './App.vue';\nimport './style/materialIcons.css';\n\nVue.config.productionTip = false;\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app');\n```", "```js\n.starRating {\n  user-select: none;\n  display: flex;\n  flex-direction: row;\n}\n.starRating * {\n  line-height: 0.9rem;\n}\n.starRating .material-icons {\n  font-size: .9rem !important;\n  color: orange;\n}\n\nul {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\nul > li {\n  list-style: none;\n  float: left;\n}\n```", "```js\n<style scoped>\n  @import '../style/starRating.css';\n\n  .starRating {\n    justify-content: space-between;\n  }\n\n  .starRating * {\n    line-height: 1.7rem;\n  }\n\n  .starRating .material-icons {\n    font-size: 1.6rem !important;\n  }\n\n  .rateThis {\n    display: inline-block;\n    color: rgba(0, 0, 0, .65);\n    font-size: 1rem;\n  }\n</style>\n```", "```js\n> npm run serve\n```", "```js\n<script>\nexport default {\n  name: 'StarRatingDisplay',\n  props: {\n    maxRating: {\n      type: Number,\n      required: false,\n      default: 5,\n    },\n    rating: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n    votes: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n  },\n  methods: {\n    getStarName(rate) {\n      if (rate <= this.rating) {\n        return 'star';\n      }\n      if (Math.fround((rate - this.rating)) < 1) {\n        return 'star_half';\n      }\n      return 'star_border';\n    },\n  },\n};\n</script>\n```", "```js\n<template>\n  <div class=\"starRating\">\n    <ul>\n      <li\n        v-for=\"rate in maxRating\"\n        :key=\"rate\"\n      >\n        <i class=\"material-icons\">\n          {{ getStarName(rate) }}\n        </i>\n      </li>\n    </ul>\n    <span class=\"rating\">\n      {{ rating }}\n    </span>\n    <span\n      v-if=\"votes\"\n      class=\"votes\"\n    >\n      ({{ votes }})\n    </span>\n  </div>\n</template>\n```", "```js\n<style scoped>\n  @import '../style/starRating.css';\n\n  .rating, .votes {\n    display: inline-block;\n    color: rgba(0,0,0, .65);\n    font-size: .75rem;\n    margin-left: .4rem;\n  }\n</style>\n```", "```js\n> npm run serve\n```", "```js\n<script>\nimport StarRatingInput from './StarRatingInput.vue';\nimport StarRatingDisplay from './StarRatingDisplay.vue';\n\nexport default {\n  name: 'StarRating',\n  components: { StarRatingDisplay, StarRatingInput },\n  props: {\n    maxRating: {\n      type: Number,\n      required: false,\n      default: 5,\n    },\n    rating: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n    votes: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n  },\n  data: () => ({\n    rank: 0,\n    voted: false,\n  }),\n  methods: {\n    vote(rank) {\n      this.rank = rank;\n      this.voted = true;\n    },\n  },\n};\n</script>\n```", "```js\n<template>\n  <div>\n    <StarRatingInput\n      v-if=\"!voted\"\n      :max-rating=\"maxRating\"\n      @final-vote=\"vote\"\n    >\n      Rate this Place\n    </StarRatingInput>\n    <StarRatingDisplay\n      v-else\n      :max-rating=\"maxRating\"\n      :rating=\"rating || rank\"\n      :votes=\"votes\"\n    />\n  </div>\n</template>\n```", "```js\n<template>\n  <div id=\"app\">\n    <MaterialCardBox\n      header=\"Material Card Header\"\n      sub-header=\"Card Sub Header\"\n      show-media\n      show-actions\n      img-src=\"https://picsum.photos/300/200\"\n    >\n      <p>\n        <StarRating\n          ref=\"starRating\"\n        />\n      </p>\n      <p>\n        The path of the righteous man is beset on all sides by the \n           iniquities of the selfish and the tyranny of evil men.\n      </p>\n      <template v-slot:action>\n        <MaterialButton\n          background-color=\"#027be3\"\n          text-color=\"#fff\"\n          @click=\"resetVote\"\n        >\n          Reset\n        </MaterialButton>\n        <MaterialButton\n          background-color=\"#26a69a\"\n          text-color=\"#fff\"\n          is-flat\n          @click=\"forceVote\"\n        >\n          Rate 5 Stars\n        </MaterialButton>\n      </template>\n    </MaterialCardBox>\n  </div>\n</template>\n```", "```js\n<script>\nimport MaterialCardBox from './components/MaterialCardBox.vue';\nimport MaterialButton from './components/MaterialButton.vue';\nimport StarRating from './components/StarRating.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    StarRating,\n    MaterialButton,\n    MaterialCardBox,\n  },\n  methods: {\n    resetVote() {\n      this.$refs.starRating.rank = 0;\n      this.$refs.starRating.voted = false;\n    },\n    forceVote() {\n      this.$refs.starRating.rank = 5;\n      this.$refs.starRating.voted = true;\n    },\n  },\n};\n</script>\n```", "```js\n<script>\nimport StarRatingInput from './StarRatingInput.vue';\nimport StarRatingDisplay from './StarRatingDisplay.vue';\n\nexport default {\n  name: 'StarRating',\n  components: { StarRatingDisplay, StarRatingInput },\n  props: {\n    maxRating: {\n      type: Number,\n      required: false,\n      default: 5,\n    },\n    rating: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n    votes: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n  },\n  data: () => ({\n    rank: 0,\n    voted: false,\n  }),\n  computed: {\n    starComponent() {\n      if (!this.voted) return StarRatingInput;\n      return StarRatingDisplay;\n    },\n  },\n  methods: {\n    vote(rank) {\n      this.rank = rank;\n      this.voted = true;\n    },\n  },\n};\n</script>\n```", "```js\n<template>\n  <component\n    :is=\"starComponent\"\n    :max-rating=\"maxRating\"\n    :rating=\"rating || rank\"\n    :votes=\"votes\"\n    @final-vote=\"vote\"\n  >\n    Rate this Place\n  </component>\n</template>\n```", "```js\n<script>\nimport StarRatingInput from './StarRatingInput.vue';\nimport StarRatingDisplay from './StarRatingDisplay.vue';\n\nexport default {\n  name: 'StarRating',\n  components: { StarRatingDisplay, StarRatingInput },\n  provide: {\n    starRating: true,\n  },\n  props: {\n    maxRating: {\n      type: Number,\n      required: false,\n      default: 5,\n    },\n    rating: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n    votes: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n  },\n  data: () => ({\n    rank: 0,\n    voted: false,\n  }),\n  computed: {\n    starComponent() {\n      if (!this.voted) return StarRatingInput;\n      return StarRatingDisplay;\n    },\n  },\n  methods: {\n    vote(rank) {\n      this.rank = rank;\n      this.voted = true;\n    },\n  },\n};\n</script>\n```", "```js\n<script>\nexport default {\n  name: 'StarRatingDisplay',\n  props: {\n    maxRating: {\n      type: Number,\n      required: false,\n      default: 5,\n    },\n    rating: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n    votes: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n  },\n  inject: {\n    starRating: {\n      default() {\n        console.error('StarRatingDisplay need to be a child of \n          StarRating');\n      },\n    },\n  },\n  methods: {\n    getStarName(rate) {\n      if (rate <= this.rating) {\n        return 'star';\n      }\n      if (Math.fround((rate - this.rating)) < 1) {\n        return 'star_half';\n      }\n      return 'star_border';\n    },\n  },\n};\n</script>\n```", "```js\n<script>\nexport default {\n  name: 'StarRatingInput',\n  props: {\n    maxRating: {\n      type: Number,\n      required: false,\n      default: 5,\n    },\n  },\n  inject: {\n    starRating: {\n      default() {\n        console.error('StarRatingInput need to be a child of \n          StarRating');\n      },\n    },\n  },\n  data: () => ({\n    rating: 0,\n  }),\n  methods: {\n    updateRating(value) {\n      this.rating = value;\n    },\n    emitFinalVote(value) {\n      this.updateRating(value);\n      this.$emit('final-vote', this.rating);\n    },\n    getStarName(rate) {\n      if (rate <= this.rating) {\n        return 'star';\n      }\n      if (Math.fround((rate - this.rating)) < 1) {\n        return 'star_half';\n      }\n      return 'star_border';\n    },\n  },\n};\n</script>\n```", "```js\nexport default {\n  props: {\n    maxRating: {\n      type: Number,\n      required: false,\n      default: 5,\n    },\n    rating: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n    votes: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n  },\n};\n```", "```js\n<script>\nimport StarRatingInput from './StarRatingInput.vue';\nimport StarRatingDisplay from './StarRatingDisplay.vue';\nimport StarRatingDisplayMixin from '../mixins/starRatingDisplay';\n\nexport default {\n  name: 'StarRating',\n  components: { StarRatingDisplay, StarRatingInput },\n  mixins: [StarRatingDisplayMixin],\n  provide: {\n    starRating: true,\n  },\n  data: () => ({\n    rank: 0,\n    voted: false,\n  }),\n  computed: {\n    starComponent() {\n      if (!this.voted) return StarRatingInput;\n      return StarRatingDisplay;\n    },\n  },\n  methods: {\n    vote(rank) {\n      this.rank = rank;\n      this.voted = true;\n    },\n  },\n};\n</script>\n```", "```js\nexport default {\n  inject: {\n    starRating: {\n      default() {\n        console.error('StarRatingDisplay need to be a child of \n           StarRating');\n      },\n    },\n  },\n};\n```", "```js\nexport default {\n  methods: {\n    getStarName(rate) {\n      if (rate <= this.rating) {\n        return 'star';\n      }\n      if (Math.fround((rate - this.rating)) < 1) {\n        return 'star_half';\n      }\n      return 'star_border';\n    },\n  },\n};\n```", "```js\n<script>\nimport StarRatingDisplayMixin from '../mixins/starRatingDisplay';\nimport StarRatingNameMixin from '../mixins/starRatingName';\nimport StarRatingChildMixin from '../mixins/starRatingChild';\n\nexport default {\n  name: 'StarRatingDisplay',\n  mixins: [\n    StarRatingDisplayMixin,\n    StarRatingNameMixin,\n    StarRatingChildMixin,\n  ],\n};\n</script>\n```", "```js\nexport default {\n  props: {\n    maxRating: {\n      type: Number,\n      required: false,\n      default: 5,\n    },\n    rating: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n  },\n};\n```", "```js\n<script>\nimport StarRatingBaseMixin from '../mixins/starRatingBase';\nimport StarRatingChildMixin from '../mixins/starRatingChild';\n\nexport default {\n  name: 'StarRatingInput',\n  mixins: [\n    StarRatingBaseMixin,\n    StarRatingChildMixin,\n  ],\n  data: () => ({\n    rank: 0,\n  }),\n  methods: {\n    updateRating(value) {\n      this.rank = value;\n    },\n    emitFinalVote(value) {\n      this.updateRating(value);\n      this.$emit('final-vote', this.rank);\n    },\n    getStarName(rate) {\n      const rating = (this.rating || this.rank);\n      if (rate <= rating) {\n        return 'star';\n      }\n      if (Math.fround((rate - rating)) < 1) {\n        return 'star_half';\n      }\n      return 'star_border';\n    },\n  },\n};\n</script>\n```", "```js\n<script>\nexport default {\n  name: 'App',\n  components: {\n    StarRating: () => import('./components/StarRating.vue'),\n    MaterialButton: () => import('./components/MaterialButton.vue'),\n    MaterialCardBox: () => \n      import('./components/MaterialCardBox.vue'),\n  },\n  methods: {\n    resetVote() {\n      this.$refs.starRating.rank = 0;\n      this.$refs.starRating.voted = false;\n    },\n    forceVote() {\n      this.$refs.starRating.rank = 5;\n      this.$refs.starRating.voted = true;\n    },\n  },\n};\n</script>\n```"]