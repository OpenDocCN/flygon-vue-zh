- en: Introducing Vue CLI 3
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍Vue CLI 3
- en: This book introduces you to **Vue CLI 3** and answers questions such as how
    to use it, why to use it, the best practices, and what you'll get out of it.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书介绍了**Vue CLI 3**，并回答了诸如如何使用它，为什么使用它，最佳实践以及您将从中获得什么等问题。
- en: In this chapter, we'll look at how to set up Vue CLI 3 on our system. We'll
    begin by checking to see whether Vue CLI 3 is already available, and we'll see
    the exact steps to take if we either need a fresh installation or an update from
    a previous version.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将看看如何在我们的系统上设置Vue CLI 3。我们将首先检查Vue CLI 3是否已经可用，然后我们将看到如果我们需要进行全新安装或从先前版本进行更新的确切步骤。
- en: We'll then look at how to install the **Node Version Manager** (**NVM**), and
    why that is a better alternative than simply installing Node. We'll see how easy
    it is to get started with Vue CLI 3 in VS Code, and how to integrate all these
    tools by using our command line.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将看看如何安装**Node版本管理器**（**NVM**），以及为什么这比简单安装Node更好。我们将看到在VS Code中如何轻松开始使用Vue
    CLI 3，以及如何通过使用命令行来集成所有这些工具。
- en: We'll also discuss why Vue CLI 3 is great to use and work with, and we'll see
    this in practice, by running a default Vue CLI 3 app, both from the command line
    and by using the built-in Vue CLI 3 UI functionality.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将讨论为什么使用Vue CLI 3非常好，并且我们将通过从命令行和使用内置的Vue CLI 3 UI功能来运行默认的Vue CLI 3应用程序来实践这一点。
- en: 'The topics we will cover in this chapter include the following:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章中涵盖以下主题：
- en: Setting up Vue CLI 3 on your system
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的系统上设置Vue CLI 3
- en: Installing Vue CLI 3
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Vue CLI 3
- en: Installing VS Code
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装VS Code
- en: Using Vue CLI with no configuration
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用无配置的Vue CLI
- en: The benefits of using Vue CLI 3
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Vue CLI 3的好处
- en: Avoiding JavaScript fatigue with the default toolchain
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过默认工具链避免JavaScript疲劳
- en: We'll begin this chapter by setting up Vue CLI 3.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从设置Vue CLI 3开始本章。
- en: Technical requirements
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'There are only a few technical requirements that we need; they are as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需要一些技术要求；它们如下：
- en: A Windows installation (Windows 7 or greater)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows安装（Windows 7或更高版本）
- en: An installation of NVM for Windows (the specific steps for the installation
    are described in the chapter)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Windows安装NVM（安装的具体步骤在本章中描述）
- en: An installation of VS Code (code editor)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装VS Code（代码编辑器）
- en: Let's begin setting up Vue CLI 3 on our system.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始在我们的系统上设置Vue CLI 3。
- en: Setting up Vue CLI 3 on our system
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在我们的系统上设置Vue CLI 3
- en: A common way to work with Vue CLI 3 is via a command-line app called the **Command-Line
    Interface** (**CLI**), where we run our Vue CLI 3 commands. Another prerequisite
    is to have Node.js installed on our machine.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Vue CLI 3的常见方式是通过一个名为**命令行界面**（**CLI**）的命令行应用程序，在那里我们运行我们的Vue CLI 3命令。另一个先决条件是在我们的计算机上安装Node.js。
- en: If you are working on a shared computer, say, within a team of your fellow developers,
    the chances are that you already have all the prerequisites. In that case, you
    could just verify that you can start using Vue CLI 3 right away by running a couple
    of checks.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在共享计算机上工作，比如在您的开发团队中，很有可能您已经具备了所有的先决条件。在这种情况下，您可以通过运行一些检查来验证您是否可以立即开始使用Vue
    CLI 3。
- en: Is Vue CLI 3 already available?
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vue CLI 3已经可用吗？
- en: 'To quickly check whether you can run Vue CLI 3 right now and skip all the installation
    steps, run the following command in your command-line app:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要快速检查您是否可以立即运行Vue CLI 3并跳过所有安装步骤，请在命令行应用程序中运行以下命令：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Also, check for Vue CLI 3 with this command:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以使用此命令检查Vue CLI 3：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If you get back any version of Node above 8.9 (ideally, above 8.11.0), you're
    good to go. Obviously, for Vue CLI, you'd want any version above 3.0.0.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您得到任何高于8.9的Node版本（理想情况下，高于8.11.0），您就可以开始了。显然，对于Vue CLI，您希望得到任何高于3.0.0的版本。
- en: 'Additionally, if you have a version of Vue CLI lower than V3, or you''d like
    to update to the newest Vue CLI, such as 3.3.0, just run this command:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果您的Vue CLI版本低于V3，或者您想更新到最新的Vue CLI，例如3.3.0，只需运行此命令：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: What if you don't have Node.js or Vue CLI installed?
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有安装Node.js或Vue CLI怎么办？
- en: We'll use `nvm` or `nvm-windows` for Node, and after that, we'll install Vue
    CLI 3.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`nvm`或`nvm-windows`来安装Node，然后安装Vue CLI 3。
- en: Installing Node.js using Node Version Manager
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Node版本管理器安装Node.js
- en: What is the recommended version of Node.js we should be using? This information
    is available at the following link: [https://cli.vuejs.org/guide/installation.html](https://cli.vuejs.org/guide/installation.html).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该使用推荐的Node.js版本是多少？此信息可在以下链接找到：[https://cli.vuejs.org/guide/installation.html](https://cli.vuejs.org/guide/installation.html)。
- en: Currently, as of early 2019, to get the best results with Vue CLI, the minimum
    version of Node required is 8.11.0+, but you can kind of get by with 8.9 if you
    really have to.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，截至2019年初，要在Vue CLI中获得最佳结果，所需的Node的最低版本是8.11.0+，但如果确实需要，您也可以使用8.9。
- en: 'This brings us to another important decision: the installation of NVM.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这带我们来到另一个重要的决定：安装NVM。
- en: Why install NVM?
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么要安装NVM？
- en: While it is not absolutely necessary to install NVM in order to run Vue CLI
    3 on your system, installing NVM is desirable for a couple of reasons.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然不绝对需要安装NVM才能在系统上运行Vue CLI 3，但出于几个原因，安装NVM是可取的。
- en: First, you never know when Node will get a recommended update with security
    fixes, which usually means you'd be better off installing the update on your machine.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您永远不知道Node何时会推荐更新以修复安全问题，这通常意味着最好在您的计算机上安装更新。
- en: Second, if you need to run a different technology, other than Vue, this other
    technology might also require a different version of Node. To easily switch between
    these required Node installations on your system, you can simply install NVM.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，如果您需要运行除Vue之外的其他技术，这些其他技术可能还需要不同版本的Node。要在系统上轻松切换这些所需的Node安装，您可以简单地安装NVM。
- en: Installing NVM on Windows
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows上安装NVM
- en: 'You can download the NVM for Windows from this address:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从此地址下载Windows的NVM：
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Locate the `nvm-setup.zip` file, download and extract `nvm-setup.exe` from
    it, and then install it by following these installation steps:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 找到`nvm-setup.zip`文件，下载并从中提取`nvm-setup.exe`，然后按照以下安装步骤进行安装：
- en: Open the Run prompt by pressing Windows + *R*. Type `cmd` into the prompt.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下Windows + *R*打开运行提示。在提示符中键入`cmd`。
- en: While inside the prompt, press *Ctrl* + *Shift* + *Enter*. This will run Command
    Prompt with administrator privileges, which is required for the next step.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在提示符内部，按下*Ctrl* + *Shift* + *Enter*。这将以管理员权限运行命令提示符，这是下一步所需的。
- en: Visit [https://nodejs.org](https://nodejs.org), and see the current **Long-term
    Support** (**LTS**) version number. For example, currently, on 64-bit Windows,
    the LTS version is 10.15.1.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[https://nodejs.org](https://nodejs.org)，查看当前的**长期支持**（**LTS**）版本号。例如，目前在64位Windows上，LTS版本是10.15.1。
- en: 'To install it, run the following command in Command Prompt with administrator
    privileges:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要安装它，请在具有管理员权限的命令提示符中运行以下命令：
- en: '[PRE4]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Command Prompt will log out the following message:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 命令提示符将记录以下消息：
- en: '[PRE5]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Once the download is finished, we can use the downloaded version of Node. We
    do it with the following command:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载完成后，我们可以使用下载的Node版本。我们用以下命令来做：
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Finally, you can verify whether the installation was successful by running
    the following command:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，您可以通过运行以下命令来验证安装是否成功：
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'If you''re curious about the version of `npm` that came with your Node installation,
    simply run the following:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想了解与您的Node安装一起提供的`npm`的版本，只需运行以下命令：
- en: '[PRE8]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Next, we'll install Vue CLI 3.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将安装Vue CLI 3。
- en: Installing Vue CLI 3
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Vue CLI 3
- en: 'We can install Vue CLI 3 with either `npm` or `yarn`. Since `npm` comes bundled
    with the Node.js installation, we''ll use `npm`:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`npm`或`yarn`来安装Vue CLI 3。由于`npm`与Node.js安装捆绑在一起，我们将使用`npm`：
- en: '[PRE9]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The preceding command installs Vue CLI 3 globally. That's what the `-g` flag
    is for. The `@vue/cli` syntax is what we use in Vue CLI 3, and `--loglevel verbose`
    will log out the details of our installation, which is very useful, especially
    on slower connections and slower machines, where sometimes we could start wondering
    whether our console froze. With `--loglevel verbose`, there's more clarity, which
    is always good.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令会全局安装Vue CLI 3。这就是`-g`标志的作用。`@vue/cli`的语法是我们在Vue CLI 3中使用的，`--loglevel verbose`将记录我们安装的细节，这非常有用，特别是在较慢的连接和较慢的机器上，有时我们可能会开始怀疑我们的控制台是否冻结。使用`--loglevel
    verbose`，就会更清晰，这总是好的。
- en: 'Once done, let''s double-check the Vue CLI version installed by running this
    command:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，让我们通过运行此命令来双重检查安装的Vue CLI版本：
- en: '[PRE10]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Here are a few other useful commands that you should try in your console:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些其他有用的命令，您应该在控制台中尝试：
- en: '[PRE11]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Note that `vue -h` is an alias for `vue --help`. I'm using the former as it's
    easier to type.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`vue -h`是`vue --help`的别名。我使用前者是因为它更容易输入。
- en: 'Also, note that you can run the `-h` flag on each individual `vue` command,
    for example:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意，您可以在每个单独的`vue`命令上运行`-h`标志，例如：
- en: '[PRE12]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Running any of the preceding lines will return the usage instructions for the
    specific command, a description of what it does, and the options (the flags) to
    append to each individual command. Obviously, the `-h` flag is a great way to
    explore the capabilities of Vue CLI, and to refresh your memory on the fly, if
    need be.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 运行任何上述命令将返回特定命令的用法说明，描述其功能以及要附加到每个单独命令的选项（标志）。显然，`-h`标志是探索Vue CLI功能的好方法，并且在需要时即时刷新您的记忆。
- en: Next, we'll install our code editor of choice, VS Code.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将安装我们选择的代码编辑器VS Code。
- en: Installing VS Code
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装VS Code
- en: To install VS Code, simply navigate to [https://code.visualstudio.com](https://code.visualstudio.com),
    and then download the appropriate version for your operating system.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装VS Code，只需转到[https://code.visualstudio.com](https://code.visualstudio.com)，然后下载适合您操作系统的版本。
- en: 'If you''re not sure whether you''re using a 32-bit or a 64-bit computer, you
    can quickly check that on Windows by running the following command in Command
    Prompt (with admin rights):'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不确定自己使用的是32位还是64位计算机，您可以通过在命令提示符（具有管理员权限）中运行以下命令来快速检查Windows上的情况：
- en: '`wmic os get osarchitecture`'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`wmic os get osarchitecture`'
- en: The output will be `OSArchitecture`, and on the next line, either `32-bit` or
    `64-bit`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将是`OSArchitecture`，在下一行，要么是`32位`，要么是`64位`。
- en: Once VS Code is downloaded, simply install it by running the downloaded installation
    file and follow the installation instructions.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦VS Code被下载，只需运行下载的安装文件并按照安装说明进行安装。
- en: After you've installed VS Code, you'll get an additional command available via
    the command line, `code`.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完VS Code后，您将在命令行中获得一个额外的命令，`code`。
- en: The `code` command is very useful, as we'll see in the next section.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`code`命令非常有用，我们将在下一节中看到。'
- en: Using Vue CLI with no configuration
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在没有配置的情况下使用Vue CLI
- en: In this section, we'll see the quickest and the easiest way to start using Vue
    CLI. It includes no configuration whatsoever! The reason to use Vue CLI without
    configuration is to run some quick experiments without having to answer prompts
    about our project's configuration that Vue CLI normally asks when we run a project
    with configuration steps included (which is the default approach to building apps
    using Vue CLI).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到使用Vue CLI的最快最简单的方法。它完全不需要任何配置！使用Vue CLI无需配置的原因是为了进行一些快速实验，而不必回答关于项目配置的提示，这是Vue
    CLI在运行包含配置步骤的项目时通常会询问的（这是使用Vue CLI构建应用程序的默认方法）。
- en: To begin, hold down the *Shift* key and right-click on an empty area on your
    desktop. From the contextual menu that pops up, click the Open Command window
    here command.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，按住*Shift*键，在桌面的空白区域右键单击。从弹出的上下文菜单中，单击“在此处打开命令窗口”命令。
- en: 'Once open, type the following command:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 打开后，输入以下命令：
- en: '[PRE13]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This will make a new directory called `noConfig`. Next, let''s change into
    that directory with the `cd` command:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个名为`noConfig`的新目录。接下来，让我们使用`cd`命令切换到该目录：
- en: '[PRE14]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Finally, start VS Code from Command Prompt with this command:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，使用以下命令从命令提示符启动VS Code：
- en: '[PRE15]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The dot in the preceding command means open VS Code in the current folder. Feel
    free to close the Welcome tab.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 前面命令中的点表示在当前文件夹中打开VS Code。可以关闭欢迎标签页。
- en: Next, use the *Alt* + *F* keyboard shortcut to open the File menu, and press
    the *N* key to open a brand new file.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用*Alt* + *F*键盘快捷键打开文件菜单，并按下*N*键打开一个全新的文件。
- en: 'In the new file, which opens in the tab that reads `Untitled-1`, type the following
    code:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在新文件中，打开标签页，输入以下代码：
- en: '[PRE16]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Next, press the *Ctrl* + *S* keyboard shortcut, and save the file as `App.vue`.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，按下*Ctrl* + *S*键盘快捷键，将文件保存为`App.vue`。
- en: VS Code will save the file. It will give a new icon, the Vue logo icon, a visual
    cue that the file you just saved is indeed a Vue file.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: VS Code将保存文件。它将给出一个新的图标，Vue标志图标，这是一个视觉提示，刚刚保存的文件确实是一个Vue文件。
- en: 'VS Code might also prompt you to install an extension, `Vetur`, with the following
    prompt:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: VS Code也可能提示您安装一个名为`Vetur`的扩展，具体提示如下：
- en: '[PRE17]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Go ahead and install the extension by clicking the Install button at the bottom
    of the popup.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 通过单击弹出窗口底部的安装按钮来安装扩展。
- en: Note that installing the `Vetur` extension has nothing to do with using the
    Vue CLI 3 with no configuration, but it has to do with us being more productive
    in VS Code when working with Vue.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，安装`Vetur`扩展与使用没有配置的Vue CLI 3无关，但与我们在VS Code中使用Vue时更加高效有关。
- en: 'Now we can serve our Vue app by running `vue serve`. But, before we actually
    run the command, let''s use the `-h` flag to see what we have available:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以通过运行`vue serve`来为我们的Vue应用程序提供服务。但是，在实际运行命令之前，让我们使用`-h`标志来查看我们有哪些可用选项：
- en: '[PRE18]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'This is what we''ll get back:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们将得到的内容：
- en: '[PRE19]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now that we know what to expect, let''s serve our Vue app with the following
    command:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道可以期待什么，让我们使用以下命令为我们的Vue应用程序提供服务：
- en: '[PRE20]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: So, as we can see as mentioned previously, this command will serve our Vue app
    and open it in the browser. It will also copy the served URL to the clipboard.
    This allows us to, for example, open a different, non-default browser, and easily
    paste in the URL in the browser's address bar, so that we can preview our app
    there as well.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，正如之前提到的，这个命令将为我们的Vue应用程序提供服务，并在浏览器中打开它。它还将复制提供的URL到剪贴板。这使我们可以，例如，打开一个不同的非默认浏览器，并轻松地粘贴URL到浏览器的地址栏中，这样我们也可以在那里预览我们的应用程序。
- en: However, we'll come across a minor stumbling block.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们将遇到一个小问题。
- en: 'Instead of our Vue app being served, we''ll get this notification in our command:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在命令中得到这个通知，而不是我们的Vue应用程序被提供服务：
- en: '[PRE21]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'This is an easy fix. Better yet, we''ll extend the preceding command with `--loglevel
    verbose`:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的修复。更好的是，我们将使用`--loglevel verbose`扩展前面的命令：
- en: '[PRE22]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: After some time, depending on your download speed, you'll get the `npm info
    ok` message.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 一段时间后，根据你的下载速度，你会收到`npm info ok`的消息。
- en: 'This means that you can now run the `vue serve` command again:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着你现在可以再次运行`vue serve`命令：
- en: '[PRE23]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: This time it works! Kind of...
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这次它成功了！有点...
- en: 'Now we get an error that reads `Failed to compile with 1 errors`. And then,
    further down, we see the root cause:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们收到一个错误，上面写着`编译失败，有1个错误`。然后，更进一步地，我们看到了根本原因：
- en: '[PRE24]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'There are a few ways to solve this issue, but what it basically says is that
    we can wrap our `h1` and `hr` tags inside a `div` tag, and we''ll be good to go.
    So, let''s update the `App.vue` file in VS Code to this:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以解决这个问题，但它基本上是说我们可以将我们的`h1`和`hr`标签包裹在一个`div`标签中，然后我们就可以了。所以，让我们在VS Code中更新`App.vue`文件为这样：
- en: '[PRE25]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Make sure to save your changes, and now, finally, let''s serve it again:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 确保保存你的更改，现在，最后，让我们再次提供服务：
- en: '[PRE26]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: You might get a bit of a surprise, because a new tab will open with the app
    loaded automatically, in your default browser.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会有点惊讶，因为一个新的标签页会自动打开，加载应用程序，显示在你的默认浏览器中。
- en: Let's say that your default browser is Chrome. Let's open another browser (for
    example, Firefox), click inside the admin bar, and press the *Ctrl* + *V* shortcut
    to paste in the contents of the clipboard. Of course, it's going to be `http://localhost:8080/`.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你的默认浏览器是Chrome。让我们打开另一个浏览器（例如Firefox），点击管理栏内部，并按下*Ctrl* + *V*快捷键粘贴剪贴板的内容。当然，它将是`http://localhost:8080/`。
- en: The ease with which we've performed these repetitive tasks of opening our app
    in the browser and copying its URL with the help of `-o` and `-c` flags is just
    the tip of the iceberg. Vue CLI 3 has a lot more in store to help us code our
    apps faster and easier.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`-o`和`-c`标志，我们以非常简单的方式执行了打开应用程序并复制其URL的重复任务只是冰山一角。Vue CLI 3还有更多功能，可以帮助我们更快更轻松地编写我们的应用程序。
- en: For example, let's get back to our code and erase the line with the `hr` tag,
    and then save the file. Look at your browser tab, the one with our Vue app open.
    It will auto-refresh, reflecting the changes in code. That's webpack in action,
    running under the hood of Vue CLI 3, watching for changes to our Vue files, and
    hot-reloading the app in the browser accordingly.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们回到我们的代码，删除带有`hr`标签的行，然后保存文件。看看你的浏览器标签，打开我们的Vue应用程序的标签。它将自动刷新，反映代码的更改。这就是webpack在Vue
    CLI 3的内部运行，监视我们的Vue文件的更改，并相应地在浏览器中热重新加载应用程序。
- en: If you've been coding for more than a couple of years, you'll appreciate the
    ease of this workflow. In the past, we either had to set up our tools so that
    they performed the auto-refresh of our apps in the browser whenever we save our
    files, or we had to set up our IDE or code editor, or both. Even up until recently,
    we still had to tinker with webpack to automate this kind of a workflow, and this
    as with anything coding-related, sometimes did not go as smoothly as we'd hope.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经编码超过几年，你会欣赏到这种工作流的便利。过去，我们要么必须设置我们的工具，使它们在我们保存文件时自动刷新浏览器中的应用程序，要么我们必须设置我们的IDE或代码编辑器，或者两者兼而有之。甚至直到最近，我们仍然不得不调整webpack来自动化这种工作流程，而且像任何与编码相关的事情一样，有时并不像我们希望的那样顺利。
- en: With Vue CLI 3, this is all automated and made very simple.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Vue CLI 3，所有这些都是自动化的，非常简单。
- en: Let's see some other ways in which Vue CLI 3 helps us code better and be more
    productive.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看Vue CLI 3如何帮助我们更好地编码并提高生产力的其他方式。
- en: The benefits of using Vue CLI 3
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Vue CLI 3的好处
- en: 'When Vue CLI 3 came out, Evan You, the maker of Vue, listed these objectives
    for it:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 当Vue CLI 3推出时，Vue的创始人Evan You列出了它的这些目标：
- en: Avoid toolchain fatigue for frontend development by simplifying the setup
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过简化设置来避免前端开发的工具链疲劳
- en: Follow best practices in tooling
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遵循工具的最佳实践
- en: Make these best practices the default in Vue apps
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使这些最佳实践成为Vue应用的默认设置
- en: 'Besides these great objectives, Vue CLI came with a number of updates, such
    as the following:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些伟大的目标，Vue CLI还带来了许多更新，比如以下内容：
- en: Preset webpack configuration
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预设的webpack配置
- en: ES2017 and Babel 7 support out of the box
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ES2017和Babel 7支持开箱即用
- en: Excellent CSS support, including **Sassy CSS** (**SCSS**) and **PostCSS** support
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 出色的CSS支持，包括**Sassy CSS**（**SCSS**）和**PostCSS**支持
- en: A number of integration options (TypeScript, PWA, web components, end-to-end
    testing, Jest, and so on)
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多集成选项（TypeScript，PWA，Web组件，端到端测试，Jest等）
- en: That is a lot of functionality. The aim of this book is to go through all of
    the options and get you familiar with their inner workings.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 这是很多功能。本书的目的是遍历所有选项，并让您熟悉它们的内部工作原理。
- en: Now, to wrap this chapter up, let's see how easy it is to set up a default app
    using the default options.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看使用默认选项设置默认应用有多么容易，来结束本章。
- en: Default toolchain, fatigue level zero
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 默认工具链，疲劳程度为零
- en: 'In this section, we''ll create a default boilerplate Vue app. Contrary to the
    previous section, in this section, we will actually build an entire app, properly.
    We''ll use two approaches: Vue CLI 3 on the command line, and Vue CLI 3 with a
    GUI.'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将创建一个默认的Vue应用程序模板。与上一节相反，在本节中，我们将真正构建一个完整的应用程序。我们将使用两种方法：命令行上的Vue CLI
    3和带有GUI的Vue CLI 3。
- en: You might ask why we ran Vue CLI 3 with no configuration in the first place?
    The answer is, it might be useful for quick experiments, and to get started with
    some basic commands.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会问为什么我们首先没有配置运行Vue CLI 3？答案是，这可能对快速实验和开始使用一些基本命令很有用。
- en: Vue CLI 3 default app via the command line
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过命令行创建Vue CLI 3默认应用
- en: 'We create Vue CLI 3 apps with the `vue create` command. Let''s see what options
    we have available:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`vue create`命令创建Vue CLI 3应用程序。让我们看看我们有哪些选项可用：
- en: '[PRE27]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'This is what will get returned:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是将返回的内容：
- en: '[PRE28]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Let''s begin by skipping all the prompts and using the default option:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先跳过所有提示，使用默认选项：
- en: '[PRE29]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Your console will display the following output:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 您的控制台将显示以下输出：
- en: '[PRE30]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: And indeed it does take a while. Luckily, there's a visual cue, a progress bar
    that lets us know how far along we are in setting up our project.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 确实需要一段时间。幸运的是，有一个进度条，让我们知道我们在设置项目时进行到了哪个阶段。
- en: 'Once ready, we''ll simply run the following:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 准备好后，我们只需运行以下命令：
- en: '[PRE31]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Once our console is pointing to the correct directory, we can run the app with
    the following:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们的控制台指向正确的目录，我们可以使用以下命令运行应用：
- en: '[PRE32]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'And now we can view the default app in the browser:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以在浏览器中查看默认应用程序：
- en: '![](assets/af6f9b7b-eeff-470e-82f2-de62aec3af1b.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/af6f9b7b-eeff-470e-82f2-de62aec3af1b.png)'
- en: As we can see, we have a welcome message, and then the page lists the installed
    CLI plugins. Obviously, the babel and eslint plugins come as defaults. Each of
    these links points to their respective sections inside the `vue-cli` repository
    on GitHub.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，我们有一个欢迎消息，然后页面列出了安装的CLI插件。显然，`babel`和`eslint`插件是默认的。每个链接都指向GitHub上`vue-cli`存储库中的各自部分。
- en: Next, we see some essential links and some links to get acquainted with the
    larger ecosystem of `Vue.js` (namely, the links to `vue-router`, `vuex`, `vue-devtools`,
    `vue-loader`, and `awesome-vue`).
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们看到一些基本链接和一些链接，以了解更大的`Vue.js`生态系统（即，`vue-router`，`vuex`，`vue-devtools`，`vue-loader`和`awesome-vue`的链接）。
- en: Vue CLI 3 default app via the UI
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过UI创建Vue CLI 3默认应用
- en: 'To get started with the Vue CLI GUI, let''s first stop the server that was
    running in the previous section, using the *Ctrl* + *C* shortcut keys. The console
    will respond with the following message:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用Vue CLI GUI，让我们首先使用*Ctrl* + *C*快捷键停止在上一节中运行的服务器。控制台将会回应以下消息：
- en: '[PRE33]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Type `Y` (capitalization is irrelevant) and press the *Enter* key.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 输入`Y`（大小写不重要）并按下*Enter*键。
- en: This will give us back the control of our current console window and allow us
    to type new commands.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使我们重新获得当前控制台窗口的控制，并允许我们输入新命令。
- en: 'Let''s first go one level up from the current directory in our console:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先在控制台中从当前目录向上一级：
- en: '[PRE34]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Next, let''s run this command:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们运行这个命令：
- en: '[PRE35]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'And we''ll get the following output:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将得到以下输出：
- en: '[PRE36]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'This time, we''ll run the command without any flags:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，我们将不使用任何标志运行该命令：
- en: '[PRE37]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'We''ll be greeted with the following output in the console:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在控制台中看到以下输出：
- en: '[PRE38]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'This time, we can create a project, visually. Initially, we see that there
    are no Vue projects in the current folder:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，我们可以通过可视化方式创建一个项目。最初，我们看到当前文件夹中没有Vue项目：
- en: '![](assets/6671f159-471f-4888-84d1-aba11a94dcfa.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/6671f159-471f-4888-84d1-aba11a94dcfa.png)'
- en: Let's create one by clicking the Create tab.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们点击“创建”选项卡来创建一个项目。
- en: 'A new window will open, with a big button that reads Create a new project here:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 将打开一个新窗口，有一个大按钮，上面写着在这里创建一个新项目：
- en: '![](assets/0d1f4896-c050-4335-a9b2-a90bee7ba022.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0d1f4896-c050-4335-a9b2-a90bee7ba022.png)'
- en: 'As we can see in the preceding screenshot, there are also a number of other
    buttons and options that we can use. We will examine these in the chapters that
    follow; at this point, we are just getting familiar with the tool we''re using:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的截图中看到的，还有许多其他按钮和选项可以使用。我们将在接下来的章节中进行详细讨论；目前，我们只是熟悉我们正在使用的工具：
- en: '![](assets/897416f9-bd44-411e-ae62-13cf57e973b6.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/897416f9-bd44-411e-ae62-13cf57e973b6.png)'
- en: As we can see from the previous screenshot, the Next button, at the bottom of
    the page, is currently disabled. To enable it, simply type the project folder
    name inside the top-most input. We'll call our folder `second-vue-project`. Now
    click Next.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们从前面的截图中看到的，页面底部的“下一步”按钮当前是禁用的。要启用它，只需在最顶部的输入框中输入项目文件夹名称。我们将文件夹命名为`second-vue-project`。现在点击“下一步”。
- en: 'Inside the next window, you can choose a preset. Let''s set it to Default preset:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个窗口中，您可以选择一个预设。让我们将其设置为默认预设：
- en: '![](assets/32858460-03b1-496a-bc52-9b73d275b560.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/32858460-03b1-496a-bc52-9b73d275b560.png)'
- en: 'Choosing a preset will make the Create Project button clickable. You''ll see
    a loader icon in the center of the screen, with the following message:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 选择一个预设将使“创建项目”按钮可点击。您将在屏幕中央看到一个加载图标，并显示以下消息：
- en: '[PRE39]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'You''ll see a few other messages as the installation progresses. Finally, when
    done, you''ll be greeted with the following window:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装过程中，您将看到一些其他消息。最后，当完成时，您将会看到以下窗口：
- en: '![](assets/c4e6ddb2-6ac3-4593-b8ee-3d9c27dbb9df.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c4e6ddb2-6ac3-4593-b8ee-3d9c27dbb9df.png)'
- en: Our project is now ready to be worked on, which we'll do in the next chapter.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的项目现在已经准备好进行工作了，我们将在下一章中进行。
- en: Summary
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we looked at how to get started with the Vue CLI 3, both by
    using the command line and by using the Vue CLI UI.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看了如何使用Vue CLI 3开始，既可以使用命令行，也可以使用Vue CLI UI。
- en: We've seen how to install all the prerequisites, and we saw the suggested workflow
    and some basic pointers to get started easily. As a result of understanding how
    to use Vue CLI both on the command line and in the UI, we can now initialize Vue
    apps without any effort. We know what options are available to us when starting
    a new project. However, there are many more things that we need to understand
    the inner workings of Vue CLI.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到如何安装所有先决条件，并且我们看到了建议的工作流程和一些基本指针，以便轻松入门。由于了解如何在命令行和UI上使用Vue CLI，我们现在可以轻松初始化Vue应用程序。我们知道在启动新项目时有哪些选项可供我们选择。然而，还有许多其他事情我们需要了解Vue
    CLI的内部工作原理。
- en: In the next chapter, we'll look at improving our workflow further by focusing
    on webpack, the module bundler that sits at the core of Vue CLI 3.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将通过专注于webpack来进一步改进我们的工作流程，webpack是Vue CLI 3核心的模块捆绑器。
