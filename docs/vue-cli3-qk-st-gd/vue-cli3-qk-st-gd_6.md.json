["```js\nnpm install eslint -g --verbose\n```", "```js\nnpm install eslint --save-dev --verbose\n```", "```js\nmkdir Chapter6 && cd $_\n```", "```js\nmkdir prettier-practice && cd $_\n```", "```js\nnpm init -y\n```", "```js\ntouch index.html && code .\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>101 - using watchers in Vue</title>\n    <style>\n        body,\n        input {\n            font-family: Arial, sans-serif;\n            font-size: 20px;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"example\">\n        <p>Enter owner name and the thing that is owned:\n            <input v-model=\"ownerName\" placeholder=\"enter owner\">\n            <input v-model=\"thing\" placeholder=\"enter thing\">\n        </p>\n        <span>{{ ownerName }}</span>\n        <span> has a </span>\n        <span>{{ thing }}</span>\n    </div>\n    <script src='https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.10/vue.min.js'></script>\n    <script>\n        var example = new Vue({\n            el: '#example',\n            data: {\n                ownerName: 'e.g Old McDonald',\n                thing: 'e.g cow'\n            },\n            watch: {\n                ownerName(currentValue, previousValue) {\nconsole.log(`The value in the first input has changed from: ${previousValue} to: ${currentValue}`);\n                }\n            },\n            computed: {\n                // a computed getter\n                ownerHasThing: function () {\n                    // `this` points to the Vue instance's data option\n                    return this.ownerName + \" \" + this.thing\n                }\n            }\n        })\n    </script>\n</body>\n\n</html>\n```", "```js\nnpm install prettier -g --loglevel verbose\n```", "```js\nprettier --help\n```", "```js\nnpm install prettier --save-dev --verbose\n```", "```js\nnpx prettier\n```", "```js\nnpx prettier --single-quote --trailing-coma es5 --write \"index.html\" --verbose\n```", "```js\nnpm install eslint -g --loglevel verbose\n```", "```js\nfunction (a) \n{\nconsole.log(a, b);\n\n}\n```", "```js\neslint eslint-test.js\n```", "```js\nOops! Something went wrong! :(\n\nESLint: 5.15.3.\nESLint couldn't find a configuration file. To set up a configuration file for this project, please run:\n\n eslint --init\n\nESLint looked for configuration files in C:\\Users\\Warrior Gaming\\Desktop\\Chapter6 and its ancestors. If it found none, it then looked in your home directory.\n```", "```js\nnpm init -y\n```", "```js\nLocal ESLint installation not found. \nThe config that you've selected requires the following dependencies:\neslint@latest\nSuccessfully created .eslintrc.js file in C:\\Users\\W\\Desktop\\Chapter6\\eslint-practice\nESLint was installed locally. We recommend using this local copy instead of your globally-installed copy.\n```", "```js\nnpm install eslint@latest --save-dev --verbose\n```", "```js\nmodule.exports = {\n    'env': {\n        'browser': true,\n        'es6': true\n    },\n    'extends': 'eslint:recommended',\n    'globals': {\n        'Atomics': 'readonly',\n        'SharedArrayBuffer': 'readonly'\n    },\n    'parserOptions': {\n        'ecmaVersion': 2018\n    },\n    'rules': {\n        'indent': [\n            'error',\n            4\n        ],\n        'linebreak-style': [\n            'error',\n            'windows'\n        ],\n        'quotes': [\n            'error',\n            'single'\n        ],\n        'semi': [\n            'error',\n            'always'\n        ]\n    }\n};\n```", "```js\nnpx eslint eslint-test.js\n```", "```js\n  1:10 error Parsing error: Unexpected token (\n\n\u2716 1 problem (1 error, 0 warnings)\n```", "```js\nfunction  aFunction(a)  { console.log(a,  b)  }\n```", "```js\n  1:10 error 'aFunction' is defined but never used no-unused-vars\n  3:1 error Expected indentation of 4 spaces but found 0 indent\n  3:1 error Unexpected console statement no-console\n  3:16 error 'b' is not defined no-undef\n  3:18 error Missing semicolon semi\n\n\u2716 5 problems (5 errors, 0 warnings)\n  2 errors and 0 warnings potentially fixable with the `--fix` option.\n```", "```js\nnpx eslint eslint-test.js --fix\n```", "```js\nfunction aFunction(a) \n{\n    console.log(a, b);\n\n}\n```", "```js\n  1:10 error 'aFunction' is defined but never used no-unused-vars\n  3:5 error Unexpected console statement no-console\n  3:20 error 'b' is not defined no-undef\n\n\u2716 3 problems (3 errors, 0 warnings)\n```", "```js\nconst errorLevel1 = 'warn';\nconst errorLevel2 = 'error';\nmodule.exports = {\n    // ...\n    // omitted this section to save space\n    // ...\n    'rules': {\n        'indent': [\n            'error',\n            4\n        ],\n        'linebreak-style': [\n            'error',\n            'windows'\n        ],\n        'quotes': [\n            'warn',\n            'single'\n        ],\n        'semi': [\n            'warn',\n            'always'\n        ]\n    }\n};\n```", "```js\ncode .\n```", "```js\nvue create vc3-prettier-eslint\n```"]