- en: Improving CSS with SCSS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用SCSS改进CSS
- en: In this chapter, we'll discuss the basics of SCSS and what problems it solves.
    We'll also discuss the improvements that are introduced to CSS that bring it closer
    to SCSS.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论SCSS的基础知识以及它解决的问题。我们还将讨论引入的改进，使CSS更接近SCSS。
- en: We will also work with the app we have made in [Chapter 5](e50a41d8-389a-4ecb-bf6d-7ad48c3c603b.xhtml)*,
    Vue CLI 3 and Routing*. The goal of this chapter is to work with CSS, SCSS, and
    we'll do that by using the Bootstrap + Vue plugin.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将使用我们在[第5章](e50a41d8-389a-4ecb-bf6d-7ad48c3c603b.xhtml)中制作的应用程序，Vue CLI 3和路由*。本章的目标是使用CSS、SCSS，并通过使用Bootstrap
    + Vue插件来实现这一目标。
- en: 'The following topics will be covered in the chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Installing Bootstrap + Vue
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Bootstrap + Vue
- en: Using the bootstrap-vue plugin to add styles to our project
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用bootstrap-vue插件为我们的项目添加样式
- en: Using SCSS in our project
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在我们的项目中使用SCSS
- en: Installing Bootstrap + Vue
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Bootstrap + Vue
- en: 'Why not use Bootstrap from the official website, when working with Vue? Well,
    we definitely could do that, but Bootstrap relies on jQuery, and since we want
    to keep everything JavaScript-related running through Vue, we''ll have to use
    a project that''s built for this purpose exactly: BootstrapVue.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Vue时，为什么不从官方网站使用Bootstrap？嗯，我们当然可以这样做，但Bootstrap依赖于jQuery，而且由于我们希望将所有与JavaScript相关的内容都通过Vue运行，因此我们必须使用一个专为此目的构建的项目：BootstrapVue。
- en: Let's begin by visiting the project website at [https://bootstrap-vue.js.org/](https://bootstrap-vue.js.org/).
    Here, we can get acquainted with the project in general. Specifically, it would
    be useful to read the documentation at [https://bootstrap-vue.js.org/docs#vue-cli-3](https://bootstrap-vue.js.org/docs#vue-cli-3)
    , which discusses the use of BootstrapVue inside a Vue CLI 3 project.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从访问项目网站开始[https://bootstrap-vue.js.org/](https://bootstrap-vue.js.org/)。在这里，我们可以对项目有一个大致的了解。具体来说，阅读文档[https://bootstrap-vue.js.org/docs#vue-cli-3](https://bootstrap-vue.js.org/docs#vue-cli-3)将非常有用，该文档讨论了在Vue
    CLI 3项目中使用BootstrapVue。
- en: Adding BootstrapVue as a plugin
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将BootstrapVue添加为插件
- en: You can create a new Vue project easily with the help of Vue CLI 3 UI. This
    has been covered a few times in this book, and you should be able to do this on
    your own.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过Vue CLI 3 UI的帮助轻松创建一个新的Vue项目。这在本书中已经多次介绍过，您应该能够自己完成这个操作。
- en: Name your new project `Chapter7`, and run it through the exact same installation
    steps as in [Chapter 5](e50a41d8-389a-4ecb-bf6d-7ad48c3c603b.xhtml)*, Vue CLI
    3 and Routing*.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 将您的新项目命名为“第7章”，并按照与[第5章](e50a41d8-389a-4ecb-bf6d-7ad48c3c603b.xhtml)相同的安装步骤运行它，Vue
    CLI 3和路由*。
- en: 'In your console, go to the root of your project and run the following command:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台中，转到项目的根目录并运行以下命令：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You will see the following prompt inside your console:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在控制台内看到以下提示：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This will be followed up with the following question:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来将跟进以下问题：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Just press the *Enter* key to accept the default answer (yes).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 只需按下*Enter*键接受默认答案（是）。
- en: 'Regardless of how you''ve installed the plugin, your plugins list should now
    look like this:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您如何安装插件，您的插件列表现在应该是这样的：
- en: '![](assets/6b9ceee8-1410-4b59-bf18-850058b1e58b.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/6b9ceee8-1410-4b59-bf18-850058b1e58b.png)'
- en: Now that we've installed it, we can start using it.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经安装了它，我们可以开始使用它了。
- en: Using the bootstrap-vue plugin to add styles to our project
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用bootstrap-vue插件为我们的项目添加样式
- en: 'Once the `bootstrap-vue` plugin is installed, let''s use it in our project!
    We''ll begin by adding a `navbar` from the official documentation, which is available
    at [https://bootstrap-vue.js.org/docs/components/navbar#b-nav-item-dropdown](https://bootstrap-vue.js.org/docs/components/navbar#b-nav-item-dropdown),
    as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了`bootstrap-vue`插件后，让我们在项目中使用它！我们将从官方文档中添加一个`navbar`，该文档可在[https://bootstrap-vue.js.org/docs/components/navbar#b-nav-item-dropdown](https://bootstrap-vue.js.org/docs/components/navbar#b-nav-item-dropdown)找到，如下所示：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We''ll add this `navbar` to our `App.vue`, in the template section. The updated
    `template` element will now look like this:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在`App.vue`中的模板部分添加这个`navbar`。更新后的`template`元素现在看起来是这样的：
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We also need to update the styles so they look like this:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要更新样式，使其看起来像这样：
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'After saving the changes, our home page will update to the following screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 保存更改后，我们的主页将更新为以下截图：
- en: '![](assets/2e7fc3c8-e6f3-436c-abc8-d803808b6f89.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2e7fc3c8-e6f3-436c-abc8-d803808b6f89.png)'
- en: To quickly change the color of the background on the `bootstrap-vue navbar`,
    simply add a contextual Bootstrap color to the `variant` custom HTML attribute.
    The accepted values are `primary`, `secondary`, `success`, `danger`, `info`, `warning`,
    `light`, and `dark`.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要快速更改`bootstrap-vue navbar`的背景颜色，只需将Bootstrap颜色添加到`variant`自定义HTML属性中。接受的值为`primary`、`secondary`、`success`、`danger`、`info`、`warning`、`light`和`dark`。
- en: In the preceding example, we're using `variant` with the value of `secondary`,
    which gives us a grayish background with white `nav` items on hover.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们使用了值为`secondary`的`variant`，这给了我们一个灰色的背景，鼠标悬停时显示白色的`nav`项。
- en: Using SCSS in our project
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在我们的项目中使用SCSS
- en: Similar to how TypeScript is referred to as a *superset* of JavaScript, SCSS
    is often referred to as a *superset* of CSS. But what exactly is this *superset*?
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于TypeScript被称为JavaScript的*超集*，SCSS经常被称为CSS的*超集*。但这个*超集*到底是什么？
- en: A **superset** of a language is simply a layer around it, with additional functionality
    that doesn't exist in the *regular* implementation. There could also be additional
    best practices, methods, and so on.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 语言的**超集**只是它周围的一个层，具有在*常规*实现中不存在的附加功能。还可能有额外的最佳实践、方法等。
- en: At the very core, it is possible for SCSS files to contain only plain old CSS
    syntax. That's because all SCSS ultimately compiles to CSS, and, as such, it is
    served to our browsers. This makes it very approachable. It is reassuring for
    an SCSS newbie to **know **that they can keep on writing CSS and it will just
    work in their SCSS!
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在最核心的层面，SCSS文件可能只包含普通的CSS语法。这是因为所有的SCSS最终都会编译成CSS，并且作为这样，它会被提供给我们的浏览器。这使得它非常易于接近。对于SCSS新手来说，了解他们可以继续编写CSS并且它会在他们的SCSS中正常工作是令人放心的！
- en: Let's make this our starting point too. First off, let's update our `bootstrap-vue`
    plugin settings, so that we use SCSS rather than CSS.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们把这作为我们的起点。首先，让我们更新我们的`bootstrap-vue`插件设置，以便我们使用SCSS而不是CSS。
- en: 'Navigate to our app''s folder structure and locate the following file: `src/plugins/bootstrap-vue.js`.
    Next, update the code so that it looks like the following:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到我们应用程序的文件夹结构，并找到以下文件：`src/plugins/bootstrap-vue.js`。接下来，更新代码，使其看起来像下面这样：
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Dealing with errors
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理错误
- en: 'It is possible that you might be greeted with the `cannot find sass-loader`
    error. You can resolve it by running the following command:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会遇到“找不到sass-loader”错误。您可以通过运行以下命令来解决它：
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: At this point, if you're unsure about what a loader is, it might be worthwhile
    revisiting [Chapter 2](cd533fca-589a-475b-b0ff-da2f7fb52251.xhtml)*, Webpack in
    Vue CLI 3*, to get a refresher on webpack loaders.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，如果您不确定加载程序是什么，可能值得重新阅读[第2章](cd533fca-589a-475b-b0ff-da2f7fb52251.xhtml)*，Vue
    CLI 3中的Webpack*，以便对webpack加载程序进行复习。
- en: 'Another error that is likely to come up is this one:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会出现的另一个错误是：
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can resolve this error by running the following command:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行以下命令来解决这个错误：
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Finally, after the installation of a new package, you'll see a message that
    reads `found 1 high severity vulnerability` (or something similar to this). You
    can, and should, fix such a vulnerability, following the cue from the console,
    and running `npm audit fix`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在安装新包之后，你会看到一条消息，上面写着`found 1 high severity vulnerability`（或类似的内容）。你可以，也应该，根据控制台的提示修复这样的漏洞，并运行`npm
    audit fix`。
- en: Writing some SCSS in our project
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在我们的项目中编写一些SCSS
- en: Now that we have imported `bootstrap.scss`, we can start using it.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经导入了`bootstrap.scss`，我们可以开始使用它了。
- en: 'Let''s open `App.vue`, and update the `style` tag to the following:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们打开`App.vue`，并将`style`标签更新为以下内容：
- en: '[PRE10]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: What we're seeing in the preceding code is an example of nesting, a feature
    of SCSS that allows us to mimic the HTML structure of our apps inside our SCSS
    rules.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，我们看到了嵌套的例子，这是SCSS的一个特性，它允许我们在SCSS规则内模仿我们应用程序的HTML结构。
- en: If you looked at your project being served in the web browser at this stage,
    you'd notice that it's still running, and that it is unchanged. That is good!
    It means everything is working and that everything is getting served just as it
    should.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在这个阶段查看你的项目在网页浏览器中的运行情况，你会注意到它仍在运行，并且没有改变。这是好的！这意味着一切都在正常工作，一切都得到了应有的服务。
- en: Let's now add some variables, mixins, and interpolation to our SCSS.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在我们的SCSS中添加一些变量、混合和插值。
- en: Overriding bootstrap-vue styles
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 覆盖bootstrap-vue样式
- en: We'll begin by adding a custom SCSS file. We'll call it `custom.scss`, and we'll
    place it inside the `assets` folder of our project.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先添加一个自定义的SCSS文件。我们将把它命名为`custom.scss`，并将其放在项目的`assets`文件夹中。
- en: 'Now let''s add this code to `custom.scss`:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们把这段代码添加到`custom.scss`中：
- en: '[PRE11]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We''ve just overridden the Bootstrap variable. Now let''s use it inside our
    `App.vue` file, by importing the `custom.scss` file. We''ll also override the
    `.bg-secondary` class inside our `#nav` element. The updated `script` tag will
    look like this:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚覆盖了Bootstrap的变量。现在让我们在`App.vue`文件中使用它，通过导入`custom.scss`文件。我们还将在`#nav`元素内覆盖`.bg-secondary`类。更新后的`script`标签将如下所示：
- en: '[PRE12]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'After we''ve saved all the changes, our project will be updated to this:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们保存了所有的更改之后，我们的项目将更新为如下所示：
- en: '![](assets/4fd83ec5-a839-4fac-9271-2c4ac97df62d.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4fd83ec5-a839-4fac-9271-2c4ac97df62d.png)'
- en: Next, we'll use some of the more advanced SCSS features in our `App.vue` file.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将在`App.vue`文件中使用一些更高级的SCSS特性。
- en: Using variables, mixins, and interpolation
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用变量、混合和插值
- en: In this section, we'll use some more variables, mixins, and interpolation syntax
    in SCSS. Before we even begin this chapter, it is beneficial to mention a website
    where you can practice writing SCSS, and see the CSS output it will produce. The
    website is called Sassmeister, and it's available at: [https://www.sassmeister.com/](https://www.sassmeister.com/).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将在SCSS中使用一些更多的变量、混合和插值语法。在我们开始本章之前，有必要提到一个网站，你可以在这个网站上练习编写SCSS，并查看它生成的CSS输出。这个网站叫做Sassmeister，网址是：[https://www.sassmeister.com/](https://www.sassmeister.com/)。
- en: Using Sassmeister to practice SCSS
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Sassmeister练习SCSS
- en: 'Once you visit the website, you can pick a flavor of Sass or SCSS that you''d
    like to use, by hovering over the Options item as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你访问了这个网站，你可以通过悬停在选项上来选择你想使用的Sass或SCSS的风格，如下所示：
- en: '![](assets/633cd327-2100-4ee8-b017-cf8fa12bedce.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/633cd327-2100-4ee8-b017-cf8fa12bedce.png)'
- en: The Sassmeister website is a great place to practice working with various features
    of the language. For example, we can navigate to our project's `node_modules`
    folder, and locate the `bootstrap` folder.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Sassmeister网站是一个练习使用语言各种特性的好地方。例如，我们可以导航到我们项目的`node_modules`文件夹，并找到`bootstrap`文件夹。
- en: If you can't find the bootstrap folder inside `node_modules`, you can install
    it with `npm i bootstrap`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在`node_modules`中找不到bootstrap文件夹，可以使用`npm i bootstrap`进行安装。
- en: 'Next, open the `scss/mixins` folder, and locate `_alert.scss`, with the following
    syntax:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，打开`scss/mixins`文件夹，找到`_alert.scss`，其语法如下：
- en: '[PRE13]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: As we can see, this is a mixin. Let's copy and paste it into Sassmeister and
    see what output we get.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，这是一个mixin。让我们将其复制粘贴到Sassmeister中，看看我们得到什么输出。
- en: Actually, we won't get any output. Why?
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我们不会得到任何输出。为什么呢？
- en: 'The reason is simple: a mixin in Sass or SCSS, is actually just like a function
    in a different language, for example, JavaScript. So, to use a mixin in SCSS,
    we need to call it, and pass it a few parameters. Here is an example:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 原因很简单：在Sass或SCSS中的mixin实际上就像是其他语言中的函数，例如JavaScript。因此，要在SCSS中使用mixin，我们需要调用它，并传递一些参数。这里是一个例子：
- en: '[PRE14]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Note that the `@include` syntax is necessary to run a mixin.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，使用`@include`语法是运行mixin所必需的。
- en: 'The preceding code is supposed to work, but inside our mixin definition, we''re
    calling another mixin as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码应该可以工作，但在我们的mixin定义内部，我们调用另一个mixin，如下所示：
- en: '[PRE15]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This means that in order for our code to compile in Sassmeister, we need to
    replace the preceding line with something else, for example, with the following:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着为了使我们的代码在Sassmeister中编译，我们需要用其他内容替换上述行，例如，用以下内容：
- en: '[PRE16]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Finally, our `@include` for `alert-custom`, needs to be applied on a CSS rule.
    This means that we need to wrap our call to `alert-custom` with a CSS declaration,
    as in the following example:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们的`@include` for `alert-custom`，需要应用于CSS规则。这意味着我们需要用CSS声明包装我们对`alert-custom`的调用，就像下面的例子一样：
- en: '[PRE17]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Putting all of this together, this is our SCSS code:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有这些放在一起，这是我们的SCSS代码：
- en: '[PRE18]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Sassmeister will compile the preceding code to the following:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Sassmeister将把上述代码编译为以下内容：
- en: '[PRE19]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Now that we know how to work with SCSS mixins, we can use them in our project.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们知道如何使用SCSS mixins，我们可以在我们的项目中使用它们。
- en: Using SCSS mixins and interpolation in our Vue project
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在我们的Vue项目中使用SCSS mixins和插值
- en: 'We''ll begin with adding an alert to our `App.vue` as follows:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从在`App.vue`中添加一个警报开始，如下所示：
- en: '[PRE20]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This simple addition will update our app look to this:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这个简单的添加将更新我们的应用程序外观为这样：
- en: '![](assets/ac5d347f-094c-4c44-9758-95bc109d72df.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ac5d347f-094c-4c44-9758-95bc109d72df.png)'
- en: Now we'll add some mixins to update the styling.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将添加一些mixins来更新样式。
- en: 'We''ll begin with adding our custom mixin to color the alert we''ve added.
    Here''s the code for `custom.scss`:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从添加我们的自定义mixin开始，以给我们添加的警报上色。以下是`custom.scss`的代码：
- en: '[PRE21]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'After we save the preceding file, our alert will look like this:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 保存上述文件后，我们的警报将如下所示：
- en: '![](assets/b956904c-0d93-4997-a41f-46741069cd24.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b956904c-0d93-4997-a41f-46741069cd24.png)'
- en: With this, we conclude the chapter.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，我们结束本章。
- en: Summary
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: SCSS is a large topic. Working with SCSS in VDOM frameworks such as Vue can
    get complex, due to the number of different concepts that are involved. This chapter
    gave you a sneak peek of what is available and how to get started.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: SCSS是一个庞大的主题。在像Vue这样的VDOM框架中使用SCSS可能会变得复杂，因为涉及的概念数量很多。本章为您提供了可用的内容以及如何入门的一瞥。
- en: In this chapter, we've touched on using SCSS in our project. We've learned about
    how to work with CSS and SCSS in our Vue apps. We've also learned about some of
    the main features of SCSS, such as variables, mixins, and interpolation, and we've
    also learned how to implement Bootstrap 4 in our Vue apps. Next, we've learned
    how to edit the built-in components of our bootstrap-vue plugin in Vue, and how
    to update them with custom SCSS code.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经涉及了在我们的项目中使用SCSS。我们已经了解了如何在我们的Vue应用程序中使用CSS和SCSS。我们还了解了SCSS的一些主要特性，如变量、mixins和插值，还学会了如何在我们的Vue应用程序中实现Bootstrap
    4。接下来，我们学会了如何编辑Vue中bootstrap-vue插件的内置组件，并如何使用自定义SCSS代码对其进行更新。
- en: In the next chapter, we'll build a simple project, using everything we've learned
    so far, and we'll publish it on GitHub Pages.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将使用到目前为止学到的所有知识来构建一个简单的项目，并将其发布在GitHub Pages上。
