- en: Theme Development in VuePress
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VuePress中的主题开发
- en: In the previous chapter, we learned about formatting our content with the help
    of Markdown. Prior to that, we had already set up a basic VuePress-powered website.
    Furthermore, we are also aware of most of the configuration settings that VuePress
    provides.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何使用Markdown格式化我们的内容。在那之前，我们已经建立了一个基本的VuePress网站。此外，我们还了解了VuePress提供的大部分配置设置。
- en: However, one key aspect of web development is still missing.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，网站开发的一个关键方面仍然缺失。
- en: Yes, we are talking about theme development. As you might be aware, a good theme
    or template is an intangible part of any website or blog.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，我们正在谈论主题开发。正如您可能知道的，一个好的主题或模板是任何网站或博客的无形部分。
- en: VuePress comes with its own default theme. In [Chapter 4](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml),
    *Creating a Site in VuePress*, when setting up your first VuePress website, you
    were introduced to the default theme and how to use it to present your content.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: VuePress自带默认主题。在[第4章](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml) *在VuePress中创建网站*中，当您设置您的第一个VuePress网站时，您已经了解了默认主题以及如何使用它来展示您的内容。
- en: In this chapter, however, we will be revisiting everything related to theme
    development and configuration in the world of VuePress. This means we will not
    only be covering config entities and variables, but also be revisiting the default
    VuePress theme and how it works, what specific parts of its code can be used for,
    and so on.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在本章中，我们将重新审视与VuePress主题开发和配置相关的一切。这意味着我们不仅将涵盖配置实体和变量，还将重新审视默认的VuePress主题以及它的工作原理，它的代码的具体部分可以用于什么等等。
- en: But beyond that, we will also turn our attention to customization of themes
    in VuePress. We will talk at length about custom theme configuration toward the
    latter part of this chapter.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 但除此之外，我们还将把注意力转向VuePress主题的定制。我们将在本章的后半部分详细讨论自定义主题配置。
- en: 'In this chapter, you will learn about the following:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，您将学习以下内容：
- en: Theme development for VuePress
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VuePress的主题开发
- en: Config entities and values for theme development
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主题开发的配置实体和值
- en: Working with default theme config in VuePress
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在VuePress中使用默认主题配置进行工作
- en: Custom theme development in VuePress
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在VuePress中的自定义主题开发
- en: Using CSS customization in VuePress
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在VuePress中使用CSS自定义
- en: Syncing with Git repository
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与Git存储库同步
- en: Theme development in VuePress
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VuePress中的主题开发
- en: So now, without wasting any more time, let's get things rolling!
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 所以现在，不再浪费时间，让我们开始吧！
- en: Working with themes in VuePress
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在VuePress中使用主题
- en: VuePress, as a static site generator, focuses on simplicity and agility. This
    means, unlike WordPress, you will not find a plethora of themes and plugins to
    use. While it can be a deterrent for some people, as an easy-to-install theme
    is a real time-saver in some cases, this functional and developer-focused approach
    is highly useful for many others.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: VuePress作为一个静态网站生成器，专注于简单和敏捷。这意味着，与WordPress不同，您不会找到大量的主题和插件可供使用。虽然这可能会对一些人构成障碍，因为在某些情况下，易于安装的主题是真正节省时间的，但这种功能性和开发者导向的方法对许多其他人非常有用。
- en: It helps you code your theme the way you want it to be. Plus, you can also work
    with just the default theme and quickly put together a site live within minutes.
    In [Chapter 4](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml), *Creating a Site in
    VuePress*, we saw that setting up the default home page in VuePress is as easy
    as editing a simple Markdown file!
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以帮助您按照您想要的方式编写主题。此外，您还可以仅使用默认主题，并在几分钟内快速搭建一个现场网站。在[第4章](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml)
    *在VuePress中创建网站*中，我们看到在VuePress中设置默认主页就像编辑一个简单的Markdown文件一样容易！
- en: What and how?
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 是什么以及如何？
- en: The current chapter's layout is fairly straightforward, simply because we are
    dealing with just one particular concept of VuePress—themes. With that said, it
    is worth remembering that theme development in itself is a fairly broad topic.
    As VuePress grows in size and popularity, and newer versions come out over the
    course of time, you may need to brush up and revise your theme development skills
    in order to ensure that you adhere to the latest coding standards put forth by
    VuePress and Vue.js.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当前章节的布局非常简单，因为我们只涉及VuePress的一个特定概念——主题。话虽如此，值得记住的是，主题开发本身是一个相当广泛的主题。随着VuePress的规模和受欢迎程度的增长，以及随着时间的推移出现新版本，您可能需要复习和修订您的主题开发技能，以确保您遵守VuePress和Vue.js提出的最新编码标准。
- en: At this point, we will be discussing, or rather dissecting, the default theme
    structure for VuePress. This means we will cover home page, navigation, sidebar
    and all other related entities. You may have learned the basics in [Chapter 4](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml),
    *Creating a Site in VuePress*,but for now, we will be more interested in understanding
    how and why code works here. You have already seen the practical application of
    the default theme in [Chapter 4](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml), *Creating
    a Site in VuePress*.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们将讨论或者说解剖VuePress的默认主题结构。这意味着我们将涵盖主页、导航、侧边栏和所有其他相关实体。你可能已经在[第4章](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml)中学习了基础知识，但现在，我们更感兴趣的是理解这里的代码是如何工作的。你已经在[第4章](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml)中看到了默认主题的实际应用。
- en: After this, we will turn our attention toward customization. A custom theme
    in VuePress requires that several changes be made to the default structuring,
    as we shall soon see.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之后，我们将把注意力转向定制。在VuePress中定制主题需要对默认结构进行一些更改，我们很快就会看到。
- en: But before going any further, let's spend a moment trying to cover some of the
    basic theme configuration values in VuePress. Unlike the Markdown config entities
    or the basic config entities that we covered in previous chapters, theme config
    is not that elaborate.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 但在继续之前，让我们花一点时间来了解一些VuePress中基本主题配置值。与我们在之前章节中介绍的Markdown配置实体或基本配置实体不同，主题配置并不那么复杂。
- en: Config entities for theming
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主题的配置实体
- en: At this point, let's first learn about some basic config entities related to
    theme development in VuePress. We have already learned about other config entities
    in previous chapters.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，让我们首先了解一些与VuePress主题开发相关的基本配置实体。我们已经在之前的章节中学习了其他配置实体。
- en: theme
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主题
- en: The theme config value is used to specify a custom theme. This means that if
    you are using a custom theme in your project, you need to invoke the theme config
    to specify it.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 主题配置值用于指定自定义主题。这意味着如果您在项目中使用自定义主题，您需要调用主题配置来指定它。
- en: It is of the string type and is undefined by default, because VuePress uses
    its own default theme unless otherwise specified.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 它是字符串类型，默认情况下未定义，因为VuePress使用自己的默认主题，除非另有规定。
- en: themeConfig
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: themeConfig
- en: As the name suggests, `themeConfig` provides configuration options for the current
    theme.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 顾名思义，`themeConfig`为当前主题提供配置选项。
- en: It is of the object type and is, by default, written as `{ }`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 它是对象类型，默认情况下写作`{}`。
- en: Note that `themeConfig` contents and options will vary, depending on the way that
    you have structured your theme. You will be using the `themeConfig` entity often
    as you progress with theme customization.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`themeConfig`的内容和选项将根据您的主题结构方式而有所不同。随着您在主题定制中的进展，您将经常使用`themeConfig`实体。
- en: Here is one handy example. Remember the Service Worker that we learned about
    in [Chapter 3](490b74d6-1bb0-4194-9173-c04c98e2b1e9.xhtml), *VuePress Development
    – Preliminary Steps*? That was a site-level Service Worker. But what about a theme-level
    one?
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个方便的例子。还记得我们在[第3章](490b74d6-1bb0-4194-9173-c04c98e2b1e9.xhtml)中学到的Service
    Worker，*VuePress开发-初步步骤*吗？那是一个站点级别的Service Worker。但是主题级别的呢？
- en: When you use `themeConfig.serviceWorker` you can customize it to work for the
    theme-level stuff only. In this manner, you can customize several elements of
    VuePress development to suit the needs of your theme with the help of `themeConfig`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用`themeConfig.serviceWorker`时，你可以将其定制为仅适用于主题级别的内容。通过`themeConfig`，你可以定制VuePress开发的多个元素，以满足你的主题需求。
- en: '**How is this useful?**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**这有什么用？**'
- en: Well, imagine the following. Your visitors have your VuePress site opened in
    multiple tabs and are browsing your content. Now, what if you update your content
    at that very time? In normal cases, your visitors will not see the new content
    until all the tabs are closed and then opened – in other words, a hard browser-side
    refresh or reload of the opened page.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下。你的访问者在多个标签中打开了你的VuePress网站，并浏览你的内容。现在，如果你在那个时候更新了你的内容呢？在正常情况下，你的访问者直到关闭并重新打开所有标签，也就是说，硬性的浏览器端刷新或重新加载打开的页面，才能看到新的内容。
- en: When you configure the Service Worker to work with `themeConfig`, you can also
    use it for some fun things. One such thing is a UI for popups.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当你配置Service Worker与`themeConfig`一起工作时，你也可以用它做一些有趣的事情。其中之一就是弹出窗口的用户界面。
- en: Yes, everyone knows what popups are and how annoying they can be. But we are
    not talking about an advertisement-like spammy popup. Instead, the `themeConfig.serviceWorker`
    element will add an `updatePopup` option that will inform the users when new content
    is available.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，每个人都知道弹出窗口是什么，以及它们有多烦人。但我们不是在谈论类似广告的垃圾弹出窗口。相反，`themeConfig.serviceWorker`元素将添加一个`updatePopup`选项，通知用户有新内容可用。
- en: In other words, when you update your site and the tab is opened by the user,
    a popup will appear informing the user about new content and a button to refresh,
    so that new content is displayed straightaway, without having to close the clients.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，当你更新你的网站并且用户打开了标签时，一个弹出窗口将出现，通知用户有新内容，并提供一个刷新按钮，这样新内容就可以立即显示，而不需要关闭客户端。
- en: This option is very helpful when you have a site that you update often, such
    as documentation for a technical project, and so on.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这个选项在你经常更新的网站上非常有用，比如技术项目的文档等等。
- en: 'The basic syntax for the `themeConfig.serviceWorker.updatePopup` option is
    as follows (a Boolean value):'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`themeConfig.serviceWorker.updatePopup`选项的基本语法如下（布尔值）：'
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note that the popup feature in VuePress, as of now, is still in beta.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，截至目前，VuePress中的弹出功能仍处于测试阶段。
- en: As you can see, `themeConfig` can be used for varied purposes to add more bells
    and whistles to your VuePress installation.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，`themeConfig`可以用于各种目的，为你的VuePress安装增加更多的功能。
- en: For now, that is all. These are the only two configuration values that we need
    to bear in mind. Thus, it is safe to turn our attention toward the default VuePress
    theme in order to gain better a functional understanding of this.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 目前就这些了。这是我们需要记住的唯一两个配置值。因此，我们可以把注意力转向默认的VuePress主题，以便更好地理解它的功能。
- en: Default theme config in VuePress
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VuePress中的默认主题配置
- en: This particular section pertains entirely and only to the default VuePress theme.
    If you are using a custom theme, most or all of these settings may not apply.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这个特定的部分完全只涉及默认的VuePress主题。如果你使用自定义主题，大部分或所有这些设置可能不适用。
- en: At this stage, it is highly advisable to turn to the dummy site that you created
    in [Chapter 4](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml), *Creating a Site in
    VuePress*. We covered concepts such as the home page, navigation, sidebar, a search
    function, and so on. We will now gain a better understanding of these, and also
    learning about other features that the default VuePress theme provides out of
    the box (such as integration with GitHub repo).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，强烈建议您转到您在[第4章](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml)中创建的虚拟站点，*在VuePress中创建站点*。我们涵盖了首页、导航、侧边栏、搜索功能等概念。我们现在将更好地理解这些内容，并了解默认VuePress主题提供的其他功能（例如与GitHub仓库的集成）。
- en: Home page
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 首页
- en: 'We are aware that the default VuePress theme comes with its own home page layout.
    In order to use this, all we have to do is set the home: value to `true` in the
    root directory''s `README.md` file. The said file will then be parsed as `index.html`
    by VuePress, and the default home page will be shown.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道默认的VuePress主题自带自己的首页布局。为了使用这个布局，我们只需要在根目录的`README.md`文件中将`home:`的值设置为`true`。然后该文件将被VuePress解析为`index.html`，并显示默认的首页。
- en: 'We can add metadata to the home page directly via the `README.md` file. In
    the previous chapter, we have learned how to write the front matter in YAML format.
    Thus, it is time to analyze the code for the home page. Copying the same home
    page front matter from [Chapter 4](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml), *Creating
    a Site in VuePress*, gives us the following:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过`README.md`文件直接向首页添加元数据。在上一章中，我们已经学会了如何以YAML格式编写前置内容。因此，现在是分析首页代码的时候了。从[第4章](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml)中复制相同的首页前置内容，*在VuePress中创建站点*，我们得到以下内容：
- en: '[PRE1]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In the preceding code, we first specify the metadata about our site. Then, we
    add the link and anchor text details for the call-to-action button. Lastly, we
    enter additional info to be displayed.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，我们首先指定了关于我们站点的元数据。然后，我们添加了调用按钮的链接和锚文本详细信息。最后，我们输入要显示的附加信息。
- en: 'As we saw in [Chapter 4](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml), *Creating
    a Site in VuePress*, here is how the end result looks:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[第4章](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml)中所看到的，*在VuePress中创建站点*，最终结果如下：
- en: '![](assets/7f6e8c14-1a4d-4972-a8c9-8d825689150e.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7f6e8c14-1a4d-4972-a8c9-8d825689150e.png)'
- en: Anything that is placed after the front matter is also parsed as simplified
    Markdown, and it will be shown below the front matter on the home page.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在前置内容之后放置的任何内容也会被解析为简化的Markdown，并显示在首页的前置内容下方。
- en: But what if you do not wish to use the default home page? Sure, you can create
    a custom theme, but why should you build a new theme just for adding a new page?
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果您不想使用默认的首页呢？当然，您可以创建一个自定义主题，但为什么要为添加一个新页面而构建一个新主题呢？
- en: In this case, the better option would be to customize the home page layout.
    We can do this by means of custom layouts.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，更好的选择是自定义首页布局。我们可以通过自定义布局来实现这一点。
- en: Custom layouts for pages
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 页面的自定义布局
- en: We know that every Markdown `.md` file is rendered in HTML in the web browser
    by VuePress. In general, VuePress parses the contents of the Markdown file within
    `<div class="page">` containers in HTML.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道每个Markdown `.md`文件都是由VuePress在Web浏览器中呈现为HTML。一般来说，VuePress会在HTML中的`<div
    class="page">`容器中解析Markdown文件的内容。
- en: This means that our default layout—comprising of the main content, nav bar and
    other links—is included within the container.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们的默认布局——包括主要内容、导航栏和其他链接——都包含在容器内。
- en: Thus, the task here is simple. If we have to add any custom layout or component,
    we just need to ensure it is included within our default container.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这里的任务很简单。如果我们需要添加任何自定义布局或组件，我们只需要确保它包含在我们的默认容器内。
- en: 'For example, say we have specified a custom `layout` named `MyLayout`. Now,
    in the YAML front matter, we just need to add the following line:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设我们已经指定了一个名为`MyLayout`的自定义`layout`。现在，在YAML前置内容中，我们只需要添加以下行：
- en: '[PRE2]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: With this, the new layout will be rendered for the given page.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，给定页面将呈现新的布局。
- en: In this manner, you can specify custom layouts for as many pages as you want.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，您可以为尽可能多的页面指定自定义布局。
- en: Nav bar
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导航栏
- en: The navigation bar in VuePress consists of a generic set of items, such as the
    navigation menu, the search bar, a link to your GitHub repo (if any), and so on.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: VuePress中的导航栏包括一组通用项目，例如导航菜单、搜索栏、指向您的GitHub存储库的链接（如果有的话）等等。
- en: Nav bar links
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导航栏链接
- en: Remember the `themeConfig` variable that we discussed previously? You can use
    it to add any amount of links to your navbar.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 还记得我们之前讨论过的`themeConfig`变量吗？您可以使用它向导航栏添加任意数量的链接。
- en: 'Let''s analyze the following code:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分析以下代码：
- en: '[PRE3]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In the preceding example, we are creating a simple navigation link menu that
    offers four links:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，我们创建了一个简单的导航链接菜单，提供了四个链接：
- en: Home page
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主页
- en: About page
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于页面
- en: A page about coffee
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于咖啡的页面
- en: An external link (GitHub)
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外部链接（GitHub）
- en: 'Fairly simple, isn''t it? You can keep adding links here as per your needs.
    Here is how it looks in the browser:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 相当简单，不是吗？您可以根据需要在这里不断添加链接。在浏览器中的效果如下：
- en: '![](assets/ba00b3ac-cc02-4fe4-9c19-2097184e3126.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/ba00b3ac-cc02-4fe4-9c19-2097184e3126.png)
- en: 'And what about dropdown menus? All you need to do is provide the said links
    as arrays, not independent links. For instance, consider the following code:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 那么下拉菜单呢？您只需要将所述链接提供为数组，而不是独立的链接。例如，考虑以下代码：
- en: '[PRE4]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: With this, the links will be shown as a drop-down menu.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，链接将显示为下拉菜单。
- en: 'Furthermore, you can also have highly complicated menus, with sub-groups and
    nested items under drop-down entries. For a VuePress website, such a type of menu
    structure is highly unlikely to be used, and potentially not so useful. Nevertheless,
    here is the default syntax for such a menu structure, which you can modify as
    per your requirements:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您还可以拥有非常复杂的菜单，包括下拉条目下的子组和嵌套项目。对于VuePress网站，这种类型的菜单结构极不可能被使用，可能也不太有用。尽管如此，这里是这种菜单结构的默认语法，您可以根据自己的需求进行修改：
- en: '[PRE5]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Search bar
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 搜索栏
- en: 'You can choose to use either the native search or Algolia DocSearch in VuePress.
    The default search bar location is right next to the navigation menu links, as
    we saw in [Chapter 4](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml), *Creating a
    Site in VuePress*:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择在VuePress中使用原生搜索或Algolia DocSearch。默认搜索栏位置就在导航菜单链接旁边，就像我们在[第4章](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml)中看到的那样，*在VuePress中创建站点*：
- en: '![](assets/82f865c1-dd3b-49ec-84a4-5e0ab99d5521.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/82f865c1-dd3b-49ec-84a4-5e0ab99d5521.png)
- en: Native search box
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 原生搜索框
- en: VuePress comes with its own native search box that you do not need to tinker
    with. However, if you want, you can use the `themeConfig` value to entirely disable
    the search box, or limit the number of suggestions that are shown for the search
    term.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: VuePress自带其自己的原生搜索框，您无需进行调整。但是，如果您愿意，您可以使用`themeConfig`值完全禁用搜索框，或者限制显示搜索词的建议数量。
- en: 'Here is how to disable the native search box:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是如何禁用原生搜索框：
- en: '[PRE6]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Or, to limit the number of suggestions, try the following code:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，为了限制建议的数量，尝试以下代码：
- en: '[PRE7]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: One big drawback of native search in VuePress is that it builds its index from
    the `H1`, `H2`, and `H3` tags only. This means it will not scan through the actual
    body content for the search term.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: VuePress中原生搜索的一个很大的缺点是它只从`H1`、`H2`和`H3`标签构建其索引。这意味着它不会扫描实际的正文内容以搜索词。
- en: Naturally, such search functionality may not suffice for everyone, as often,
    the correct keyword is found in the content and not the headings.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这样的搜索功能可能不适合每个人，因为通常正确的关键词在内容中而不是标题中。
- en: To overcome this, we can integrate an external search mechanism into our theme.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 为了克服这一点，我们可以将外部搜索机制集成到我们的主题中。
- en: Using Algolia Search
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Algolia搜索
- en: If you are not familiar with Algolia DocSearch, it might be useful to visit
    their website and learn more at [https://community.algolia.com/docsearch/](https://community.algolia.com/docsearch/).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对Algolia DocSearch不熟悉，可以访问他们的网站并在[https://community.algolia.com/docsearch/](https://community.algolia.com/docsearch/)上了解更多。
- en: 'Basically, Algolia DocSearch is an enhanced version of the documentation search
    engine. It crawls through your content, indexes it, and then returns better search
    results that span and crawl the entire content, not just headings. A screenshot
    of their website is shown here:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，Algolia DocSearch是文档搜索引擎的增强版本。它会爬取您的内容，对其进行索引，然后返回更好的搜索结果，涵盖并爬取整个内容，而不仅仅是标题。他们网站的截图如下：
- en: '![](assets/4fc86854-b6d5-4a6f-9f8b-6c371eb60711.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4fc86854-b6d5-4a6f-9f8b-6c371eb60711.png)'
- en: 'Algolia DocSearch is fully compatible with various environments, including
    Bootstrap, React, and of course Vue.js Plus, it is a context-aware search mechanism
    that learns as you type. As a result, Algolia DocSearch can offer an array of
    features that may otherwise be lacking in native search methodology, such as:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: Algolia DocSearch与各种环境完全兼容，包括Bootstrap、React，当然还有Vue.js。此外，它是一种上下文感知的搜索机制，可以随着您的输入而学习。因此，Algolia
    DocSearch可以提供一系列功能，这些功能在本机搜索方法中可能缺失，例如：
- en: Autocomplete suggestions
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动完成建议
- en: Customized analytics to view detailed search stats
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定制分析以查看详细的搜索统计信息
- en: Algolia DocSearch comes with an MIT License and is open source. With that said,
    in order to make use of it on your VuePress website, you will need to register
    for an account with Algolia.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Algolia DocSearch采用MIT许可证，是开源的。因此，为了在您的VuePress网站上使用它，您需要在Algolia注册一个账户。
- en: Detailed documentation for integrating Algolia DocSearch with your site is available
    at [https://github.com/algolia/docsearch#docsearch-options](https://github.com/algolia/docsearch#docsearch-options).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Algolia DocSearch与您的网站集成的详细文档可在[https://github.com/algolia/docsearch#docsearch-options](https://github.com/algolia/docsearch#docsearch-options)上找到。
- en: 'Once you have signed up for an account with Algolia, you can submit your site
    for indexing and crawling. Thereafter, you just need to inform VuePress about
    the Algolia DocSearch engine. To do that, you will once again use the very handy
    `themeConfig` option, as follows:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您在Algolia注册了一个账户，您就可以提交您的网站进行索引和爬取。之后，您只需要告知VuePress有关Algolia DocSearch引擎。为此，您将再次使用非常方便的`themeConfig`选项，如下所示：
- en: '[PRE8]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note that you will need to specify your own API key and index name, as provided
    by the Algolia DocSearch when site indexing is complete. In the absence of an
    API key or index name, or in case of incorrect values for either of them, the
    search functionality will not work.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，当网站索引完成时，您需要指定自己的API密钥和索引名称，这些信息由Algolia DocSearch提供。如果缺少API密钥或索引名称，或者其中任何一个值不正确，搜索功能将无法正常工作。
- en: How to disable the navbar?
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何禁用导航栏？
- en: 'Sometimes, you may need to or wish to disable the navbar entirely. In that
    case, you can just specify this via the `themeConfig` option, as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，您可能需要禁用导航栏。在这种情况下，您可以通过`themeConfig`选项指定如下：
- en: '[PRE9]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The navbar display value is now set to false, and it will not therefore show
    up on the frontend.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 导航栏显示值现在设置为false，因此它将不会显示在前端。
- en: 'However, the preceding option disables navbar globally. To disable it just
    for a specific page, you should preferably edit the front matter for the said
    page, as follows:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，前面的选项会全局禁用导航栏。要仅针对特定页面禁用它，最好编辑该页面的前置内容，如下所示：
- en: '[PRE10]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Previous and next links
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 上一页和下一页的链接
- en: By default, VuePress will add prev and next navigation links at the end of each
    page on your site. These links are automatically inferred on the basis of headers
    in your sidebar, and calculated from the active page.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，VuePress会在站点上每个页面的末尾添加上一页和下一页的导航链接。这些链接是根据侧边栏中的标题自动推断的，并从当前页面计算得出。
- en: 'However, you can override their appearance and selection as well. In the front
    matter of the active page, you just need to specify your choices. For example,
    for a custom selection of pages, you would add the following:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，你也可以覆盖它们的外观和选择。在当前页面的前置内容中，你只需要指定你的选择。例如，对于自定义页面的选择，你可以添加以下内容：
- en: '[PRE11]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Optionally, you can also disable both of them:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，你也可以同时禁用两者：
- en: '[PRE12]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Or, just disable one of them with the following code:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，只需使用以下代码禁用其中一个：
- en: '[PRE13]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Or:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 或者：
- en: '[PRE14]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: And so on.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 等等。
- en: That covers the part about navigation per se. Now, it is time to turn our attention
    toward the sidebar.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这涵盖了关于导航本身的部分。现在，是时候把注意力转向侧边栏了。
- en: The sidebar
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 侧边栏
- en: VuePress provides your site with a native sidebar that is built on the basis
    of your page structure and the header links therein.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: VuePress为你的站点提供了一个基于页面结构和其中的标题链接构建的原生侧边栏。
- en: 'To enable the sidebar for your site, you need to configure it using an array
    of links via the `themeConfig.sidebar` option. Note that the following code goes
    into your `config.js` file:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 要为你的站点启用侧边栏，你需要使用`themeConfig.sidebar`选项通过链接数组进行配置。请注意，以下代码放入你的`config.js`文件中：
- en: '[PRE15]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: In this sample, the links go to the `README.md` files by default. It means any
    link ending in `/` forward slash will go to the relevant `README.md` file.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，默认情况下链接会指向`README.md`文件。这意味着任何以`/`斜杠结尾的链接都会指向相关的`README.md`文件。
- en: Notice the optional link text? If you specify something here, then it will be
    shown as the link text in the sidebar. Alternatively, if you specify a title in
    the front matter for the page, then it will be shown in the sidebar as link text.
    Lastly, if no title is specified in either location, VuePress will automatically
    pick the link text from the first header of the concerned page.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 注意可选的链接文本？如果你在这里指定了某些内容，那么它将显示为侧边栏中的链接文本。或者，如果你在页面的前置内容中指定了标题，那么它将显示为侧边栏中的链接文本。最后，如果在任一位置未指定标题，则VuePress将自动从相关页面的第一个标题中选择链接文本。
- en: Modifying header links in the sidebar
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改侧边栏中的标题链接
- en: You can play with header links in the sidebar of VuePress. A number of examples
    will be discussed here.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在VuePress的侧边栏中玩转标题链接。这里将讨论一些示例。
- en: Displaying the header links of every page
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示每个页面的标题链接
- en: 'By default, the sidebar will only show the header links for the active page.
    You can change it to show the header links of all pages straightaway. All you
    need to do is to set the concerned value to `true`, as follows:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，侧边栏只会显示当前页面的标题链接。你可以将其更改为立即显示所有页面的标题链接。你只需要将相关值设置为`true`即可，如下所示：
- en: '[PRE16]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Nested header links
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 嵌套标题链接
- en: The sidebar, as you are aware, will automatically display the links for headers
    in the current active page. Thus, as you browse through the pages, the relevant
    header links will be shown for easier navigation.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 侧边栏，正如你所知，将自动显示当前活动页面的标题链接。因此，当你浏览页面时，相关的标题链接将显示出来，以便更容易导航。
- en: Such headers are nested under the active page, with a default depth of `1` (which
    means all `H2` tags are shown as headers, whereby the page title itself is `H1`).
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的标题是嵌套在活动页面下的，默认深度为`1`（这意味着所有`H2`标签都显示为标题，页面标题本身是`H1`）。
- en: You can modify this behavior to show deeper nesting of header links using the
    `themeConfig.sidebarDepth` option. For example, if the depth of nesting is changed
    to `0`, all header links are hidden and only `H1` values (page titles) are shown.
    Similarly, changing the depth to `2` will imply that all `H3` headings nested
    under `H2` header links are also shown, and so on.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`themeConfig.sidebarDepth`选项修改此行为，以显示更深层次的标题链接嵌套。例如，如果将嵌套深度更改为`0`，则所有标题链接都将被隐藏，只有`H1`值（页面标题）会显示。类似地，将深度更改为`2`将意味着所有嵌套在`H2`标题链接下的`H3`标题也会显示，依此类推。
- en: 'You can specify the relevant depth in the front matter. For instance, to show
    `H1` page titles, `H2` header links as well as `H3` and `H4` links, you will specify
    the depth to be `3`, as follows:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在front matter中指定相关深度。例如，要显示`H1`页面标题，`H2`标题链接以及`H3`和`H4`链接，您将指定深度为`3`，如下所示：
- en: '[PRE17]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Active header links
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 活动标题链接
- en: As the user scrolls down the page, the sidebar's active links are automatically
    updated. This is the default behavior for virtually all static site generators
    that tend to work as single page apps. In this manner, there is no need to refresh
    or reload the full page at all.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户向下滚动页面时，侧边栏的活动链接会自动更新。这是几乎所有静态站点生成器的默认行为，它们倾向于作为单页面应用程序工作。这样一来，根本不需要刷新或重新加载整个页面。
- en: 'However, you can disable this behavior should you need to, with the help of
    `themeConfig.activeHeaderLinks` option, as shown here:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果需要的话，您可以通过`themeConfig.activeHeaderLinks`选项来禁用此行为，如下所示：
- en: '[PRE18]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Note that this will mean that the active header link is not highlighted during
    browsing, and this may impact the overall UX of the site. However, it can also
    boost page speed slightly, as the corresponding scripts will no longer be loaded.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这意味着在浏览时不会突出显示活动标题链接，这可能会影响站点的整体用户体验。但是，这也可能会略微提高页面速度，因为相应的脚本将不再加载。
- en: Organizing the sidebar
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 组织侧边栏
- en: You can choose to organize or divide your sidebar into multiple groups. This
    is accomplished with the help of objects.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择将侧边栏组织或分成多个组。这是通过对象的帮助实现的。
- en: 'Sidebar groups in VuePress are collapsible by default. However, you can specify
    the collapsible option to be false as well. The syntax for creating sidebar groups
    is as follows:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: VuePress中的侧边栏组默认是可折叠的。但是，您也可以将可折叠选项指定为false。创建侧边栏组的语法如下：
- en: '[PRE19]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This syntax is self-explanatory. We are just creating groups of links with the
    given titles, and then adding pages and links as children to each.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这个语法很简单。我们只是用给定的标题创建链接组，然后将页面和链接作为每个组的子项添加。
- en: Using more than one sidebar
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用多个侧边栏
- en: You can, indeed, have multiple sidebars for different sections of your content.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 确实，您可以为内容的不同部分创建多个侧边栏。
- en: However, for this to properly work, you first need to organize your content
    accordingly. A good idea is to organize your pages into directories and sub-directories.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，要使其正常工作，您首先需要相应地组织您的内容。一个好主意是将页面组织成目录和子目录。
- en: 'For example, consider the following directory structure wherein the pages are
    organized as per directories:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑以下目录结构，其中页面按目录组织：
- en: 'Now, to create multiple sidebars, we need to add the following to our `config.js`
    file:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要创建多个侧边栏，我们需要将以下内容添加到我们的`config.js`文件中：
- en: '[PRE20]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The preceding configuration will declare sidebars for each section. Note that
    it is highly recommended to declare the fallback option only at the end, because
    VuePress reads config for sidebars from top to bottom; that is, chronologically
    in order of declaration.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 上述配置将为每个部分声明侧边栏。请注意，强烈建议仅在最后声明fallback选项，因为VuePress按照从上到下的顺序读取侧边栏配置；也就是说，按照声明的时间顺序。
- en: Adding sidebars to single pages
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为单个页面添加侧边栏
- en: You can generate custom mini-sidebars that contain header links for a given
    page only—generally the currently active page.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以生成包含特定页面的标题链接的自定义迷你侧边栏-通常是当前活动页面。
- en: 'For this to happen, you first need to specify this in the front matter of the
    concerned page, as follows:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现这一点，您首先需要在相关页面的front matter中指定如下：
- en: '[PRE21]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'You can repeat this globally, too, across all pages. In this case, you can
    modify your `config.js` file as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以在全局范围内重复这个过程。在这种情况下，您可以修改您的`config.js`文件如下：
- en: '[PRE22]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: How to disable the sidebar?
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何禁用侧边栏？
- en: 'If you wish to disable the sidebar on a particular page, you can specify this
    in the front matter. This will give a full-width appearance to the page, and is
    done as follows:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望在特定页面上禁用侧边栏，可以在front matter中指定。这将使页面呈现全宽外观，并且可以按如下方式完成：
- en: '[PRE23]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: For GitHub users
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对于GitHub用户
- en: Considering the facts that VuePress is actively maintained on its own GitHub
    repository, and that a good number of Vue.js users tend to prefer GitHub, it is
    natural for VuePress to come loaded with some native support for GitHub.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到VuePress在其自己的GitHub存储库上得到积极维护，并且许多Vue.js用户倾向于偏爱GitHub，VuePress自然会加载一些对GitHub的本地支持。
- en: Syncing to a GitHub repository
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 同步到GitHub存储库
- en: You can easily add edit links and updates to and from your GitHub repository
    by simply specifying the repo name.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过简单指定存储库名称来轻松地向您的GitHub存储库添加编辑链接和更新。
- en: However, if you are not a GitHub user and rely on some other service, such as
    BitBucket or GitLab, you still have nothing to worry about. In this case, you
    can simply provide the full URL to your repository in the `config.js` file (as
    we will see in the upcoming syntax), and you will find that VuePress can pull
    the relevant info therefrom.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果您不是GitHub用户，依赖于其他服务，如BitBucket或GitLab，您仍然无需担心。在这种情况下，您可以在`config.js`文件中简单地提供存储库的完整URL（正如我们将在即将介绍的语法中看到的），您会发现VuePress可以从中提取相关信息。
- en: 'Thus, to sum it up:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，总结一下：
- en: GitHub users only need to tell VuePress which repository to use
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub用户只需要告诉VuePress要使用哪个存储库
- en: GitLab and BitBucket (or other Git-based platform users) need to specify the
    full URL to their repository
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitLab和BitBucket（或其他基于Git的平台用户）需要指定其存储库的完整URL
- en: 'To enable this particular feature, the following piece of code is all you need.
    Pay specific attention to the comments in this code, as you will need to change
    it to your required values in order to make things work. Plus, depending on how
    you have organized your repository, you will probably not be needing most of this
    code (for instance, if your docs are not in a different repository, you can safely
    omit that line from the following code):'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用此特定功能，您只需要以下代码片段。请特别注意此代码中的注释，因为您需要根据需要更改它以使其正常工作。另外，根据您组织存储库的方式，您可能不需要大部分此代码（例如，如果您的文档不在不同的存储库中，您可以安全地从以下代码中省略该行）：
- en: '[PRE24]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: In the preceding code snippet, you will need to specify the address to your
    repository, as well as the the documentation repository (or whatever literature
    you are hosting on VuePress), if it's different. Then, you can tweak the appearance
    of the link and choose whether or not you want people to edit or contribute to
    your repository.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码片段中，您需要指定您的存储库地址，以及文档存储库（或您在VuePress上托管的任何文学作品）的地址，如果有的话。然后，您可以调整链接的外观，并选择是否希望其他人编辑或为您的存储库做出贡献。
- en: How to hide the Edit link on some pages?
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在某些页面上隐藏编辑链接？
- en: Often, you want open source users to contribute to all the pages on your project
    or site, but there might be certain pages that you want to safeguard from edits.
    This is especially true in the case of pages pertaining to licensing, legal terms,
    copyright holders, and so on.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，您希望开源用户为项目或站点上的所有页面做出贡献，但可能有某些页面您希望免受编辑。这在涉及许可、法律条款、版权所有者等页面的情况下尤为重要。
- en: 'In this case, you just need to use the given page''s front matter and turn
    off the `editLink` property, as follows:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，您只需要使用给定页面的前置内容，并关闭`editLink`属性，如下所示：
- en: '[PRE25]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Timestamps from GitHub
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 来自GitHub的时间戳
- en: When working with GitHub repositories, it is natural for developers to showcase
    or display a *last updated on* timestamp, so as to keep track of progress and
    also to inform users that the said project is actually under active development.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用GitHub存储库时，开发人员通常会展示或显示*上次更新时间*时间戳，以便跟踪进度，并通知用户所说的项目实际上正在积极开发中。
- en: This timestamp comes from the Git commit and is shown when the first commit
    is made for a given page. Following that, it is updated as and when a new commit
    is made.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 此时间戳来自Git提交，并在给定页面进行第一次提交时显示。之后，每当进行新的提交时，它都会更新。
- en: '![](assets/9fe6c5a0-d25c-4394-bf3b-ff662faab38e.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9fe6c5a0-d25c-4394-bf3b-ff662faab38e.png)'
- en: In VuePress, it is turned off by default. But you can choose to turn it on and
    show it as a Last Updated display.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在VuePress中，默认情况下是关闭的。但您可以选择打开它，并将其显示为上次更新的显示。
- en: You can use the `themeConfig.lastUpdated` option that will pull the timestamp
    of each page's last Git commit, and display it at the bottom of the page.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`themeConfig.lastUpdated`选项，该选项将提取每个页面的最后一个Git提交的时间戳，并在页面底部显示它。
- en: 'The syntax is as follows. Note that the timestamp is a string value:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 语法如下。请注意，时间戳是一个字符串值：
- en: '[PRE26]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: That's all that there is when working with GitHub repositories for your VuePress
    site.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是在为VuePress站点使用GitHub存储库时的全部内容。
- en: Now, since we are talking theme development, we need to turn toward something
    that makes the web pages appear the way they are.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，由于我们正在谈论主题开发，我们需要转向使网页显示其外观的内容。
- en: Yes, we are talking about Cascading Style Sheets, or CSS.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，我们在谈论层叠样式表，或者CSS。
- en: CSS in VuePress theme development
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VuePress主题开发中的CSS
- en: At this point, we are going to look at which custom CSS overrides and changes
    we can play with in VuePress.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们将看看在VuePress中可以使用哪些自定义CSS覆盖和更改。
- en: Note that you will need a working knowledge of CSS in order to execute any of
    the tweaks suggested in this section.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您需要对CSS有一定的了解，以执行本节中建议的任何调整。
- en: Custom classes for pages
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 页面的自定义类
- en: More often than not, you may need to add custom CSS for a specific page on your
    VuePress site. In such cases, what you need is to add a custom class that is unique
    to the given page.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 往往，您可能需要为VuePress站点上的特定页面添加自定义CSS。在这种情况下，您需要添加一个对于给定页面是唯一的自定义类。
- en: By now, you may already be aware that page-specific content needs to be declared
    with the YAML front matter for that particular page.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您可能已经意识到需要使用YAML前置内容声明特定页面的内容。
- en: 'Thus, we will first need to add the unique page class to the theme container
    `div` in the front matter:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们首先需要在front matter中的主题容器`div`中添加唯一的页面类：
- en: '[PRE27]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Thereafter, we can safely write custom CSS for that particular page only, as
    follows:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们可以安全地为特定页面编写自定义CSS，如下所示：
- en: '[PRE28]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'But the big question is: where do we add the theme containers and write our
    custom CSS? Surely, not in the Markdown files.'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 但是一个重要的问题是：我们在哪里添加主题容器并编写我们自定义的CSS呢？当然不是在Markdown文件中。
- en: CSS override file structure
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CSS覆盖文件结构
- en: The first step is to create an `override.styl` file in your `.vuepress/` directory.
    The general idea here is to add sitewide constant overrides here, such as color,
    textcolor, and so on.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是在您的`.vuepress/`目录中创建一个`override.styl`文件。这里的一般想法是在这里添加站点范围的常量覆盖，例如颜色，文本颜色等。
- en: 'For example, to make the entire text color black, here is what you can add:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要使整个文本颜色为黑色，您可以添加以下内容：
- en: '[PRE29]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: You can write in normal CSS syntax. But if you so desire, using Stylus is a
    good idea too.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用普通的CSS语法进行编写。但如果您愿意，使用Stylus也是一个好主意。
- en: Stylus is a CSS preprocessor that is famous for making things easier to read
    and write when working with CSS. It supports multiple iterations, nested operators,
    and also does away with the need for colons, braces, and other syntactical decorations.
    Learn more about Stylus at [http://stylus-lang.com/](http://stylus-lang.com/).
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: Stylus是一种CSS预处理器，以使在处理CSS时更容易阅读和编写而闻名。它支持多次迭代，嵌套运算符，并且不需要冒号，大括号和其他语法装饰。在[http://stylus-lang.com/](http://stylus-lang.com/)了解更多关于Stylus的信息。
- en: However, the `override.styl` file is only for Stylus constants. What about your
    own extra styles in CSS?
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，`override.styl`文件仅适用于Stylus常量。那么你自己的额外样式呢？
- en: For that, you need to add another `style.styl` file in `.vuepress/` directory.
    In this file, you can write any CSS style that you wish to. Once again, you can
    use Stylus or normal CSS syntax.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，您需要在`.vuepress/`目录中添加另一个`style.styl`文件。在这个文件中，您可以编写任何您希望的CSS样式。再次，您可以使用Stylus或普通CSS语法。
- en: If you are not very fond of Stylus, bear in mind that you can use other CSS
    preprocessors too, such as LESS or SASS. Remember the build pipeline config values
    that you learned in [Chapter 3](490b74d6-1bb0-4194-9173-c04c98e2b1e9.xhtml), *VuePress
    Development – Preliminary Steps*? You just need to use the correct one for the
    relevant loaders, depending on the CSS preprocessor of your choice.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不太喜欢Stylus，请记住您也可以使用其他CSS预处理器，如LESS或SASS。还记得您在[第3章](490b74d6-1bb0-4194-9173-c04c98e2b1e9.xhtml)中学到的构建流水线配置值，《VuePress开发-初步步骤》吗？您只需要根据您选择的CSS预处理器使用正确的值。
- en: At any point, you can turn to the list of config values (build pipeline) and
    refer to these; this is why this book covered it well in advance in [Chapter 3](490b74d6-1bb0-4194-9173-c04c98e2b1e9.xhtml), *VuePress
    Development – Preliminary Steps*.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何时候，您都可以转到配置值列表（构建流水线）并参考这些内容；这就是为什么本书在[第3章](490b74d6-1bb0-4194-9173-c04c98e2b1e9.xhtml)中提前很好地涵盖了这一点，《VuePress开发-初步步骤》。
- en: Backwards compatibility
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向后兼容性
- en: 'This info is not relevant anymore for newer versions of VuePress. However,
    if you are using an older version of VuePress, you might even be able to use just
    the `override.styl` file and not the second `style.styl` file. Consider the following
    example:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 这些信息对于较新版本的VuePress不再相关。但是，如果您使用的是较旧版本的VuePress，您甚至可以只使用`override.styl`文件而不是第二个`style.styl`文件。考虑以下示例：
- en: '[PRE30]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: While this works in practice for older versions, even then, it is double the
    processing. This is because Stylus requires that all Stylus constants override
    be compiled first, and all user-specified extra CSS be compiled later.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这在实践中对于较旧版本的VuePress有效，但即使是这样，它也是双倍的处理。这是因为Stylus要求首先编译所有Stylus常量覆盖，然后再编译所有用户指定的额外CSS。
- en: If you were to write your styles in the `override.styl` file, it would mean
    that the same file would be duplicated multiple times after being imported once.
    To avoid this, starting with version 0.12.0 and higher, VuePress has split CSS
    processing into `override.styl` and `style.styl` files, as described previously.
    This is the correct way of adding custom CSS styles.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你要在`override.styl`文件中编写你的样式，这意味着同一个文件在被导入一次后会被多次复制。为了避免这种情况，从版本0.12.0开始，VuePress将CSS处理分成了`override.styl`和`style.styl`文件，如前所述。这是添加自定义CSS样式的正确方式。
- en: Learn more about how older VuePress versions worked with the same file in this
    GitHub issue, available at [https://github.com/vuejs/vuepress/issues/637](https://github.com/vuejs/vuepress/issues/637).
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 学习更多关于老版本的VuePress是如何处理相同文件的，可以查看这个GitHub问题，链接在[https://github.com/vuejs/vuepress/issues/637](https://github.com/vuejs/vuepress/issues/637)。
- en: Ejecting the theme
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 弹出主题
- en: 'Sometimes, creating a custom theme from scratch is not required. The reasons
    for this are plenty:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，并不需要从头开始创建一个自定义主题。原因有很多：
- en: It takes a lot of time, especially on a platform like VuePress, which is still
    in its infancy
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这需要很长时间，特别是在像VuePress这样的平台上，它仍处于起步阶段。
- en: Coding a custom theme requires extensive knowledge of JavaScript and can potentially
    defeat the very purpose of using a static site generator, where the goal is to
    save time and effort
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写自定义主题需要对JavaScript有广泛的了解，而且可能会破坏使用静态网站生成器的初衷，即节省时间和精力。
- en: Maintaining a custom theme is not always easy in terms of bug fixes, regular
    updates, and so on
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在错误修复、定期更新等方面，维护自定义主题并不总是容易的。
- en: With that said, you may not be fond of using the default theme either, as it
    does not help your site stand out from the crowd. In such cases, you can choose
    to use custom CSS styles and other such measures, as described previously, to
    give your site a unique look even when using the default theme.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，你可能也不喜欢使用默认主题，因为它不能使你的网站脱颖而出。在这种情况下，你可以选择使用自定义CSS样式和其他措施，如前所述，即使使用默认主题，也可以使你的网站具有独特的外观。
- en: But what if you wish to make grand changes to your default theme? Once you update
    VuePress, any changes that you make to the source code of the default theme will
    be lost.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果你希望对默认主题进行重大更改呢？一旦你更新VuePress，对默认主题源代码所做的任何更改都将丢失。
- en: In these cases, you can make a copy of the default theme, and then edit the
    copy to make changes as if it were a custom theme. This is called ejecting the
    theme.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些情况下，你可以复制默认主题，然后编辑复制品，进行更改，就像它是一个自定义主题一样。这就是弹出主题。
- en: 'To eject your theme, you need to pass the following command:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 要弹出你的主题，你需要输入以下命令：
- en: '[PRE31]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: This command will pull the default theme source code and copy it into the `.vuepress/theme`
    sub-directory. This particular directory will act as new home for your custom
    theme, and you can make changes therein.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将拉取默认主题的源代码，并将其复制到`.vuepress/theme`子目录中。这个特定的目录将作为你自定义主题的新家，你可以在其中进行更改。
- en: Note that once you eject your theme, you will be responsible for its maintenance
    and bug fixes. You can still update VuePress as and when required, but you will
    not get bug fixes or feature updates related to the default theme anymore.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，一旦你弹出你的主题，你将负责它的维护和错误修复。你仍然可以根据需要更新VuePress，但你将不再获得与默认主题相关的错误修复或功能更新。
- en: Make sure you eject your VuePress theme only when you know what you're doing
    and you have a sound knowledge of Vue.js at large. This, of course, is beyond
    the scope of this quick start guide.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 确保只有当你知道自己在做什么，并且对Vue.js有很好的了解时，才弹出你的VuePress主题。当然，这已经超出了这个快速入门指南的范围。
- en: But once you have, indeed, ejected your theme, it is time to turn toward custom
    theme development!
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 但一旦你确实弹出了你的主题，就是时候转向自定义主题开发了！
- en: Custom theme development in VuePress
  id: totrans-237
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VuePress中的自定义主题开发
- en: For creating custom VuePress themes, Vue single file components are used. This
    means you will need functional knowledge of Vue.js in order to create a VuePress
    theme. Perchance you find yourself lacking in terms of time or skills for this,
    it is advisable to customize the default VuePress theme instead, as discussed
    earlier in this chapter.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建自定义VuePress主题，需要使用Vue单文件组件。这意味着您需要对Vue.js有功能性的了解才能创建VuePress主题。如果您发现自己在时间或技能方面缺乏，建议您定制默认的VuePress主题，就像本章前面讨论的那样。
- en: With that said, the first step to create a custom VuePress theme is to create
    a `/theme/` directory in your VuePress `root` folder.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 说到这里，创建自定义VuePress主题的第一步是在VuePress的`根`文件夹中创建一个`/theme/`目录。
- en: Then, in that `.vuepress/theme/` directory, create a `layout.vue` file.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在`.vuepress/theme/`目录中创建一个`layout.vue`文件。
- en: Thereafter, you can proceed with custom theme creation pretty much as you would
    for a custom Vue.js application. The layout options and settings are entirely
    up to you.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以像为自定义Vue.js应用程序一样进行自定义主题创建。布局选项和设置完全取决于您。
- en: 'You can also choose to use a custom VuePress theme from an npm dependency.
    In this case, you will need to make use of the theme config option in your `config.js`
    file. Simply add the following code to your `.vuepress/config.js` file:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以选择从npm依赖项中使用自定义VuePress主题。在这种情况下，您需要在`config.js`文件中使用主题配置选项。只需将以下代码添加到您的`.vuepress/config.js`文件中：
- en: '[PRE32]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Note that you will need to declare and publish the theme on npm beforehand in
    order to use it as a dependency.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您需要事先声明并发布主题到npm，以便将其用作依赖项。
- en: Customizing the default theme
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定制默认主题
- en: The default VuePress theme that we discussed earlier can be customized to make
    a custom theme. However, in this case, you will need to eject the default theme,
    as mentioned previously in this chapter.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前讨论过的默认VuePress主题可以定制为自定义主题。然而，在这种情况下，您需要弹出默认主题，就像本章前面提到的那样。
- en: Following that, you can start tweaking the custom theme yourself—note that any
    future updates or bug fixes for the default theme will not be automatically copied
    over once you eject the theme. You can, however, update VuePress as usual.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 在那之后，您可以开始自己调整自定义主题——请注意，一旦您弹出主题，将不会自动复制默认主题的任何未来更新或错误修复。但您可以像往常一样更新VuePress。
- en: Working with metadata
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理元数据
- en: Every VuePress theme needs metadata to display site details properly, and as
    we have already learned, this is best done using the layout component.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 每个VuePress主题都需要元数据来正确显示站点详细信息，正如我们已经学到的那样，最好使用布局组件来完成这一点。
- en: At this stage, you should familiarize yourself with two Vue.js properties, namely,
    `$page` and `$site`. Both of these are injected into every component.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，您应该熟悉两个Vue.js属性，即`$page`和`$site`。这两个属性都被注入到每个组件中。
- en: Thus, each time the layout component is invoked, the `$site` and `$page` properties
    are invoked too. It is, therefore, a logical idea to place your site's metadata
    to be exposed as `this.$site` and `this.$page`.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，每次调用布局组件时，`$site`和`$page`属性也会被调用。因此，将您站点的元数据放置在`this.$site`和`this.$page`中是一个合乎逻辑的想法。
- en: 'Let''s look at `$site` first. Here is a sample value:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先看看`$site`。这里是一个示例值：
- en: '[PRE33]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: The preceding syntax shows very clearly that `$site` holds value pertaining
    to sitewide metadata.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的语法非常清楚地显示了`$site`保存了与整个站点元数据相关的值。
- en: 'And for `$page`, we have the following syntax:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`$page`，我们有以下语法：
- en: '[PRE34]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: As can be seen, `$page` holds page-specific metadata.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 可以看到，`$page`保存了特定页面的元数据。
- en: For $site values, most of the details are copied from the `.vuepress/config.js`
    file. But the pages value contains an array that comprises of metadata objects
    for each page. These metadata objects are generally lifted from the front matter
    of the concerned pages, or inferred, such as in the case of the page title, which
    can be specified in the front matter or taken from the header tags.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 对于$site的数值，大部分细节都是从`.vuepress/config.js`文件中复制而来。但是pages数值包含一个数组，其中包括每个页面的元数据对象。这些元数据对象通常是从相关页面的前置内容中提取的，或者是推断出来的，比如页面标题，可以在前置内容中指定，也可以从标题标签中获取。
- en: The $page values can often be used to construct customized behavior for themes.
    You can order the pages as per your requirements, too. This is fairly similar
    to customizing the order of a Vue.js application.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: $page的数值经常可以用来构建主题的定制行为。您也可以根据需要对页面进行排序。这与定制Vue.js应用程序的顺序非常相似。
- en: Other possible enhancements
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他可能的增强
- en: The following are some other potential pointers that you can make use of when
    customizing your VuePress theme.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些其他潜在的指针，您可以在自定义VuePress主题时使用。
- en: Note that you will need working knowledge of Vue.js workflow in order to implement
    most of these enhancements.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您需要对Vue.js工作流程有一定的了解，才能实现这些增强。
- en: Application-level enhancements
  id: totrans-263
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用级别的增强
- en: In the root directory of your theme, you can create an `enhanceApp.js` file
    to work with application-level enhancements.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的主题根目录中，您可以创建一个`enhanceApp.js`文件来处理应用级别的增强。
- en: This particular file will export a hook function. Now, in this function, you
    should receive an object value that will contain application-specific details
    or data.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 这个特定的文件将导出一个钩子函数。在这个函数中，您应该接收一个包含特定应用程序细节或数据的对象数值。
- en: You can then very easily make use of the hook to register custom plugins, add
    extensions, register global components, customize other features, and so on.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以非常容易地利用这个钩子来注册自定义插件，添加扩展，注册全局组件，定制其他功能等。
- en: 'The general syntax for this hook function is as follows:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 这个钩子函数的一般语法如下：
- en: '[PRE35]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Sound confusing? All of this is useful only if you are an experienced Vue.js
    developer and are looking to build something customized with VuePress. If you
    just want to get a simple site up and running, you can safely ignore these details.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来很混乱？只有当您是经验丰富的Vue.js开发人员，并且希望使用VuePress构建定制内容时，所有这些才有用。如果您只是想快速建立一个简单的站点，您可以安全地忽略这些细节。
- en: These are all the details that you would need to get started with custom VuePress
    theme development. Once again, a theme in VuePress requires decent knowledge of
    Vue.js, and it is better to experiment a little before entering into production-level
    development.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 这些都是您开始自定义VuePress主题开发所需的所有细节。再次强调，VuePress中的主题需要对Vue.js有相当的了解，最好在进入生产级开发之前先进行一些实验。
- en: Summary
  id: totrans-271
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This marks the end of this particular chapter related to VuePress themes.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 这标志着与VuePress主题相关的这一特定章节的结束。
- en: We have covered quite a lot of ground in this chapter. We now have a very good
    understanding of what the default VuePress theme is, how it can be tweaked, how
    we can change the appearance of the header links, the navbar, the sidebar, and
    other things.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们已经涵盖了相当多的内容。现在我们对默认的VuePress主题有了很好的理解，知道如何调整它，如何改变标题链接、导航栏、侧边栏等外观。
- en: Furthermore, for cases when the aim is to build a documentation site based on
    a GitHub project, we have also learned how to integrate the site with our GitHub
    repository. Beyond that, we learned how to add CSS styles to our theme to change
    the appearance of our site.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，对于基于GitHub项目构建文档站点的情况，我们还学习了如何将站点与我们的GitHub存储库集成。除此之外，我们还学习了如何向我们的主题添加CSS样式来改变站点的外观。
- en: Not only that, we now know how to eject the VuePress default theme and start
    creating a custom theme of our own, though, of course, this will require Vue.js
    application knowledge too.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 不仅如此，我们现在知道如何弹出VuePress的默认主题并开始创建我们自己的自定义主题，当然，这也需要Vue.js应用程序的知识。
- en: Currently, you have an active site on localhost that you built in [Chapter 4](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml),
    *Creating a Site in VuePress*. It is a good idea to experiment with theme changes
    and tweaks on that very site. You have all the syntax and code samples in this
    chapter, but for the sake of clarity, I have refrained from making them use case-particular.
    Thus, you can modify these agnostic code samples to suit your production and website-specific
    needs.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，您在本地主机上已经建立了一个活跃的网站，这是您在[第4章](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml)中创建的*在VuePress中创建网站*。在该网站上尝试主题的更改和调整是一个好主意。本章中有所有的语法和代码示例，但为了清晰起见，我已经避免让它们特定于用例。因此，您可以修改这些通用的代码示例以适应您的生产和网站特定的需求。
- en: Combined with our progress so far, you should now be able to install VuePress,
    tweak the `config.js` file to modify theme and other items, as well as create
    content in Markdown files and upload these.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 结合我们迄今为止的进展，现在您应该能够安装VuePress，调整`config.js`文件以修改主题和其他项目，以及在Markdown文件中创建内容并上传这些内容。
- en: All that is left is to get the website live for the world to see!
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 现在剩下的就是让网站上线，让全世界看到它！
- en: But before that, we need to cover another step of learning—localization and
    internationalization. Therein, we will talk about support for multiple languages
    in VuePress and how and when we can make use of this. The next chapter will deal
    with this, and following that, we will turn our attention toward getting our site
    live on the internet.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 但在此之前，我们需要掌握另一个学习步骤——本地化和国际化。在这方面，我们将讨论VuePress对多种语言的支持，以及我们何时以及如何利用这一点。下一章将涉及到这一点，之后我们将把注意力转向让我们的网站在互联网上发布。
