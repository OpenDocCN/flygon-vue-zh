- en: Using Markdown in VuePress
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在VuePress中使用Markdown
- en: In  [Chapter 4](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml), *Creating a Site
    in VuePress*, we learned how to set up a site or blog using VuePress. If you've
    been following the book so far, you should have an active VuePress installation
    on your local server or machine, with all the variables in place. Plus, you should
    also be aware of the various config values that you can tweak to get the most
    out of VuePress.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第4章]中，我们学习了如何使用VuePress创建站点或博客。如果您迄今为止一直在跟进本书，您应该在本地服务器或计算机上安装了VuePress，并且所有变量都已就位。此外，您还应该了解可以调整的各种配置值，以充分利用VuePress。
- en: Beyond that, you also know how to work with pages, how to set up site structure
    and navigation, apply the default styles, and more.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，您还知道如何处理页面，如何设置站点结构和导航，应用默认样式等等。
- en: In other words, you know how to get a VuePress site up and running, as well
    as how to populate it with content.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，您知道如何启动和运行VuePress网站，以及如何填充内容。
- en: But speaking of content, how to manage and add content in VuePress? The easiest
    and preferred way to get things done in this case is with the use of Markdown.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 但说到内容，如何在VuePress中管理和添加内容？在这种情况下，完成这些工作的最简单和首选方法是使用Markdown。
- en: Markdown is a simple and lightweight markup language that comes with its own
    formatting and syntax. Owing to its simplicity and ease of use, Markdown has risen
    in popularity ever since its birth.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Markdown是一种简单且轻量级的标记语言，具有自己的格式和语法。由于其简单性和易用性，自诞生以来，Markdown已经变得非常流行。
- en: In this chapter, we will learn not just what Markdown is, but how to use it
    in VuePress. We will learn about Markdown syntax, as well as Markdown extensions
    for VuePress, and Markdown's various config variables.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习不仅Markdown是什么，还要学习如何在VuePress中使用它。我们将学习Markdown语法，以及VuePress的Markdown扩展和Markdown的各种配置变量。
- en: By the end of this chapter, you should be able to input content using Markdown
    not only in VuePress, but in any other content management system as well.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本章的学习，您应该能够在VuePress中输入内容，也可以在任何其他内容管理系统中使用Markdown。
- en: 'In this chapter, you will look at the following topics:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习以下主题：
- en: What is Markdown?
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是Markdown？
- en: How is Markdown used?
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Markdown如何使用？
- en: Markdown configuration in VuePress
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VuePress中的Markdown配置
- en: Markdown extensions for VuePress
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VuePress的Markdown扩展
- en: Formatting Markdown content in VuePress
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在VuePress中格式化Markdown内容
- en: Learning Markdown for usage in VuePress
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习在VuePress中使用Markdown
- en: It is highly advisable to gain some basic skills in Markdown formatting, as
    it is soon to become the de facto standard in the world of technical documentation,
    such as in README files for projects in VuePress, or even Vue.js.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议您获得一些Markdown格式化的基本技能，因为它很快将成为技术文档世界的事实标准，例如在VuePress项目的README文件中，甚至是Vue.js中。
- en: What is Markdown?
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是Markdown？
- en: If you have been active in the field of web development, you might already have
    come across Markdown, and may very well be using it in your projects. Naturally,
    owing to its popularity, Markdown does not need a hefty introduction.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在Web开发领域活跃，您可能已经接触过Markdown，并且很可能在项目中使用它。由于其流行，Markdown不需要大量介绍。
- en: With that said, it might be worth the effort to mention Markdown and its advantages
    in passing, so that even readers new to the topic may find it of some merit.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，值得一提的是，可能值得一提Markdown及其优点，以便即使是对这个主题新手的读者也可能会发现它有一些价值。
- en: Simply put, Markdown is a content formatting solution that focuses on ease of
    use and readability. It was created in the year 2004 by John Gruber, in collaboration
    with Aaron Swartz. The goal here was to provide plain text content in a more presentable
    format and, should the need ever arise, optionally convert this into valid HTML.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，Markdown是一种注重易用性和可读性的内容格式化解决方案。它是由John Gruber于2004年与Aaron Swartz合作创建的。这里的目标是以更具表现力的格式提供纯文本内容，并在必要时可选择将其转换为有效的HTML。
- en: Owing to its highly simplified and very presentable nature, Markdown gained
    a good following among the technically capable.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其高度简化和非常具有表现力的特性，Markdown在技术上有能力的人群中获得了良好的追随者。
- en: Markdown comes with a BSD-style license, and is currently available for various
    content management systems in the form of specialized plugins. Even WordPress
    has several Markdown plugins available.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Markdown带有BSD风格的许可证，目前可用于各种内容管理系统的专门插件形式。甚至WordPress也有几个Markdown插件可用。
- en: Additionally, many websites and projects have implemented their own customised
    variants of Markdown. These users include SourceForge, GitHub, reddit, Stack Exchange,
    and many others.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，许多网站和项目都实现了它们自己定制的Markdown变体。这些用户包括SourceForge、GitHub、reddit、Stack Exchange等等。
- en: An example
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个例子
- en: Notice that we talked about readability in the preceding section? Well, Markdown
    focuses heavily on being readable, even in its raw format.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 注意我们在前面的部分谈到了可读性吗？嗯，Markdown非常注重可读性，即使在原始格式中也是如此。
- en: 'Consider the following piece of simple HTML code:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑下面这段简单的HTML代码：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, compare the preceding example with the following code in Markdown:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，将前面的示例与以下Markdown代码进行比较：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Both of the previous code samples will give the same output. This will appear
    as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 前面两个代码示例将产生相同的输出。结果如下：
- en: '![](assets/3d103c42-83a4-47dd-9d16-1fd4f17f99d5.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3d103c42-83a4-47dd-9d16-1fd4f17f99d5.png)'
- en: But, as you can see, the Markdown code is rather clean to look at and easier
    to read than the HTML. It is not overloaded with cumbersome tags and other elements.
    Simple formatting aids mean that you can read the text even in its raw format
    (that is, without the output). This is where the simplicity and beauty of Markdown
    lies! It is highly readable, easy to grasp, and very easy to type.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，正如你所看到的，Markdown代码比HTML更清晰易读。它没有被繁琐的标签和其他元素所淹没。简单的格式化辅助意味着即使在原始格式中（即没有输出的情况下），你也可以阅读文本。这就是Markdown的简单和美丽之处！它非常易读，易于理解，也很容易输入。
- en: You can read more about the features and settings of Markdown on the official
    website, available at [https://daringfireball.net/projects/markdown](https://daringfireball.net/projects/markdown).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在官方网站上阅读有关Markdown的功能和设置的更多信息，网址为[https://daringfireball.net/projects/markdown](https://daringfireball.net/projects/markdown)。
- en: Naturally, many static site content management systems, such as VuePress, tend
    to favor Markdown for these very reasons. As a result, it is a good idea to try
    to grasp some of the basic formatting aids in Markdown in order to get the most
    out of VuePress.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 自然地，许多静态站点内容管理系统，如VuePress，出于这些原因倾向于使用Markdown。因此，尝试掌握Markdown中的一些基本格式化辅助是很有必要的，以便充分利用VuePress。
- en: The markdown-it parser
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: markdown-it解析器
- en: Now that we have learned what Markdown is and what advantages it can offer us,
    it is time to get started on learning about Markdown usage and variations in VuePress.
    However, before we get to the VuePress environment, we must educate ourselves
    about a Markdown parser named markdown-it.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了Markdown是什么，以及它可以为我们提供什么优势，是时候开始学习VuePress中Markdown的用法和变化了。然而，在进入VuePress环境之前，我们必须先了解一个名为markdown-it的Markdown解析器。
- en: What does a Markdown parser do?
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Markdown解析器是做什么的？
- en: Its simplest task is to analyze and break down Markdown statements into syntactical
    components for easier processing.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 它最简单的任务是分析并将Markdown语句分解为易于处理的句法组件。
- en: markdown-it does its job fairly well and is rather easy to use. It comes with
    its own set of custom extensions, multiple plugins, and does not slow down your
    environment at all. Most of the Markdown extensions and config variables in VuePress
    work well with markdown-it, and some can be used only via markdown-it.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: markdown-it的工作相当出色，而且非常容易使用。它带有自己一套自定义扩展，多个插件，并且不会减慢你的环境。VuePress中的大多数Markdown扩展和配置变量都与markdown-it很好地配合，有些甚至只能通过markdown-it来使用。
- en: 'In order to use markdown-it, you first need to install it. It can be done via
    npm, as is the case with VuePress as well (you have learned about npm installation
    in [Chapter 1](4e1526aa-d994-42d8-9a18-12374ba932a0.xhtml), *Introducing Static
    Site Generators and VuePress*):'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用markdown-it，你首先需要安装它。可以通过npm来完成，就像VuePress一样（你已经在[第1章](4e1526aa-d994-42d8-9a18-12374ba932a0.xhtml)
    *介绍静态站点生成器和VuePress*中学习了npm安装）：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Following this, you can load its plugins and make use of it as per your needs.
    To learn more about the markdown-it parser, you can check out its GitHub repository
    at [https://github.com/markdown-it/markdown-it](https://github.com/markdown-it/markdown-it).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你可以加载它的插件并根据需要使用它。要了解更多关于markdown-it解析器的信息，你可以查看其GitHub存储库[https://github.com/markdown-it/markdown-it](https://github.com/markdown-it/markdown-it)。
- en: 'Alternatively, there is also a working demo available at [https://markdown-it.github.io/](https://markdown-it.github.io/), which
    can be seen in the following screenshot:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，还有一个可用的演示可以在[https://markdown-it.github.io/](https://markdown-it.github.io/)中查看，如下截图所示：
- en: '![](assets/b4eeb097-6bb9-4457-b347-e5bb32d366ae.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b4eeb097-6bb9-4457-b347-e5bb32d366ae.png)'
- en: VuePress uses markdown-it as the default Markdown parser or renderer. Naturally,
    you can make use not just of markdown-it, but also its custom extensions and plugins
    within VuePress.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: VuePress使用markdown-it作为默认的Markdown解析器或渲染器。当然，你不仅可以使用markdown-it，还可以在VuePress中使用它的自定义扩展和插件。
- en: In order to further customize markdown-it in VuePress, it might be a good idea
    to modify your `.vuepress/config.js` file to add the Markdown instance and modify
    it therein. We have already covered the contents and details of the `.vuepress/config.js`
    file in previous chapters. Note that you can refer to the markdown-it documentation
    for further details related to various plugins, and how to reference them for
    our usage.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在VuePress中进一步自定义markdown-it，修改`.vuepress/config.js`文件以添加Markdown实例并在其中修改可能是个好主意。我们已经在之前的章节中介绍了`.vuepress/config.js`文件的内容和细节。请注意，你可以参考markdown-it文档以获取有关各种插件的更多详细信息，以及如何引用它们以供我们使用。
- en: 'Here is how your sample code should look when added to the `config.js` file:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当添加到`config.js`文件时，你的示例代码应该如下所示：
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the last part of this code, be sure to add the relevant name of the markdown-it
    extension that you wish to use. Note that we will be covering the markdown-it-anchor
    and markdown-it-toc extensions in this chapter itself to help you better understand
    how to reference them and what output to expect.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码的最后部分，请确保添加你希望使用的markdown-it扩展的相关名称。请注意，我们将在本章中介绍markdown-it-anchor和markdown-it-toc扩展，以帮助你更好地理解如何引用它们以及预期的输出是什么。
- en: Now that you have learned what Markdown is, what the markdown-it parser is,
    and how VuePress uses it as the default renderer for Markdown, it is safe to turn
    to the Markdown configuration variables and values in VuePress. Following that,
    we will turn our attention to VuePress usage and handling of Markdown.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了Markdown是什么，markdown-it解析器是什么，以及VuePress如何将其作为Markdown的默认渲染器，现在可以安全地转向VuePress中的Markdown配置变量和值。之后，我们将关注VuePress对Markdown的使用和处理。
- en: Markdown config reference
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Markdown配置参考
- en: At this point, we will first focus on the various configuration-related entities
    for Markdown in VuePress. Note that these are VuePress-specific and may not hold
    true for other static site generators.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们首先将关注VuePress中与Markdown相关的各种配置实体。请注意，这些是VuePress特定的，可能不适用于其他静态站点生成器。
- en: We have already covered basic config values in [Chapter 3](490b74d6-1bb0-4194-9173-c04c98e2b1e9.xhtml),
    *VuePress Development – Preliminary Steps*. Beyond that, we will be turning to
    theme-specific config values and their uses in the subsequent chapter that deals
    with custom themes.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在[第3章](490b74d6-1bb0-4194-9173-c04c98e2b1e9.xhtml)中涵盖了基本的配置值，*VuePress开发-初步步骤*。除此之外，我们将转向特定主题配置值及其在处理自定义主题的后续章节中的用途。
- en: For now, we will be focusing only on those values and variables that pertain
    to Markdown in the VuePress configuration. As you progress with VuePress in your
    projects, you can make use of these config reference entities to better manage
    your content in Markdown, and make sure that it is formatted and presented just
    the way you want it to be.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们只会关注VuePress配置中与Markdown相关的值和变量。随着在项目中使用VuePress的进展，你可以利用这些配置参考实体更好地管理Markdown中的内容，并确保它被格式化和呈现成你想要的样子。
- en: markdown.slugify
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: markdown.slugify
- en: This is a very important function that you should, by all means, be aware of.
    In VuePress, markdown.slugify can be used to transform header text into slugs.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常重要的功能，你应该尽一切可能了解它。在VuePress中，markdown.slugify可以用来将标题文本转换为slug。
- en: Thus, you can input the header text in Markdown, and then use this function
    to generate a slug (that is, a URL or permalink) on the basis of that header text.
    Naturally, this means it is used mostly for anchor links, tables of contents,
    and other related material.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，你可以在Markdown中输入标题文本，然后使用这个函数来生成一个slug（即URL或永久链接）。当然，这意味着它主要用于锚链接、目录和其他相关材料。
- en: 'Since `markdown.slugify` is of the function type, there is no value definition
    for it in terms of datatypes. Instead, it has a function definition.  Let''s take
    a look at its general syntax in closer detail to further understand its functioning:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 由于`markdown.slugify`是函数类型，因此在数据类型方面没有值定义。相反，它有一个函数定义。让我们更仔细地看一下它的一般语法，以进一步理解它的功能：
- en: '[PRE4]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You can also browse the same source code at [https://github.com/vuejs/vuepress/blob/master/lib/markdown/slugify.js](https://github.com/vuejs/vuepress/blob/master/lib/markdown/slugify.js).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在[https://github.com/vuejs/vuepress/blob/master/lib/markdown/slugify.js](https://github.com/vuejs/vuepress/blob/master/lib/markdown/slugify.js)浏览相同的源代码。
- en: Now, did you notice what this function is doing? It takes the header text, removes
    its space characters so that they can be replaced by hyphens (`-`), then further
    removes any prefixes and trailing characters, and then, lastly, converts the header
    text to lowercase.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你注意到这个函数在做什么了吗？它获取标题文本，移除其中的空格字符，然后用连字符（`-`）替换，接着移除任何前缀和尾随字符，最后将标题文本转换为小写。
- en: For instance, if our header text is `Header SamPLE`, it will convert it to `header-sample`
    for the slug. Naturally, because the slug is part of the URL, it cannot have certain
    characters and spaces in between. `markdown.slugify` ensures that this is the
    case.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们的标题文本是`Header SamPLE`，它会将其转换为`header-sample`作为slug。当然，因为slug是URL的一部分，它不能包含特定字符和空格。`markdown.slugify`确保了这一点。
- en: markdown.externalLinks
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: markdown.externalLinks
- en: The `markdown.externalLinks` is used for adding external links to content (as
    is obvious from the name). By default, it pairs its values within the `<a>` tags
    and opens the external links in a new window.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '`markdown.externalLinks`用于向内容添加外部链接（从名称上就很明显）。默认情况下，它将其值配对在`<a>`标签中，并在新窗口中打开外部链接。'
- en: 'The `markdown.externalLinks` is of the object type and its default syntax is
    as follows:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`markdown.externalLinks`是对象类型，其默认语法如下：'
- en: '[PRE5]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If you wish to not open the external link in a new window (for SEO reasons,
    or something similar), you can eliminate the `target:'_blank'` part, much like
    you would in any other HTML document.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望不在新窗口中打开外部链接（出于SEO原因或类似原因），您可以删除`target:'_blank'`部分，就像您在任何其他HTML文档中所做的那样。
- en: markdown.config
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: markdown.config
- en: markdown.config is of the function type and its default value, therefore, is
    undefined.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: markdown.config是函数类型，其默认值因此为未定义。
- en: It is used to modify the default configuration, and also add additional functionality
    or external plugins to the markdown-it Markdown parser that we discussed in the
    previous section.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 它用于修改默认配置，并向我们在上一节中讨论的markdown-it Markdown解析器添加附加功能或外部插件。
- en: 'The following is a sample demonstrating its use:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个演示其用法的示例：
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In the preceding example, markdown.config adds the requirement for an external
    entity named markdown-it-something, and can then be used to implement the added
    features of the same external entity.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，markdown.config添加了对名为markdown-it-something的外部实体的要求，然后可以用于实现相同外部实体的附加功能。
- en: markdown.toc
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: markdown.toc
- en: The `markdown.toc` provides options for adding a table of contents to our website.
    It is especially useful if you are planning a site that will require such a table
    of contents, for example, a knowledge base site or the chapter layout of an online
    novel or book.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`markdown.toc`提供了向我们的网站添加目录的选项。如果您计划创建一个需要这样的目录的网站，比如知识库网站或在线小说或书籍的章节布局，它尤其有用。'
- en: 'It is of the object type and its default syntax is as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这是对象类型，其默认语法如下：
- en: '[PRE7]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: It is worth noting that `markdown.toc`, in reality, works with the markdown-it-table-of-contents
    plugin. This particular plugin provides a table of contents layout for the markdown-it
    plugin. You can learn more about it at [https://github.com/Oktavilla/markdown-it-table-of-contents](https://github.com/Oktavilla/markdown-it-table-of-contents).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，`markdown.toc`实际上与markdown-it-table-of-contents插件一起使用。这个特定的插件为markdown-it插件提供了一个目录布局。您可以在[https://github.com/Oktavilla/markdown-it-table-of-contents](https://github.com/Oktavilla/markdown-it-table-of-contents)上了解更多信息。
- en: markdown.anchor
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: markdown.anchor
- en: 'The `markdown.anchor` is of the object type and its general syntax is as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`markdown.anchor`是对象类型，其一般语法如下：'
- en: '[PRE8]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: It provides options for adding header anchors to your content.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 它提供了向您的内容添加标题锚的选项。
- en: Note that this should not be confused with header slugs or IDs that are added
    by `markdown.slugify`, as discussed previously. Instead, markdown.anchor lets
    you add anchor links within your content.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这不应与`markdown.slugify`添加的标题标识符或ID混淆，如前所讨论的那样。相反，markdown.anchor允许您在内容中添加锚链接。
- en: It works in assonance with the markdown-it-anchor plugin that adds header anchor
    functionality to markdown-it. You can learn more about this plugin on its GitHub
    page at [https://github.com/valeriangalliat/markdown-it-anchor](https://github.com/valeriangalliat/markdown-it-anchor).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 它与markdown-it-anchor插件协同工作，该插件为markdown-it添加了标题锚功能。您可以在其GitHub页面上了解有关此插件的更多信息[https://github.com/valeriangalliat/markdown-it-anchor](https://github.com/valeriangalliat/markdown-it-anchor)。
- en: markdown.lineNumbers
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: markdown.lineNumbers
- en: Whenever you add content such as code blocks to your VuePress site, you can
    optionally choose whether or not to show line numbers next to code blocks. For
    that purpose, you can make use of `markdown.lineNumbers` config entity.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 每当您向VuePress网站添加诸如代码块之类的内容时，您可以选择是否在代码块旁边显示行号。为此，您可以使用`markdown.lineNumbers`配置实体。
- en: The `markdown.lineNumbers` is of the `boolean` type, as it accepts a simple
    `true` or `false` value for showing (or not showing) line numbers.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '`markdown.lineNumbers`是`boolean`类型，它接受简单的`true`或`false`值来显示（或不显示）行号。'
- en: For instance, when the `markdown.lineNumbers` config value is set to true, code
    inputs will have line numbers.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当`markdown.lineNumbers`配置值设置为true时，代码输入将具有行号。
- en: 'Here is how to do it:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是如何做到的：
- en: '[PRE9]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'With the config value set as such, any code inputs will have line numbers appended
    to them. For example, if we were to show the same code in the page as preformatted
    content, here is how it will appear:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 通过设置配置值，任何代码输入都将附加行号。例如，如果我们在页面中显示相同的代码作为预格式化内容，它将如何显示：
- en: '![](assets/6a450d13-1187-430e-861a-d8de7db545d6.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/6a450d13-1187-430e-861a-d8de7db545d6.png)'
- en: Now that we have covered almost all the relevant Markdown config terms, it is
    time to turn our attention toward Markdown extensions as used in VuePress.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经涵盖了几乎所有相关的Markdown配置术语，是时候把注意力转向VuePress中使用的Markdown扩展了。
- en: Markdown extensions in VuePress
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VuePress中的Markdown扩展
- en: When we speak of Markdown extensions in VuePress, we are referring to those
    Markdown extensions that are available for immediate use within VuePress. You
    have seen how Markdown formatting can be used in everyday usage of VuePress in
    [Chapter 4](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml), *Creating a Site in VuePress*.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论VuePress中的Markdown扩展时，我们指的是那些可以立即在VuePress中使用的Markdown扩展。您已经看到了Markdown格式如何在VuePress的日常使用中使用，在[第4章](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml)中，*在VuePress中创建站点*。
- en: Header anchors
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标题锚点
- en: All headers in VuePress automatically get anchor links applied to them for easier
    navigation. This is mainly and primarily to facilitate navigation across site
    content, as VuePress is primarily a documentation management tool and not really
    a business site solution. Navigating by means of headers is the easiest way to
    manage content in this case.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: VuePress中的所有标题都会自动应用锚链接，以便更轻松地浏览站点内容。这主要是为了方便浏览站点内容，因为VuePress主要是一个文档管理工具，而不是一个商业站点解决方案。在这种情况下，通过标题导航是管理内容的最简单方式。
- en: If you wish to configure or modify the anchor settings, you can make use of
    the `markdown.anchor` config option, as discussed in a previous section of this
    chapter.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望配置或修改锚点设置，可以使用`markdown.anchor`配置选项，如本章的前一节所讨论的那样。
- en: Links
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 链接
- en: In VuePress, links can either be internal or external.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在VuePress中，链接可以是内部的或外部的。
- en: As the name suggests, internal links point to local content, whereas external
    links point to content of other websites and projects.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 顾名思义，内部链接指向本地内容，而外部链接指向其他网站和项目的内容。
- en: Let's discuss each one separately in the following section.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在下一节中分别讨论每一个。
- en: External links
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 外部链接
- en: All external and outbound links to third-party websites automatically get the
    `target="_blank" rel="noopener noreferrer"` tag attached to them. This means that
    all external links tend to open in new windows (or browser tabs). You can modify
    this setting using the `markdown.externalLinks` config option, as discussed in
    the previous section of the chapter.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 所有指向第三方网站的外部和出站链接都会自动附加`target="_blank" rel="noopener noreferrer"`标签。这意味着所有外部链接都会在新窗口（或浏览器标签）中打开。您可以使用`markdown.externalLinks`配置选项来修改此设置，如本章的前一节所讨论的那样。
- en: Internal links
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内部链接
- en: At this point, it is worth remembering that VuePress generates **single page
    applications** (**SPAs**) for easier and faster navigation across site content.
    Now, in order to make SPA navigation possible, all local or inbound links need
    to be converted to router-links.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，值得记住的是VuePress生成**单页面应用程序**（**SPA**）以便更轻松、更快速地浏览站点内容。现在，为了实现SPA导航，所有本地或入站链接都需要转换为路由链接。
- en: VuePress accomplishes this by converting all internal links ending in Markdown
    or HTML formats into `<router-link>`.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: VuePress通过将所有以Markdown或HTML格式结尾的内部链接转换为`<router-link>`来实现这一点。
- en: We learned in the previous chapter that every sub-directory in VuePress, unless
    it is not publicly accessible, must have a `README.md` file that will, in turn,
    be converted into an `index.html` file by VuePress before being served in the
    browser.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在上一章中学到，VuePress中的每个子目录，除非不是公开访问的，必须有一个`README.md`文件，然后VuePress会将其转换为`index.html`文件，然后在浏览器中提供服务。
- en: 'Naturally, when adding an internal link to your content, you need to specify
    the proper file extension within the file path, otherwise you will get a 404 error.
    Thus, the following considerations must be borne in mind when adding internal
    or local links in VuePress:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 当在内容中添加内部链接时，您需要在文件路径中指定正确的文件扩展名，否则将会得到404错误。因此，在VuePress中添加内部或本地链接时，必须牢记以下考虑事项：
- en: The `.html` or `.md`—the proper file extension must be appended.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须附加`.html`或`.md`——正确的文件扩展名。
- en: When writing the relative path to a file or resource, the trailing slash `/`
    is mandatory. In the absence of the trailing slash, VuePress fails to follow the
    relative path and will give a 404 error. Thus, `/mypath` is incorrect, whereas
    `/mypath/` is correct.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在编写文件或资源的相对路径时，必须添加尾随斜杠`/`。如果没有尾随斜杠，VuePress将无法遵循相对路径，并将给出404错误。因此，`/mypath`是不正确的，而`/mypath/`是正确的。
- en: All path specifications are case-sensitive in nature.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有路径规范都是区分大小写的。
- en: 'Now, to better comprehend these requirements, let''s take an example. Consider
    the following directory structure:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了更好地理解这些要求，让我们举个例子。考虑以下目录结构：
- en: '![](assets/b23b3e6e-45c2-4554-8132-c81992ac1209.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b23b3e6e-45c2-4554-8132-c81992ac1209.png)'
- en: 'The following table shows how the linking syntax for this structure should
    work:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了此结构的链接语法应如何工作：
- en: '| **RELATIVE PATH** | **MARKDOWN** | **EXPLANATION** |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| **相对路径** | **Markdown** | **解释** |'
- en: '| `/` | `[Home]` | The `README` file located at `root` folder |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| `/` | `[首页]` | 位于`根`文件夹中的`README`文件 |'
- en: '| `/testx/` | `[testx]` | The `README` file located inside `testx` sub-directory.
    |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| `/testx/` | `[testx]` | 位于`testx`子目录中的`README`文件。|'
- en: '| `/testx/filea.md` | `[testx - filea]` | The `filea.md` file inside `testx`
    sub-dir; notice the `.md` extension. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| `/testx/filea.md` | `[testx - filea]` | `testx`子目录中的`filea.md`文件；注意`.md`扩展名。|'
- en: '| `/testx/fileb.html` | `[testx - fileb]` |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| `/testx/fileb.html` | `[testx - fileb]` |'
- en: '&#124; The `fileb.md` file inside `testx` sub-dir; notice the `.html` extension,
    it still points to the `.md` file.  &#124;'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; `fileb.md`文件位于`testx`子目录中；注意`.html`扩展名，它仍然指向`.md`文件。 &#124;'
- en: '&#124;  &#124;'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124;  &#124;'
- en: '|'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: In this example, we can clearly see that the `.md` extension is automatically
    converted to parsed HTML by VuePress when rendering the page.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们可以清楚地看到，当渲染页面时，VuePress会自动将`.md`扩展名转换为解析的HTML。
- en: Emoji
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表情符号
- en: Considering the fact that emoji have become rather popular, there should be
    a way to properly format and include them in your content, should you so desire.
    WordPress has even integrated its own custom WordPress emoji that you can use
    in your content, or, alternatively, remove outright and rely instead on browser
    emoji.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到表情符号已经变得相当流行，应该有一种方法来正确格式化并在您的内容中包含它们，如果您愿意的话。WordPress甚至已经集成了自己的自定义WordPress表情符号，您可以在您的内容中使用，或者直接删除并依赖浏览器表情符号。
- en: However, unlike WordPress, VuePress focuses more on being lightweight and swift.
    Therefore, shipping with custom emoji sets in its core is of little sense in VuePress.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，与WordPress不同，VuePress更注重轻量和迅速。因此，在VuePress的核心中配备自定义表情符号集是没有意义的。
- en: 'However, you can easily make use of the markdown-it-emoji plugin that comes
    loaded with over 1,000 emoji for you to choose from. Here is a sample:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，您可以轻松地使用markdown-it-emoji插件，该插件预装了超过1,000个表情符号供您选择。这是一个示例：
- en: '![](assets/9b5d102f-74c0-43e1-aa6b-b0b71c3ff4ce.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9b5d102f-74c0-43e1-aa6b-b0b71c3ff4ce.png)'
- en: 'You can choose to go with the full version that offers all the GitHub-support
    emoji, or the light version that only offers the Unicode emoji. This particular
    plugin also supports character-based emoticons, such as `:-)` and others. It works
    with the markdown-it parser and can be installed via npm as follows:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择使用提供所有GitHub支持表情符号的完整版本，或者只提供Unicode表情符号的轻量级版本。此特定插件还支持基于字符的表情符号，例如`:-)`等。它与markdown-it解析器一起工作，并可以通过npm安装，如下所示：
- en: '[PRE10]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Of course, our primary focus here is how to use markdown-it-emoji in VuePress.
    To learn more about the plugin itself, you can find its GitHub page at [https://github.com/markdown-it/markdown-it-emoji](https://github.com/markdown-it/markdown-it-emoji).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们这里的主要重点是如何在VuePress中使用markdown-it-emoji。要了解有关插件本身的更多信息，您可以在其GitHub页面上找到：[https://github.com/markdown-it/markdown-it-emoji](https://github.com/markdown-it/markdown-it-emoji)。
- en: 'In VuePress, you simply need to specify the emoji you require by typing its
    name inside two colons. For instance, to add a skull, an alien, a screaming face,
    and a sunglasses emoji on each successive line, try the following code:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在VuePress中，您只需在两个冒号内键入所需的表情符号名称即可。例如，要在每个连续行上添加一个头骨、一个外星人、一个尖叫的脸和一个太阳镜表情符号，请尝试以下代码：
- en: '[PRE11]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'And the final output in browser will be the following:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中的最终输出将如下所示：
- en: '![](assets/8ab31bad-2450-42cc-9c9e-7781070cd70c.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8ab31bad-2450-42cc-9c9e-7781070cd70c.png)'
- en: Of course, the final actual appearance of the emoji may also vary depending
    on your operating system and browser version. At times, certain web browsers tend
    to replace the default web emoji with their own variants.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，表情符号的最终实际外观也可能会因您的操作系统和浏览器版本而有所不同。有时，某些网络浏览器倾向于用自己的变体替换默认的网络表情符号。
- en: Adding tables
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加表格
- en: There are two major types of tables that VuePress supports in Markdown right
    out of the box.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: VuePress在Markdown中原生支持两种主要类型的表格。
- en: 'The first one, obviously, is a table of contents. This is not a pure table,
    in the sense there are hardly any rows or columns, but is called a table nonetheless,
    so let’s keep it that way. The syntax here is simple, as follows:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个显然是目录。这不是一个纯粹的表格，因为几乎没有行或列，但无论如何都被称为表格，所以让我们保持这样。语法很简单，如下所示：
- en: '[PRE12]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This will automatically generate a table of contents on the basis of the headers
    in your content. You can customize it further by using the `markdown.toc` config
    option, as described previously in this chapter.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这将根据内容中的标题自动生成目录。您可以进一步通过使用`markdown.toc`配置选项进行自定义，如本章前面所述。
- en: The second type of table in VuePress resembles the table layout on GitHub. In
    fact, it is called a GitHub style table.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: VuePress中的第二种表格类型类似于GitHub上的表格布局。实际上，它被称为GitHub风格表格。
- en: 'Let''s assume we are creating a simple table outlining each country''s capital,
    tourist attraction, popular sport, and currency. You can enter the formatting
    and details in Markdown as follows:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们正在创建一个简单的表格，概述每个国家的首都、旅游景点、流行运动和货币。您可以按照以下Markdown格式和详细信息输入：
- en: '![](assets/6af5c01f-1e35-4d4c-8b1a-cbe9973bfe07.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/6af5c01f-1e35-4d4c-8b1a-cbe9973bfe07.png)'
- en: 'And the output will be as follows:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![](assets/f51a2fbc-33c6-41f4-994d-0fba4d388939.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f51a2fbc-33c6-41f4-994d-0fba4d388939.png)'
- en: That's all that there is to tables in VuePress. The tables are automatically
    formatted, and alternate rows are highlighted, as well, to give the table a more
    presentable appearance.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是VuePress中的表格。表格会自动格式化，并且交替行也会高亮显示，以使表格看起来更加整洁。
- en: Front matter
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前置内容
- en: The concept of front matter by means of YAML data serialization was first popularized
    by Jekyll, another very popular and versatile static site generator that we discussed
    briefly in [Chapter 1](4e1526aa-d994-42d8-9a18-12374ba932a0.xhtml), *Introducing
    Static Site Generators and VuePress*.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 通过YAML数据序列化的前置内容概念首先由Jekyll引入，Jekyll是另一个非常流行和多功能的静态站点生成器，我们在[第1章](4e1526aa-d994-42d8-9a18-12374ba932a0.xhtml)中简要讨论过，*介绍静态站点生成器和VuePress*。
- en: Put simply, front matter contents are placed at the start of the file in between
    triple dashes. Inside that content, you can specify custom and predefined variables
    to provide further info about your project. Such variables will then be available
    to you for use throughout all pages, as well as custom components.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，前置内容被放置在文件的开头和三虚线之间。在该内容中，您可以指定自定义和预定义变量，以提供有关您的项目的更多信息。这些变量将随后可供您在所有页面和自定义组件中使用。
- en: Discussing all of the variables associated with front matter is far beyond the
    scope of this quick start guide. However, you can check out more info on this
    topic on the website of the Jekyll project at [https://jekyllrb.com/docs/frontmatter/](https://jekyllrb.com/docs/frontmatter/).
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论与前置内容相关的所有变量远远超出了这个快速入门指南的范围。但是，您可以在Jekyll项目的网站上查看有关此主题的更多信息：[https://jekyllrb.com/docs/frontmatter/](https://jekyllrb.com/docs/frontmatter/)。
- en: Now, let's return to VuePress.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们回到VuePress。
- en: In VuePress, YAML front matter is supported out of the box without the use of
    any custom imports or additional extensions. Thus, whatever you specify between
    the triple-dashed lines will be available throughout the entire page.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在VuePress中，YAML前置内容得到了原生支持，无需使用任何自定义导入或额外扩展。因此，您在三虚线之间指定的任何内容将在整个页面中都可用。
- en: 'Let''s understand it with the help of an example. Consider the following front
    matter code:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个例子来理解它。考虑以下前置内容代码：
- en: '[PRE13]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Now, in the preceding example, the title and lang variables are specified for
    the entire page anyway. You can, then, add custom meta tags, such as site description
    and SEO-related keywords, that will in turn be applicable to the entire page.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在上面的例子中，标题和语言变量已经为整个页面指定了。然后，您可以添加自定义的元标签，例如站点描述和与SEO相关的关键字，这些将适用于整个页面。
- en: 'Just in case YAML is not your preferred type of scripting solution, you can
    alternatively opt for other options. TOML is supported too—to use it, you just
    need to specify that you prefer TOML, as follows:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果YAML不是您首选的脚本解决方案，您也可以选择其他选项。TOML也得到了支持——要使用它，您只需指定您偏好TOML，如下所示：
- en: '[PRE14]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'However, more often than not, many JavaScript coders would prefer JSON. In
    this case, you need to follow the standard JSON format for front matter; that
    is, using curly braces and quotes, as shown in the following example:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，很多JavaScript程序员更喜欢JSON。在这种情况下，您需要遵循标准的JSON格式来处理前置内容；也就是说，使用花括号和引号，就像下面的例子所示：
- en: '[PRE15]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Front matter specification is fairly common in the world of static site generators,
    and anyone who has had experience of working with one such generator is almost
    certain to already be aware of the role of front matter.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 前置内容规范在静态站点生成器的世界中非常常见，任何有过使用这类生成器经验的人几乎肯定已经了解了前置内容的作用。
- en: Custom formatting options
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义格式选项
- en: There are some other lesser-used formatting options in Markdown that VuePress
    natively supports. These will be discussed in the following section.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在Markdown中，VuePress原生支持一些其他不太常用的格式选项。这些将在下一节中讨论。
- en: Highlighting in code
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码中的突出显示
- en: 'You can optionally choose to highlight lines in code so as to make the output
    more presentable. Here is some sample code:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择在代码中突出显示行，以使输出更具可读性。以下是一些示例代码：
- en: '[PRE16]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'And the output is as follows:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![](assets/fadc0b9f-3bf7-446c-b3e6-f9f613984c08.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fadc0b9f-3bf7-446c-b3e6-f9f613984c08.png)'
- en: Customized containers
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义容器
- en: Sometimes, you may wish to put emphasis on certain pieces of your content, such
    as warnings, notices, and tips. You can easily highlight them in VuePress so that
    the user's attention is drawn straight to the content at hand.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，您可能希望强调内容中的某些部分，比如警告、通知和提示。您可以在VuePress中轻松突出它们，以便用户的注意力直接被吸引到手头的内容上。
- en: This means that you first need to specify the given content as a tip, warning,
    or likewise. Thereafter, VuePress will generate the required notice or tip with
    a given colored container.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着您首先需要将给定的内容指定为提示、警告或类似内容。之后，VuePress将生成所需的通知或提示，并带有给定的彩色容器。
- en: The final actual appearance may vary, depending on your own configuration, but
    this presentation is fairly comparable to GitHub-flavored Markdown, and if you
    have some experience of formatting `README` and other files in Markdown in GitHub,
    you may have already come across such customized content containers.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的实际外观可能会有所不同，取决于您自己的配置，但这个呈现方式与GitHub风格的Markdown相当类似，如果您在GitHub中有一些关于格式化`README`和其他Markdown文件的经验，您可能已经遇到过这样的自定义内容容器。
- en: 'Here is how you can do it:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是您可以这样做的方法：
- en: '[PRE17]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'And the output appears as follows:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![](assets/d8f145d2-cfc5-4090-bd2a-b0a8e984f649.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d8f145d2-cfc5-4090-bd2a-b0a8e984f649.png)'
- en: 'You can, optionally, tweak the title of each container too, as shown here:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以选择调整每个容器的标题，就像这里所示：
- en: '[PRE18]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'And once again, the output will show the following:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，输出将显示如下：
- en: '![](assets/7baca20a-08f2-4360-ab20-26b87a22f518.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7baca20a-08f2-4360-ab20-26b87a22f518.png)'
- en: Importing code snippets
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入代码片段
- en: 'If you have existing files containing code, you can import code snippets from
    them into your VuePress project. The syntax to do this is as follows:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有包含代码的现有文件，您可以将代码片段从中导入到您的VuePress项目中。这样做的语法如下：
- en: '[PRE19]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: However, you need to bear in mind that you cannot use a path alias in webpack,
    as all imports of code snippets must generally be executed before webpack is compiled.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，您需要记住，您不能在webpack中使用路径别名，因为所有代码片段的导入通常必须在webpack编译之前执行。
- en: Remember that importing of code snippets is an experimental feature and is still
    in beta. It may at times not work as expected.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，代码片段的导入是一个实验性功能，仍处于测试阶段。它有时可能不按预期工作。
- en: 'The code snippets import function supports line highlighting, as discussed
    earlier in this chapter. In this case, the syntax will become the following:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 代码片段导入函数支持行高亮，正如本章前面讨论的那样。在这种情况下，语法将变成以下形式：
- en: '[PRE20]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The default value for `@` will be `process.cwd()`.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '`@`的默认值将是`process.cwd()`。'
- en: Summary
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This brings us to the end of this chapter.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是本章的结束。
- en: In this chapter, we learned what Markdown is and what makes it so popular, such
    as its simplicity and readability, as well as ease of use. Beyond that, we were
    introduced to markdown-it parser, a very common and popular entity for rendering
    Markdown in static site generation tools such as VuePress.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了Markdown是什么，以及它为什么如此受欢迎，比如它的简单性和可读性，以及易用性。除此之外，我们还介绍了markdown-it解析器，这是在静态站点生成工具中渲染Markdown的非常常见和流行的实体，比如VuePress。
- en: We have also covered VuePress config values for Markdown. Furthermore, we learned
    about the several Markdown extensions that we have available for use in VuePress.
    This, of course, is not an exhaustive list. Considering the fact that VuePress
    is under active development, you can expect newer values and extensions to be
    added eventually.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还介绍了用于Markdown的VuePress配置值。此外，我们了解了在VuePress中可用的几种Markdown扩展。当然，这并不是一个详尽的列表。考虑到VuePress正在积极开发中，您可以预期最终会添加新的值和扩展。
- en: With that said, having finished this chapter, you should by now have a good
    enough understanding of Markdown usage in VuePress and should be able to add `.md`
    files, format them in the way you want your content to be presented, and save
    them so that VuePress can render them in HTML and put together an SPA.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，在完成本章后，您现在应该对VuePress中的Markdown使用有足够的理解，并且应该能够添加`.md`文件，按照您希望呈现内容的方式对其进行格式化，并保存它们，以便VuePress可以将它们呈现为HTML并组合成单页应用程序。
- en: Speaking of SPAs, we now need to cover one highly important aspect of web development—templating
    and theming!
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 说到单页应用程序（SPAs），我们现在需要涵盖网页开发中一个非常重要的方面——模板和主题！
- en: In the previous chapter, we learned about the default VuePress theme and what
    it can do for us, the layout it offers, and how we can use it to present our content.
    However, what about custom themes? In the world of today, it is often preferred,
    and sometimes even required, for websites to have their own individual look and
    feel. A custom theme can help you accomplish just that and make your website stand
    out from the crowd!
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们了解了默认的VuePress主题以及它对我们的作用，它提供的布局以及我们如何使用它来呈现我们的内容。但是，自定义主题呢？在今天的世界中，通常更喜欢，有时甚至需要网站拥有自己独特的外观和感觉。自定义主题可以帮助您实现这一目标，并使您的网站脱颖而出！
- en: Thus, in the next chapter, we will be turning our attention toward custom themes
    in VuePress and covering the relevant topics around this.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在下一章中，我们将把注意力转向VuePress中的自定义主题，并涵盖相关主题。
