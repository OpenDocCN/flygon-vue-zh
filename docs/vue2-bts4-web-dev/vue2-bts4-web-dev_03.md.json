["```js\n**npm install -g vue-cli**\n\n```", "```js\n**vue init webpack profitoro**\n\n```", "```js\n**cd profitoro**\n**npm install**\n\n```", "```js\n**npm install sass-loader node-sass --save-dev**\n\n```", "```js\n**npm run dev**\n\n```", "```js\n//HeaderComponent.vue\n<template>\n  <div>**Header**</div>\n</template>\n<script>\n  export default {\n\n  }\n</script>\n<style scoped **lang=\"sass\"**>\n\n</style>\n```", "```js\n//common/index.js\nexport {default as Logo} from './Logo'\n```", "```js\n//LandingPage.vue\nimport {Authentication, GoToAppLink, Tagline} from './landing'\nimport {Logo} from './common'\n```", "```js\n//LandingPage.vue\nexport default {\n  components: {\n    Logo,\n    Authentication,\n    GoToAppLink,\n    Tagline\n  }\n}\n```", "```js\n<logo></logo>\n<tagline></tagline>\n<authentication></authentication>\n<go-to-app-link></go-to-app-link>\n```", "```js\n//LandingPage.vue\n<template>\n  <div>\n    **<logo></logo>**\n **<tagline></tagline>**\n **<authentication></authentication>**\n **<go-to-app-link></go-to-app-link>**\n  </div>\n</template>\n<script>\n  import {**Authentication, GoToAppLink, Tagline**} from './landing'\n  import {**Logo**} from **'./common'**\n  export default {\n    components: {\n      **Logo,**\n **Authentication,**\n **GoToAppLink,**\n **Tagline**\n    }\n  }\n</script>\n<style scoped lang=\"sass\">\n\n</style>\n```", "```js\n//App.vue\n<template>\n  <div id=\"app\">\n    <h1>Welcome to Profitoro</h1>\n    **<landing-page></landing-page>**\n  </div>\n</template>\n\n<script>\n  **import LandingPage from './components/LandingPage'**\n  export default {\n    name: 'app',\n    components: {\n      LandingPage\n    }\n  }\n</script>\n```", "```js\n//SvgCircleSector.vue\n<template>\n  <div>\n  </div>\n</template>\n<script>\n  export default {\n    **props: ['angle', 'text']**\n  }\n</script>\n<style scoped lang=\"scss\">\n</style>\n```", "```js\n<svg width=\"200\" height=\"200\" >\n  <circle r=\"100\" cx=\"100\" cy=\"100\" fill=\"gray\"></circle>\n  <circle r=\"90\" cx=\"100\" cy=\"100\" fill=\"lightgray\"></circle>\n</svg>\n```", "```js\n<path d=\"M100,100 V0 L0,100 H0 z\"></path>\n```", "```js\nd=\"M100,100 L100,0 **A**100,100 0 0,0 **0,100** z\"\n```", "```js\n<svg width=\"200\" height=\"200\" >\n  <circle r=\"100\" cx=\"100\" cy=\"100\" fill=\"gray\"></circle>\n  <circle r=\"90\" cx=\"100\" cy=\"100\" fill=\"lightgray\"></circle>\n  <path id=\"sector\" fill=\"darkgray\" opacity=\"0.6\" **d=\"M100,100 L100,0 A100,100 0 0,0 0, 100 z\"**></path>\n</svg>\n```", "```js\n//SvgCircleSector.vue\n<template>\n  <div>\n    <svg class=\"timer\" width=\"200\" height=\"200\" >\n      <...>\n      <path class=\"segment\" **:d=\"path\"**></path>\n    </svg>\n  </div>\n</template>\n<script>\n  function **calcPath** (angle) {\n    let d\n    **d = \"M100,100 L100,0 A100,100 0 0,0 0, 100 z\"**\n    return d\n  }\n  export default {\n    props: ['angle', 'text'],\n    computed: {\n      path () {\n        **return calcPath(this.angle)**\n      }\n    }\n  }\n</script>\n```", "```js\nx = 100 \u2013 b\ny = 100 \u2013 a\n```", "```js\nx = 100 \u2013 100 * sin\u03b1\ny = 100 \u2013 100 * cos\u03b1\n```", "```js\na = c * sin (270 - \u03b1)\na = c * sin (180 + (90 - \u03b1))\na = -c * sin (90 - \u03b1)\na = -c * cos\u03b1\nb = c * cos (270 - \u03b1)\nb = c * cos (180 + (90 - \u03b1))\nb = -c * cos (90 - \u03b1)\nb = -c * sin\u03b1\n```", "```js\nx = 100 + (-100 * sin\u03b1) = 100 \u2013 100*sin\u03b1\ny = 100 + (-100 * cos\u03b1) = 100 \u2013 100*cos\u03b1\n```", "```js\nfunction calcEndPoint (angle) {\n  let x, y\n\n  **x = 100 - 100 * Math.sin(Math.PI * angle / 180)**\n **y = 100 - 100 * Math.cos(Math.PI * angle / 180)**\n\n  return {\n    x, y\n  }\n}\n```", "```js\nfunction calcPath (angle) {\n  let d\n  let {x, y} = calcEndPoint(angle)\n  if (angle <= 180) {\n    d = `M100,100 L100, 0 A100,100 0 0,0 ${x}, ${y} z`\n  } else {\n    d = `M100,100 L100, 0 A100,100 0 0,0 100, 200 A100,100 0 0,0 ${x}, ${y} z`\n  }\n  return d\n}\n```", "```js\n//SvgCircleSector.vue\n<template>\n  <div>\n    <svg class=\"timer\" width=\"200\" height=\"200\" >\n      <...>\n      <text **v-if=\"text != ''\"** class=\"text\" x=\"100\" y=\"100\">\n        **{{text}}**\n      </text>\n    </svg>\n  </div>\n</template>\n```", "```js\n//SvgCircleSector.vue\n<template>\n  <div>\n    <svg class=\"timer\" width=\"200\" height=\"200\" >\n      <circle class=\"**bigCircle**\" r=\"100\" cx=\"100\" cy=\"100\"></circle>\n      <circle class=\"**smallCircle**\" r=\"90\" cx=\"100\" cy=\"100\"></circle>\n      <path class=\"**segment**\" :d=\"path\"></path>\n      <text v-if=\"text != ''\" class=\"**text**\" x=\"100\" y=\"100\">\n        {{text}}\n      </text>\n    </svg>\n  </div>\n</template>\n```", "```js\n//SvgCircleSector.vue\n<style scoped lang=\"scss\">\n  **$big-circle-color: gray;**\n **$small-circle-color: lightgray;**\n **$segment-color: darkgray;**\n **$text-color: black;**\n\n  .bigCircle {\n    fill: $big-circle-color;\n  }\n  .smallCircle {\n    fill: $small-circle-color;\n  }\n  .segment {\n    fill: $segment-color;opacity: 0.6;\n  }\n  .text {\n    font-size: 1em;\n    stroke-width: 0;\n    opacity: .9;\n    fill: $text-color;\n  }\n</style>\n```", "```js\n**//CountDownTimer.vue**\n<template>\n  <div class=\"container\">\n    <div>\n      <**svg-circle-sector** **:angle=\"30\"** **:text=\"'Hello'\"**></**svg-circle-sector**>\n    </div>\n  </div>\n</template>\n<script>\n  **import SvgCircleSector from './SvgCircleSector'**\n  export default {\n    components: {\n      **SvgCircleSector**\n    }\n  }\n</script>\n<style scoped lang=\"scss\">\n\n</style>\n```", "```js\n<div class=\"**row**\">\n  <div class=\"**col**\">Column 1</div>\n  <div class=\"**col**\">Column 2</div>\n  <div class=\"**col**\">Column 3</div>\n  <div class=\"**col**\">Column 4</div>\n</div>\n```", "```js\n<div class=\"**col-***\">Column 1</div>\n```", "```js\n<div class=\"row\">\n  <div class=\"**col-6**\">Column 1</div>\n  <div class=\"**col-3**\">Column 2</div>\n  <div class=\"**col-2**\">Column 3</div>\n  <div class=\"**col-1**\">Column 4</div>\n</div>\n```", "```js\n<div class=\"**row**\">\n  <div class=\"**col-6**\">Column 1</div>\n  <div class=\"**col-2 offset-4**\">Column 2</div>\n</div>\n```", "```js\n<div class=\"row\">\n  <div class=\"**col-3 push-9**\">Column 1</div>\n  <div class=\"**col-9 pull-3**\">Column 2</div>\n</div>\n```", "```js\n<div class=\"row\">\n  <div class=\"col-sm-12 col-md-8\">Column 1</div>\n  <div class=\"col-sm-12 col-md-4\">Column 2</div>\n</div>\n```", "```js\n<div class=\"row **justify-content-center**\">\n  <svg-circle-sector class=\"**col-sm-12 col-md-8 col-lg-6 col-xl-4**\" :angle=\"30\" :text=\"'Hello'\"></svg-circle-sector>\n</div>\n```", "```js\n<button **v-on:click=\"start\">Start</button>**\n```", "```js\n<button **@click=\"start\"**>Start</button>\n```", "```js\n<div class=\"controls\">\n  <div class=\"btn-group\" role=\"group\">\n    <button **@click=\"start\"** type=\"button\" class=\"**btn btn-link**\">Start</button>\n    <button **@click=\"pause\"** type=\"button\" class=\"**btn btn-link**\">Pause</button>\n    <button **@click=\"stop\"** type=\"button\" class=\"**btn btn-link**\">Stop</button>\n  </div>\n</div>\n```", "```js\n//CountDownTimer.vue\n<script>\n  <...>\n  export default {\n    **props: ['time']**\n    <...>\n  }\n</script>\n```", "```js\n//PomodoroTimer.vue\n<template>\n  <div>\n    <count-down-timer **:time=\"time\"**></count-down-timer>\n  </div>\n</template>\n<script>\n  import CountDownTimer from './timer/CountDownTimer'\n  export default {\n    **computed: {**\n **time () {**\n **return 25 * 60**\n **}**\n **}**,\n    components: {\n      CountDownTimer\n    }\n  }\n</script>\n```", "```js\n//CountDownTimer.vue\ndata () {\n  return {\n    **timestamp: this.time**\n  }\n},\n```", "```js\nangle = DegreesPerSecond * this.timestamp\n```", "```js\nDegreesPerSecond = 360/this.time\n```", "```js\n  computed: {\n    **angle** () {\n      **return 360 - (360 / this.time * this.timestamp)**\n    }\n  }\n```", "```js\n<svg-circle-sector **:angle=\"angle\"**></svg-circle-sector>\n```", "```js\n//CountDownTimer.vue\ncomputed: {\n  angle () {\n    return 360 - (360 / this.time * this.timestamp)\n  },\n  **minutes** () {\n    return **Math.floor(this.timestamp / 60)**\n  },\n  **seconds** () {\n    return **this.timestamp % 60**\n  },\n  **text** () {\n    return **`${this.minutes}:${this.seconds}`**\n  }\n},\n```", "```js\n<svg-circle-sector :angle=\"angle\" **:text=\"text\"**></svg-circle-sector>\n```", "```js\n//CountDownTimer.vue\nmethods: {\n  **start** () {\n  },\n  **pause** () {\n  },\n  **stop** () {\n  }\n},\n```", "```js\n//CountDownTimer.vue\ndata () {\n  return {\n    timestamp: this.time,\n    **interval**: null\n  }\n},\n<...>\nmethods: {\n  **start** () {\n    this.interval = **setInterval**(() => {\n      **this.timestamp--**\n      if (this.timestamp === 0) {\n        this.timestamp = this.time\n      }\n    }, 1000)\n  },\n  **pause** () {\n    **clearInterval**(this.interval)\n  },\n  **stop** () {\n    **clearInterval**(this.interval)\n    this.timestamp = this.time\n  }\n}\n```", "```js\n<button **:class=\"{disabled: isStarted}\"**>Start</button>\n```", "```js\n//src/config.js\nexport default {\n  **workingPomodoro**: 25,\n  **shortBreak**: 5,\n  **longBreak**: 10,\n  **pomodorosTillLongBreak**: 3\n}\n```", "```js\n//PomodoroTimer.vue\ndata () {\n  return {\n    isWorking: true,\n    isShortBreak: false,\n    isLongBreak: false,\n    pomodoros: 0\n  }\n}\n```", "```js\n//PomodoroTimer.vue\ncomputed: {\n  time () {\n    let minutes\n\n    if (this.**isWorking**) {\n      minutes = config.**workingPomodoro**\n    } else if (this.**isShortBreak**) {\n      minutes = config.**shortBreak**\n    } else if (this.**isLongBreak**) {\n      minutes = config.**longBreak**\n    }\n\n    return minutes * 60\n  }\n}\n```", "```js\n//PomodoroTimer.vue\nmethods: {\n  togglePomodoro () {\n    // toggle the working state\n    **this.isWorking = !this.isWorking**\n\n    // reset break states\n    **this.isShortBreak = this.isLongBreak = false**\n\n    // we have switched to the working state, just return\n    if (this.isWorking) {\n      return\n    }\n\n    // we have switched to the break state, increase the number of pomodoros and choose between long and short break\n    **this.pomodoros ++**\n    this.isLongBreak = **this.pomodoros % config.pomodorosTillLongBreak === 0**\n    this.isShortBreak = **!this.isLongBreak**\n  }\n}\n```", "```js\n// CountDownTimer.vue\n<...>\nif (this.timestamp <= 0) {\n  **this.$emit('finished')**\n  this.timestamp = this.time\n}\n```", "```js\n<count-down-timer **@finished=\"togglePomodoro\"** :time=\"time\"></count-down-timer>\n```", "```js\n//PomodoroTimer.vue\n<div class=\"container\">\n  <div class=\"**row**\">\n    <div **v-show=\"!isWorking\"** class=\"**col-sm-4**\">\n      WORKOUT TIME!\n    </div>\n    <count-down-timer class=\"**col-sm-8**\" @finished=\"togglePomodoro\" :time=\"time\"></count-down-timer>\n  </div>\n</div>\n```", "```js\n//PomodoroTimer.vue\n<div class=\"jumbotron\">\n  <div class=\"container\">\n    <img class=\"img-fluid rounded\" src=\"IMAGE_SOURCE\" alt=\"\">\n    <h2>Push-ups</h2>\n    <lead>\n      Description: lorem ipsum\n    </lead>\n  </div>\n</div>\n```"]