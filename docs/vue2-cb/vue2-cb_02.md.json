["```js\n<div id=\"app\"> \n\n  <input type=\"text\" v-model=\"name\"/> \n\n  <input type=\"text\" id=\"surname\" value='Snow'/> \n\n  <button @click=\"saveSurname\">Save Surname</button> \n\n  <output>{{computedFullName}}</output> \n\n</div> \n\nlet surname = 'Snow' \n\nnew Vue({ \n\n  el: '#app', \n\n  data: { \n\n    name: 'John' \n\n  }, \n\n  computed: { \n\n    computedFullName () { \n\n      return this.name + ' ' + surname \n\n    } \n\n  }, \n\n  methods: { \n\n    saveSurname () { \n\n      surname = this.$el.querySelector('#surname').value \n\n    } \n\n  } \n\n})\n\n```", "```js\ncomputed: { \n\n  trillionthDigitOfPi () { \n\n    // hours of computations and terabytes later... \n\n    return 2 \n\n  } \n\n}\n\n```", "```js\nunnecessarilyComplexDoubler (input) { \n\n  return input * this.trillionthDigitOfPi \n\n}\n\n```", "```js\n<div id=\"app\"> \n\n  <label>Legs: <input v-model=\"legCount\" type=\"range\"></label><br> \n\n  <label>Tops: <input @input=\"update\" :value=\"tableCount\"></label><br> \n\n  <output> \n\n    We are going to build {{legCount}} legs \n\n    and assembly {{tableCount}} tables. \n\n  </output> \n\n</div>\n\n```", "```js\nnew Vue({ \n\n  el: '#app', \n\n  data: { \n\n    legCount: 0 \n\n  }   \n\n}\n\n```", "```js\ncomputed: { \n\n  tableCount: { \n\n    get () { \n\n      return this.legCount / 4 \n\n    }, \n\n    set (newValue) { \n\n      this.legCount = newValue * 4 \n\n    } \n\n  } \n\n}\n\n```", "```js\nupdate (e) { \n\n  this.tableCount = e.target.value \n\n}\n\n```", "```js\ndata: { \n\n  experiments: [ \n\n    {name: 'RHIC Ion Collider', cost: 650, field: 'Physics'}, \n\n    {name: 'Neptune Undersea Observatory', cost: 100, field: 'Biology'}, \n\n    {name: 'Violinist in the Metro', cost: 3, field: 'Psychology'}, \n\n    {name: 'Large Hadron Collider', cost: 7700, field: 'Physics'}, \n\n    {name: 'DIY Particle Detector', cost: 0, field: 'Physics'} \n\n  ] \n\n}\n\n```", "```js\n<div id=\"app\"> \n\n  <h3>List of expensive experiments</h3> \n\n  <ul> \n\n    <li v-for=\"exp in experiments\"> \n\n      {{exp.name}} ({{exp.cost}}m \n\n) \n\n    </li> \n\n  </ul> \n\n</div>\n\n```", "```js\ncomputed: { \n\n  nonPhysics () { \n\n    return this.experiments.filter(exp => exp.field !== 'Physics') \n\n  } \n\n}\n\n```", "```js\n<li v-for=\"exp in nonPhysics\"> \n\n  {{exp.name}} ({{exp.cost}}m \n\n) \n\n</li>\n\n```", "```js\n<input v-model=\"term\"> // HTML \n\n// inside the Vue instance \n\ndata: { \n\n  term: '' \n\n}, \n\ncomputed: { \n\n  allExceptTerm () { \n\n    return this.experiments \n\n      .filter(exp => exp.field.indexOf(this.term) === -1) \n\n  } \n\n}\n\n```", "```js\nlowCost () { \n\n  return this.experiments.filter(exp => exp.cost <= 3) \n\n}\n\n```", "```js\nmethods: { \n\n  nonPhysics (list) { \n\n    return list.filter(exp => exp.field !== 'Physics') \n\n  }, \n\n  lowCost (list) { \n\n    return list.filter(exp => exp.cost <= 3) \n\n  } \n\n}\n\n```", "```js\n<li v-for=\"exp in nonPhysics(lowCost(experiments))\"> \n\n  {{exp.name}} ({{exp.cost}}m \n\n) \n\n</li>\n\n```", "```js\nfilteredExperiments () { \n\n  return this.lowCost(this.nonPhysics(this.experiments)) \n\n}\n\n```", "```js\n<li v-for=\"exp in filteredExperiments\"> \n\n  {{exp.name}} ({{exp.cost}}m \n\n) \n\n</li>\n\n```", "```js\n<div id=\"app\"> \n\n<table> \n\n  <thead> \n\n    <tr> \n\n      <th>Name</th> \n\n      <th>Country</th> \n\n      <th>Electricity</th> \n\n    </tr> \n\n  </thead> \n\n  <tbody> \n\n  </tbody> \n\n</table> \n\n</div>\n\n```", "```js\nnew Vue({ \n\n  el: '#app', \n\n  data: { \n\n    dams: [ \n\n      {name: 'Nurek Dam', country: 'Tajikistan', electricity: 3200}, \n\n      {name: 'Three Gorges Dam', country: 'China', electricity: 22500}, \n\n      {name: 'Tarbela Dam', country: 'Pakistan', electricity: 3500}, \n\n      {name: 'Guri Dam', country: 'Venezuela', electricity: 10200} \n\n    ] \n\n  } \n\n})\n\n```", "```js\n<tr v-for=\"dam in dams\"> \n\n  <td>{{dam.name}}</td> \n\n  <td>{{dam.country}}</td> \n\n  <td>{{dam.electricity}} MegaWatts</td> \n\n</tr>\n\n```", "```js\ncomputed: { \n\n  damsByElectricity () { \n\n    return this.dams.sort((d1, d2) => d2.electricity - d1.electricity); \n\n  } \n\n}\n\n```", "```js\n<tr v-for=\"dam in damsByElectricity\"> \n\n  <td>{{dam.name}}</td> \n\n  <td>{{dam.country}}</td> \n\n  <td>{{dam.electricity}} MegaWatts</td> \n\n</tr>\n\n```", "```js\n.ascending:after { \n\n  content: \"25B2\" \n\n} \n\n.descending:after { \n\n  content: \"25BC\" \n\n}\n\n```", "```js\ndata: { \n\n  dams: [ \n\n    // list of dams \n\n  ], \n\n  order: 1 // means ascending \n\n},\n\n```", "```js\n<th>Name</th> \n\n<th>Country</th> \n\n<th v-bind:class=\"order === 1 ? 'descending' : 'ascending'\" \n\n    @click=\"sort\">Electricity</th>\n\n```", "```js\nmethods: { \n\n  sort () { \n\n    this.order = this.order * -1 \n\n  } \n\n}\n\n```", "```js\ndamsByElectricity () { \n\n  return this.dams.sort((d1, d2) => \n\n    (d2.electricity - d1.electricity) * this.order); \n\n}\n\n```", "```js\nVue.filter('currency', function (money) { \n\n  return accounting.formatMoney(money) \n\n})\n\n```", "```js\nI have {{5 | currency}} in my pocket\n\n```", "```js\n<div id=\"app\"> \n\n<table> \n\n  <thead> \n\n    <tr> \n\n      <th>Item</th> \n\n      <th>Price</th> \n\n    </tr> \n\n  </thead> \n\n  <tbody> \n\n    <tr v-for=\"item in inventory\"> \n\n      <td>{{item.name}}</td> \n\n      <td>{{item.price}} \n\n    </td> \n\n  </tr> \n\n  </tbody> \n\n</table> \n\n</div>\n\n```", "```js\nnew Vue({ \n\n  el:'#app', \n\n  data: { \n\n    inventory: [ \n\n      {name: 'tape measure', price: '7'}, \n\n      {name: 'stamp', price: '0.01'}, \n\n      {name: 'shark tooth', price: '1.5'}, \n\n      {name: 'iphone', price: '999'} \n\n    ] \n\n  } \n\n})\n\n```", "```js\nMath.round(1.245 * 100) / 100 \n\n// output: 1.25\n\n```", "```js\nvar kittenKeychain = 0.83 \n\nvar kittyDiscount = 0.5 \n\nvar discountedKittenKeychain = kittenKeychain * kittyDiscount \n\nvar boughtKeychains = discountedKittenKeychain * 3 \n\nMath.round(boughtKeychains * 100) / 100 \n\n// outputs: 1.24\n\n```", "```js\n.price { \n\n  text-align: right \n\n}\n\n```", "```js\n<div id=\"app\"> \n\n<table> \n\n  <thead> \n\n    <tr> \n\n      <th>Item</th> \n\n      <th>Price</th> \n\n      </tr> \n\n  </thead> \n\n  <tbody> \n\n    <tr v-for=\"item in inventory\"> \n\n      <td>{{item.name}}</td> \n\n      <td class=\"price\">{{item.price | dollars}}</td> \n\n    </tr> \n\n  </tbody> \n\n</table> \n\n</div>\n\n```", "```js\nVue.filter('dollars', function (money) { \n\n  return accounting.formatMoney(money) \n\n}) \n\nnew Vue({ \n\n  el:'#app', \n\n  data: { \n\n    inventory: [ \n\n      {name: 'tape measure', price: '7'}, \n\n      {name: 'stamp', price: '0.01'}, \n\n      {name: 'shark tooth', price: '1.5'}, \n\n      {name: 'iphone', price: '999'} \n\n    ] \n\n  } \n\n})\n\n```", "```js\nnew Vue({ \n\n  el:'#app', \n\n  data: { \n\n    bastilleStormingDate: '1789-07-14 17 h' \n\n  } \n\n})\n\n```", "```js\n<div id=\"app\"> \n\n  The Storming of the Bastille, happened on {{bastilleStormingDate | date}} \n\n</div>\n\n```", "```js\nVue.filter('date', function (date) { \n\n  return moment(date).format('LL') \n\n})\n\n```", "```js\nLa prise de la Bastille, survenue le {{bastilleStormingDate | date}}\n\n```", "```js\nVue.filter('date', function (date) { \n\n  moment.locale('fr') \n\n  return moment(date).format('LL') \n\n})\n\n```", "```js\nLa prise de la Bastille, survenue le {{bastilleStormingDate | date('fr')}}\n\n```", "```js\nVue.filter('date', function (date, locale) { \n\n  moment.locale(locale) \n\n  return moment(date).format('LL') \n\n})\n\n```", "```js\n<div id=\"ghost\"> \n\n  <div v-show=\"isNight\"> \n\n    I'm a ghost! Boo! \n\n  </div> \n\n</div>\n\n```", "```js\nnew Vue({ \n\n  el: '#ghost', \n\n  data: { \n\n    isNight: true \n\n  } \n\n})\n\n```", "```js\nnew Vue({ \n\n    el: '#ghost', \n\n    computed: { \n\n      isNight () { \n\n        return new Date().getHours() < 7 \n\n    } \n\n  } \n\n})\n\n```", "```js\nreturn (new Date('4 January 03:30')).getHours() < 7\n\n```", "```js\n<div id=\"ghost\"> \n\n  <div v-if=\"isNight\"> \n\n    I'm a ghost! Boo! \n\n  </div> \n\n</div>\n\n```", "```js\n<div id=\"app\"> \n\n  <textarea \n\n    v-model=\"memeText\" \n\n    :maxlength=\"limit\"> \n\n  </textarea> \n\n  {{memeText.length}} \n\n</div>\n\n```", "```js\n.warn { \n\n  background-color: mistyrose \n\n}\n\n```", "```js\nnew Vue({ \n\n  el: '#app', \n\n  data: { \n\n    memeText: 'What if I told you ' + \n\n              'CSS can do that', \n\n    limit: 50 \n\n  } \n\n})\n\n```", "```js\ncomputed: { \n\n  longText () { \n\n    if (this.limit - this.memeText.length <= 10) { \n\n        return true \n\n    } else { \n\n        return false \n\n    } \n\n  } \n\n}\n\n```", "```js\n<div id=\"app\"> \n\n  <textarea \n\n    v-model=\"memeText\" \n\n    :class=\"{ warn: longText }\" \n\n    :maxlength=\"limit\"> \n\n  </textarea> \n\n  {{memeText.length}} \n\n</div>\n\n```", "```js\n:class=\"{ class1: var1, class2: var2, ..., classn: varn }\"\n\n```", "```js\n<div :class=\"classes\"></div> // in HTML \n\n// in your Vue instance \n\ndata: { \n\n  classes: { \n\n    warn: true \n\n  } \n\n}\n\n```", "```js\n<div :class=\"classes\"></div> \n\ncomputed: { \n\n  classes () { \n\n    return { \n\n      warn: true \n\n    } \n\n  } \n\n}\n\n```", "```js\ncomputed: { \n\n  classes () { \n\n    const longText = this.limit - this.memeText.length <= 10 \n\n    return { \n\n      warn: longText \n\n    } \n\n  } \n\n}\n\n```", "```js\n<div id=\"app\"> \n\n  <article> \n\n    They call me fruit.<br> \n\n    They call me fish.<br> \n\n    They call me insect.<br> \n\n    But actually I'm not one of those. \n\n    <div id=\"solution\" @click=\"showSolution = true\"> \n\n      I am a <span id=\"dragon\" v-show=\"showSolution\">Dragon</span> \n\n    </div> \n\n  </article> \n\n</div>\n\n```", "```js\nnew Vue({ \n\n    el: '#app', \n\n  data: { \n\n    showSolution: false \n\n  } \n\n})\n\n```", "```js\n#solution { \n\n  cursor: pointer; \n\n}\n\n```", "```js\n.fade-enter { \n\n  opacity: 0 \n\n}\n\n```", "```js\n.fade-enter-active { \n\n  transition: opacity .5s;  \n\n}\n\n```", "```js\nI am a <transition name=\"fade\"> \n\n  <span id=\"dragon\" v-show=\"showSolution\">Dragon</span> \n\n</transition>\n\n```", "```js\n<div id=\"app\"> \n\n  <p> \n\n    Transitions are awesome, careful<br/> \n\n    please don't use them always. \n\n  </p> \n\n  <transition name=\"fade\"> \n\n    <img id=\"tree\" \n\n      src=\"http://i.imgur.com/QDpnaIE.png\" \n\n      v-show=\"show\" \n\n      @click=\"show = false\"/> \n\n  </transition> \n\n</div>\n\n```", "```js\n#tree { \n\n  position: absolute; \n\n  left: 7.5em; \n\n  top: 0em; \n\n  cursor: pointer; \n\n} \n\n.fade-leave-active { \n\n  transition: opacity .5s; \n\n  opacity: 0 \n\n}\n\n```", "```js\nnew Vue({ \n\n    el: '#app', \n\n  data: { \n\n    show: true \n\n  } \n\n})\n\n```", "```js\nnew Vue({ \n\n    el: '#app', \n\n  data: { \n\n    htmlTexts: [ \n\n    'Dear John,<br/>thank you for the <pre>Batman vs Superman</pre> DVD!', \n\n    'Dear John,<br/>thank you for <i>Ghostbusters 3</i>!', \n\n    'Dear John,<br/>thanks, <b>Gods of Egypt</b> is my new favourite!' \n\n    ] \n\n  } \n\n})\n\n```", "```js\n<div id=\"app\"> \n\n  {{htmlTexts[0]}} \n\n</div>\n\n```", "```js\n<div id=\"app\" v-html=\"htmlTexts[0]\"> \n\n</div>\n\n```", "```js\n<div id=\"app\"> \n\n  <thanks gift=\"Batman\" decoration=\"strong\"></thanks> \n\n</div>\n\n```", "```js\nVue.component('thanks', { \n\n    functional: true, \n\n  render: function (createElement, context) { \n\n    let decoratedGift = \n\n      createElement(context.props.decoration, context.props.gift) \n\n    return createElement('p', ['Dear John, thanks for ', decoratedGift]) \n\n  }, \n\n  props: { \n\n    gift: String, \n\n    decoration: String \n\n  } \n\n})\n\n```", "```js\n<div id=\"app\"> \n\n  <form> \n\n    <!-- list of printers go here --> \n\n  </form> \n\n</div>\n\n```", "```js\n<label> \n\n  <input type=\"checkbox\" v-model=\"outputPrinter\" value=\"monochrome\"/> \n\n  Monochrome \n\n</label>\n\n```", "```js\nnew Vue({ \n\n    el:'#app', \n\n  data:{ \n\n    outputPrinter: [] \n\n  } \n\n})\n\n```", "```js\n<div id=\"app\"> \n\n  <form> \n\n    <fieldset> \n\n      <legend>What printers you want to use?</legend> \n\n      <label> \n\n        <input type=\"checkbox\" v-model=\"outputPrinter\" value=\"monochrome\"/> \n\n        Monochrome</label><br> \n\n      <label> \n\n        <input type=\"checkbox\" v-model=\"outputPrinter\" value=\"plasma\"/> \n\n        Plasma Color</label><br> \n\n      <label> \n\n        <input type=\"checkbox\" v-model=\"outputPrinter\" value=\"cloner\"/> \n\n        3D DNA Cloner</label><br> \n\n      <input type=\"submit\" value=\"Print now\"/> \n\n    </fieldset> \n\n  </form> \n\n</div>\n\n```", "```js\noutputPrinter: ['monochrome', 'cloner']\n\n```", "```js\n<input type=\"submit\" value=\"Print now\" @click.prevent=\"printHandler\"/>\n\n```", "```js\nmethods: { \n\n  printHandler () { \n\n    let printers = this.outputPrinter \n\n    alert('Printing with: ' + \n\n      (printers.length ? printers.join(', ') : 'none') + '.') \n\n  } \n\n}\n\n```", "```js\nnew Vue({ \n\n  el: '#app', \n\n  data: { \n\n    genders: ['male', 'female', 'alien'], \n\n    gender: undefined \n\n  } \n\n})\n\n```", "```js\n<div id=\"app\"> \n\n  <form> \n\n    <fieldset> \n\n      <legend>Choose your gender</legend> \n\n      <label> \n\n        <input type=\"radio\" v-model=\"gender\" value=\"male\"/> \n\n          Male \n\n      </label><br> \n\n      <label> \n\n        <input type=\"radio\" v-model=\"gender\" value=\"female\"/> \n\n          Female \n\n      </label> <br>\n\n      <label> \n\n        <input type=\"radio\" v-model=\"gender\" value=\"alien\"/> \n\n          Alien \n\n      </label> \n\n    </fieldset> \n\n  </form> \n\n</div>\n\n```", "```js\n<div> \n\n  Choosen gender: '{{ gender }}' \n\n</div>\n\n```", "```js\n<input type=\"radio\" v-model=\"gender\" value=\"male\"/>\n\n```", "```js\ngenders: ['male', 'female']\n\n```", "```js\n<input type=\"radio\" v-model=\"gender\"**:value=\"genders[1]\"**\n\n/>\n\n```", "```js\ndata:{ \n\n  animals: ['\n\n', '\n\n', '\n\n'], \n\n  animal: undefined, \n\n  farm: [], \n\n  i: 0 \n\n}\n\n```", "```js\n<legend>Today's animals</legend>\n\n```", "```js\n<label> \n\n  <input type=\"radio\" v-model=\"animal\" :value=\"animals[i]\"/> \n\n  {{animals[i]}} \n\n</label><br> \n\n<label> \n\n  <input type=\"radio\" v-model=\"animal\" :value=\"animals[i+1]\"/> \n\n  {{animals[i+1]}} \n\n</label><br>\n\n```", "```js\n<input type=\"submit\" value=\"Add to Farm\" @click.prevent=\"addToFarm\"/>\n\n```", "```js\naddToFarm () { \n\n    if (this.animal === undefined) { return } \n\n    this.farm.push(this.animal) \n\n    this.i = Math.floor(Math.random() * (this.animals.length - 1)) \n\n  this.animal = undefined \n\n}\n\n```", "```js\n<div> \n\n  Your farm is composed by {{ farm.join(' ') }} \n\n</div>\n\n```", "```js\n<form> \n\n  <fieldset> \n\n    <legend>Choose your country</legend> \n\n      <!-- here goes the select element --> \n\n  </fieldset> \n\n</form>\n\n```", "```js\n<select> \n\n  <option>Japan</option> \n\n  <option>India</option> \n\n  <option>Canada</option> \n\n</select>\n\n```", "```js\n<select v-model=\"choosenCountry\">\n\n```", "```js\nnew Vue({ \n\n    el:'#app', \n\n  data:{ \n\n    choosenCountry: undefined \n\n  } \n\n})\n\n```", "```js\n<div> \n\n  {{choosenCountry}} \n\n</div>\n\n```", "```js\n<select> \n\n  <option value=\"1\">Japan</option> \n\n  <option value=\"2\">India</option> \n\n  <option value=\"7\">Canada</option> \n\n</select>\n\n```", "```js\nclans: { \n\n  mammalia: { \n\n    'have fingers': { \n\n      human: 'human', \n\n      chimpanzee: 'chimpanzee' \n\n    }, \n\n    'fingerless': { \n\n      cat: 'cat', \n\n      bear: 'bear' \n\n    } \n\n  }, \n\n  birds: { \n\n    flying: { \n\n      eagle: 'eagle', \n\n      pidgeon: 'pidgeon' \n\n    }, \n\n    'non flying': { \n\n      chicken: 'chicken' \n\n    } \n\n  } \n\n}\n\n```", "```js\nclan: undefined, \n\ntype: undefined\n\n```", "```js\n<select v-model=\"clan\"> \n\n  <option v-for=\"(types, clan) in clans\">{{clan}}</option> \n\n</select>\n\n```", "```js\n<select v-model=\"type\"> \n\n  <option v-for=\"(species, type) in clans[clan]\">{{type}}</option> \n\n</select>\n\n```", "```js\n<select> \n\n  <option v-for=\"(animals, species) in clans[clan][type]\">{{species}}</option> \n\n</select>\n\n```", "```js\n<select v-if=\"clans[clan]\"> \n\n  <option v-for=\"(animals, species) in clans[clan][type]\">{{species}}</option> \n\n</select>\n\n```"]