["```js\n<div id=\"app\">\n\n  <p v-pony>I'm a pony paragraph!</p>\n\n  <code v-pony>Pony code</code>\n\n  <blockquote>Normal quote</blockquote>\n\n  <blockquote v-pony>I'm a pony quote</blockquote>\n\n</div>\n\n```", "```js\nVue.directive('pony', {\n\n  bind (el) {\n\n    el.style.backgroundColor = 'hotpink'\n\n  }\n\n})\n\n```", "```js\nVue.directive('pony', {\n\n  bind (el) {\n\n    el.style.backgroundColor = 'hotpink'\n\n    el.onclick = () => {\n\n const colGen = () => \n\n Math.round(Math.random()*255 + 25)\n\n const cols =\n\n [colGen() + 100, colGen(), colGen()]\n\n const randRGB =\n\n `rgb(${cols[0]}, ${cols[1]}, ${cols[2]})`\n\n el.style.backgroundColor = randRGB\n\n }\n\n  }\n\n})\n\n```", "```js\nnew Vue({\n\n  el: '#app'\n\n})\n\n```", "```js\nVue.directive(<name: String>, {\n\n  // hooks\n\n})\n\n```", "```js\n<div id=\"app\">\n\n  <h1>Welcome</h1>\n\n  <pre>{{chat}}</pre>\n\n  <input v-model=\"message\" @keyup.enter=\"send\">\n\n</div>\n\n```", "```js\n const ws = new WebSocket('ws://echo.websocket.org')\n\n```", "```js\nnew Vue({\n\n  el: '#app',\n\n  data: {\n\n    chat: '',\n\n    message: ''\n\n  }\n\n})\n\n```", "```js\nnew Vue({\n\n  el: '#app',\n\n  data: {\n\n    chat: '',\n\n    message: ''\n\n  },\n\n  methods: {\n\n send () {\n\n this.appendToChat(this.message)\n\n ws.send(this.message)\n\n this.message = ''\n\n },\n\n appendToChat (text) {\n\n this.chat += text + 'n'\n\n }\n\n }\n\n}\n\n```", "```js\n...\n\ncreated () {\n\n  ws.onmessage = event => {\n\n    this.appendToChat(event.data)\n\n  }\n\n}\n\n...\n\n```", "```js\n<div id=\"app\">\n\n  <h1>Welcome to the Kangaroo club</h1>\n\n  <img src=\"https://goo.gl/FVDU1I\" width=\"300px\" height=\"200px\">\n\n  <img src=\"https://goo.gl/U1Hvez\" width=\"300px\" height=\"200px\">\n\n  <img src=\"https://goo.gl/YxggEB\" width=\"300px\" height=\"200px\">\n\n  <p>We love kangaroos</p>\n\n</div>\n\n```", "```js\nnew Vue({\n\n  el: '#app'\n\n})\n\n```", "```js\n@keyframes generateJump {\n\n  20%{transform: translateY(0);}\n\n  40%{transform: translateY(-30px);}\n\n  50%{transform: translateY(0);}\n\n  60%{transform: translateY(-15px);}\n\n  80%{transform: translateY(0);}\n\n}\n\n.kangaroo {\n\n  animation: generateJump 1.5s ease 0s 2 normal;\n\n}\n\n```", "```js\nconst jump = el => {\n\n  el.classList.add('kangaroo')\n\n  el.addEventListener('animationend', () => {\n\n    el.classList.remove('kangaroo')\n\n  })\n\n}\n\n```", "```js\nconst doOnRandomElement = (action, collection) => {\n\n  if (collection.length === 0) {\n\n    return\n\n  }\n\n  const el = \n\n    collection[Math.floor(Math.random()*collection.length)]\n\n  action(el)\n\n}\n\n```", "```js\nconst atRandomIntervals = action => {\n\n  setTimeout(() => {\n\n    action()\n\n    atRandomIntervals(action)\n\n  }, Math.round(Math.random() * 6000))\n\n}\n\n```", "```js\nconst Kangaroo = {\n\n  install (vueInstance) {\n\n    vueInstance.kangaroos = []\n\n    vueInstance.directive('kangaroo', {\n\n      bind (el) {\n\n       vueInstance.kangaroos.push(el)\n\n      }\n\n    })\n\n    atRandomIntervals(() => \n\n      doOnRandomElement(jump, vueInstance.kangaroos))\n\n  }\n\n}\n\n```", "```js\nVue.use(Kangaroo)\n\nnew Vue({\n\n  el: '#app'\n\n})\n\n```", "```js\n <div id=\"app\">\n\n   <h1>Welcome to the Kangaroo club</h1>\n\n   <img v-kangaroo\n\n src=\"https://goo.gl/FVDU1I\" width=\"300px\" height=\"200px\">\n\n   <img v-kangaroo\n\n src=\"https://goo.gl/U1Hvez\" width=\"300px\" height=\"200px\">\n\n   <img v-kangaroo\n\n src=\"https://goo.gl/YxggEB\" width=\"300px\" height=\"200px\">\n\n   <p v-kangaroo\n\n>We love kangaroos</p>\n\n </div>\n\n```", "```js\nMyPlugin.install = (vueInstance, option) => {\n\n  // ...\n\n}\n\n```", "```js\nVue.use(MyPlugin, { \n\n/* any option you need */\n\n }) \n\n```", "```js\n <div id=\"app\"></div>\n\n```", "```js\nconst Greeter = {\n\n  template: '<p>Hello World</p>'\n\n}\n\n```", "```js\nconst Greeter = {\n\n  template: '<p>Hello World</p>'\n\n}\n\nnew Vue({\n\n el: '#app',\n\n render: h => h(Greeter)\n\n})\n\n```", "```js\n<div id=\"app\"></div>\n\n```", "```js\nnew Vue({\n\n  el: '#app',\n\n  render: h => h('div')\n\n})\n\n```", "```js\nnew Vue({\n\n  el: '#app',\n\n  render: h => h(\n\n    'div',\n\n    [\n\n h('h1', 'The plumber club page')\n\n ]\n\n  )\n\n})\n\n```", "```js\nh(\n\n  {\n\n    render: function (h) {\n\n      const self = this\n\n      return h('div', [\n\n        'Your name is ',\n\n        h('input', {\n\n          domProps: {\n\n            value: self.name\n\n          },\n\n          on: {\n\n            input (event) {\n\n              self.name = event.target.value\n\n            }\n\n          }\n\n        }),\n\n        h(\n\n          'p',\n\n          'Hello ' + self.name + \n\n            (self.exclamation ? '!' : ''))\n\n      ])\n\n    },\n\n    data () { return { name: '' } },\n\n    props: ['exclamation']\n\n  },\n\n  {\n\n    props: {\n\n      exclamation: true\n\n    }\n\n  }\n\n)\n\n```", "```js\n{\n\n  props: {\n\n    exclamation: true\n\n  }\n\n}\n\n```", "```js\n 'Here you will find ', h('i', 'a flood '), 'of plumbers.'\n\n```", "```js\nnpm install\n\n babel-plugin-syntax-jsx\n\n babel-plugin-transform-vue-jsx\n\n babel-helper-vue-jsx-merge-props\n\n --save-dev\n\n```", "```js\n \"\n\nplugins\" \n\n: [\n\n ...\n\n  \"\n\ntransform-vue-jsx\" \n\n]\n\n```", "```js\nimport Vue from 'vue'\n\n/* eslint-disable no-new */\n\nnew Vue({\n\n  el: '#app',\n\n  render (h) {\n\n    return <div>{this.msg}</div>\n\n  },\n\n  data: {\n\n    msg: 'Hello World'\n\n  }\n\n})\n\n```", "```js\nconst myComp = {\n\n  render (h) {\n\n    return <p>{this.myProp}</p>\n\n  },\n\n  props: ['myProp']\n\n}\n\n```", "```js\nnew Vue({\n\n  el: '#app',\n\n  render (h) {\n\n    return <div>\n\n      <myComp myProp={this.msg}/>\n\n    </div>\n\n  },\n\n  data: {\n\n    msg: 'Hello World'\n\n  },\n\n  components: {\n\n    myComp\n\n  }\n\n})\n\n```", "```js\n<svg>\n\n  <path d=\"M 100 30 L 200 30 L 150 120 z\"/>\n\n</svg>\n\n```", "```js\n<orange-line>\n\n  moveTo 100 30 traceLine 200 30 traceLine 150 120 closePath\n\n</orange-line>\n\n```", "```js\n<div id=\"app\">\n\n  <orange-line>\n\n    moveTo 100 30 traceLine 200 30 traceLine 150 120 closePath\n\n  </orange-line>\n\n</div>\n\n```", "```js\nconst OrangeLine = {\n\n  functional: true,\n\n  render (h, context) {\n\n    return h('svg',\n\n      []\n\n    )\n\n  }\n\n}\n\n```", "```js\nrender (h, context) {\n\n  return h('svg',\n\n    [\n\n      h('path', {\n\n attrs: {\n\n d: context.children.map(c => {\n\n return c.text\n\n .replace(/moveTo/g, 'M')\n\n .replace(/traceLine/g, 'L')\n\n .replace(/closePath/g, 'z')\n\n }).join(' ').trim(),\n\n fill: 'black',\n\n stroke: 'orange',\n\n 'stroke-width': '4'\n\n }\n\n })\n\n    ]\n\n  )\n\n}\n\n```", "```js\nnew Vue({\n\n  el: '#app',\n\n  components: {\n\n    OrangeLine\n\n  }\n\n})\n\n```", "```js\ncontext.children.map(c => {\n\n  return c.text\n\n    .replace(/moveTo/g, 'M')\n\n    .replace(/traceLine/g, 'L')\n\n    .replace(/closePath/g, 'z')\n\n}).join(' ').trim()\n\n```", "```js\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.7/semantic.css\" />\n\n```", "```js\n<meta name=\"viewport\" content=\"width=device-width\">\n\n```", "```js\nnew Vue({\n\n  el: '#app',\n\n  data: {\n\n    width: document.body.clientWidth,\n\n  breeds: [\n\n    { name: 'Persian', colour: 'orange', affection: 3, shedding: 5 },\n\n    { name: 'Siberian', colour: 'blue', affection: 5, shedding: 4 },\n\n    { name: 'Bombay', colour: 'black', affection: 4, shedding: 2 }\n\n  ]\n\n  },\n\n  created() {\n\n    window.onresize = event => {\n\n      this.width = document.body.clientWidth\n\n    }\n\n  },\n\n  components: {\n\n    BreedTable\n\n  }\n\n})\n\n```", "```js\nconst BreedTable = {\n\n  functional: true,\n\n  render(h, context) {\n\n    if (context.parent.width > 400) {\n\n      return h(DesktopTable, context.data, context.children)\n\n    } else {\n\n      return h(MobileTable, context.data, context.children)\n\n    }\n\n  }\n\n}\n\n```", "```js\n<div id=\"app\">\n\n  <h1>Breeds</h1>\n\n  <breed-table :breeds=\"breeds\"></breed-table>\n\n</div>\n\n```", "```js\nconst DesktopTable = {\n\n  template: `\n\n    <table class=\"ui celled table unstackable\">\n\n      <thead>\n\n        <tr>\n\n          <th>Breed</th>\n\n          <th>Coat Colour</th>\n\n          <th>Level of Affection</th>\n\n          <th>Level of Shedding</th>\n\n        </tr>\n\n      </thead>\n\n      <tbody>\n\n        <tr v-for=\"breed in breeds\">\n\n          <td>{{breed.name}}</td>\n\n          <td>{{breed.colour}}</td>\n\n          <td>{{breed.affection}}</td>\n\n          <td>{{breed.shedding}}</td>\n\n        </tr>\n\n      </tbody>\n\n    </table>\n\n  `,\n\n  props: ['breeds']\n\n}\n\n```", "```js\nconst MobileTable = {\n\n  template: `\n\n    <table class=\"ui celled table unstackable\">\n\n      <thead>\n\n       <tr>\n\n         <th>Breed</th>\n\n         <th>Affection & Shedding</th>\n\n       </tr>\n\n     </thead>\n\n   ...\n\n```", "```js\n...\n\n<tbody>\n\n  <tr v-for=\"breed in breeds\">\n\n    <td>{{breed.name}}\n\n      <div \n\n        class=\"ui mini circular image\"\n\n        :style=\"'height:35px;background-color:'+breed.colour\"\n\n      ></div>\n\n    </td>\n\n  ...\n\n```", "```js\n      ...\n\n      <td>\n\n        <div class=\"ui heart rating\">\n\n          <i \n\n            v-for=\"n in 5\"\n\n            class=\"icon\"\n\n            :class=\"{ active: n <= breed.affection }\"\n\n          ></i>\n\n        </div>\n\n        <div class=\"ui star rating\">\n\n          <i \n\n            v-for=\"n in 5\"\n\n            class=\"icon\"\n\n            :class=\"{ active: n <= breed.shedding }\"\n\n          ></i>\n\n        </div>\n\n      </td>\n\n    </tr>\n\n  </tbody>\n\n</table>\n\n```"]