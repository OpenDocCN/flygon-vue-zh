["```js\nvue init simulatedgreg/electron-vue pomodoro\n\n```", "```js\nmainWindow = new BrowserWindow({\n\n  height: 200,\n\n  width: 300\n\n})\n\n```", "```js\n<template>\n\n  <div class=\"pomodoro\">\n\n    <p>Time remaining: {{formattedTime}}</p>\n\n    <button v-if=\"remainingTime === 1500\" @click=\"start\">Start</button>\n\n    <button v-else @click=\"stop\">Stop</button>\n\n  </div>\n\n</template>\n\n```", "```js\n<script>\n\nexport default {\n\n  data () {\n\n    return {\n\n      remainingTime: 1500,\n\n      timer: undefined\n\n    }\n\n  },\n\n  methods: {\n\n    start () {\n\n      this.remainingTime -= 1\n\n      this.timer = setInterval(() => {\n\n        this.remainingTime -= 1\n\n        if (this.remainingTime === 0) {\n\n          clearInterval(this.timer)\n\n        }\n\n      }, 1000)\n\n    },\n\n    stop () {\n\n      clearInterval(this.timer)\n\n      this.remainingTime = 1500\n\n    }\n\n  }\n\n}\n\n</script>\n\n```", "```js\ncomputed: {\n\n  formattedTime () {\n\n    const pad = num => ('0' + num).substr(-2)\n\n    const minutes = Math.floor(this.remainingTime / 60)\n\n    const seconds = this.remainingTime - minutes * 60\n\n    return `${minutes}:${pad(seconds)}`\n\n  }\n\n}\n\n```", "```js\n<template>\n\n  <div id=\"#app\">\n\n <pomodoro></pomodoro>\n\n  </div>\n\n</template>\n\n<script>\n\n import Pomodoro from 'components/Pomodoro'\n\n  export default {\n\n    components: {\n\n Pomodoro\n\n    }\n\n  }\n\n</script>\n\n```", "```js\nthis.timer = setInterval(() => {\n\n  this.remainingTime -= 1\n\n  if (this.remainingTime === 0) {\n\n    clearInterval(this.timer)\n\n  }\n\n}, 1000)\n\n```", "```js\n{\n\n  \"rules\": {\n\n    \".read\": true,\n\n    \".write\": true\n\n  }\n\n}\n\n```", "```js\n <script src=\"https://unpkg.com/vue/dist/vue.js\"></script>\n\n <script src=\"https://www.gstatic.com/firebasejs/3.6.9/firebase.js\"></script>\n\n <script src=\"https://unpkg.com/vuefire/dist/vuefire.js\"></script>\n\n```", "```js\n<div id=\"app\">\n\n  <ul>\n\n    <li v-for=\"item in items\">\n\n      {{item.name}}: {{item.smell}}\n\n    <button @click=\"removeItem(item['.key'])\">X</button>\n\n    </li>\n\n  </ul>\n\n  <form @submit.prevent=\"addItem\">\n\n    <input v-model=\"newItem\" />\n\n    smells like\n\n    <input v-model=\"newSmell\" />\n\n    <button>Add #{{items.length}}</button>\n\n  </form>\n\n</div>\n\n```", "```js\nconst config = {\n\n  databaseURL: 'https://smell-diary.firebaseio.com/'\n\n}\n\n```", "```js\nconst firebaseApp = firebase.initializeApp(config)\n\n const db = firebaseApp.database()\n\n```", "```js\nnew Vue({\n\n  el: '#app',\n\n  firebase: {\n\n    items: db.ref('/items')\n\n  }\n\n})\n\n```", "```js\ndata: {\n\n  newItem: '',\n\n  newSmell: ''\n\n},\n\nmethods: {\n\n  addItem () {\n\n    this.$firebaseRefs.items\n\n      .push({\n\n        name: this.newItem,\n\n        smell: this.newSmell\n\n      })\n\n    this.newItem = ''\n\n    this.newSmell = ''\n\n  },\n\n  removeItem (key) {\n\n    this.$firebaseRefs.items\n\n      .child(key).remove()\n\n  }\n\n}\n\n```", "```js\nnpm install -g feathers-cli\n\n```", "```js\n <script src=\"//cdnjs.cloudflare.com/ajax/libs/vue/2.1.10/vue.js\"></script>\n\n <script src=\"//cdnjs.cloudflare.com/ajax/libs/socket.io/1.7.3/socket.io.js\"></script>\n\n <script src=\"//unpkg.com/feathers-client@^1.0.0/dist/feathers.js\"></script>\n\n```", "```js\n<div id=\"app\">\n\n  <div v-for=\"cat in cats\" style=\"display:inline-block\">\n\n    <img width=\"100\" height=\"100\" :src=\"cat.url\" />\n\n    <p>{{cat.name}}</p>\n\n  </div>\n\n  <form @submit.prevent=\"addCat\">\n\n    <div>\n\n      <label>Cat Name</label>\n\n      <input v-model=\"newName\" />\n\n    </div>\n\n    <div>\n\n      <label>Cat Url</label>\n\n      <input v-model=\"newUrl\" />\n\n    </div>\n\n    <button>Add cat</button>\n\n    <img width=\"30\" height=\"30\" :src=\"newUrl\" />\n\n  </form>\n\n</div>\n\n```", "```js\n<script>\n\n  const socket = io('http://localhost:3030')\n\n  const app = feathers()\n\n    .configure(feathers.socketio(socket))\n\n  const catService = app.service('cats')\n\n```", "```js\n  new Vue({\n\n    el: '#app',\n\n    data: {\n\n      cats: [],\n\n      newName: '',\n\n      newUrl: ''\n\n    },\n\n    methods: {\n\n      addCat () {\n\n        catService.create({\n\n          name: this.newName,\n\n          url: this.newUrl\n\n        })\n\n        this.newName = ''\n\n        this.newUrl = ''\n\n      }\n\n    },\n\n```", "```js\n    mounted () {\n\n      catService.find()\n\n        .then(page => {\n\n          this.cats = page.data\n\n        })\n\n      catService.on('created', cat => {\n\n        this.cats.push(cat)\n\n      })\n\n    }\n\n })\n\n </script>\n\n```", "```js\nvar\n\n app = \n\nnew\n\n Clarifai.App( \n\n 'your client id would be printed here'\n\n, \n\n 'your client secret would be here' \n\n);\n\n```", "```js\nnpm install -g horizon\n\n```", "```js\nhz init vue_app\n\n```", "```js\n <script src=\"https://unpkg.com/vue\"></script>\n\n <script src=\"/horizon/horizon.js\"></script>\n\n <script src=\"https://sdk.clarifai.com/js/clarifai-latest.js\"></script>\n\n```", "```js\n<div id=\"app\">\n\n  <div>\n\n    <h3>Dear diary...</h3>\n\n    <ul>\n\n      <li v-for=\"entry in entries\">\n\n        {{ entry.datetime.toLocaleDateString() }}:\n\n        {{ entry.text }}\n\n      </li>\n\n    </ul>\n\n  </div>\n\n...\n\n```", "```js\n  ...\n\n  <h3>New Entry</h3>\n\n  <img\n\n    style=\"max-width:200px;max-height:200px\"\n\n    :src=\"data_uri\"\n\n  />\n\n  <input type=\"file\" @change=\"selectFile\" ref=\"file\">\n\n  <p v-if=\"tentativeEntries.length\">Choose an entry</p>\n\n  <button v-for=\"tentativeEntry in tentativeEntries\" @click=\"send(tentativeEntry)\">\n\n    {{tentativeEntry}}\n\n  </button>\n\n</div>\n\n```", "```js\nvar app = new Clarifai.App(\n\n '7CDIjv_VqEYfmFi_ygwKsKAaDe-LwEzc78CcW1sA',\n\n 'XC0S9GHxS0iONFsAdiA2xOUuBsOhAT0jZWQTx4hl'\n\n )\n\n```", "```js\nconst horizon = new Horizon()\n\nconst entries = horizon('entries')\n\n```", "```js\nnew Vue({\n\n  el: '#app',\n\n  data: {\n\n    tentativeEntries: [],\n\n    data_uri: undefined,\n\n    entries: []\n\n  },\n\n  ...\n\n```", "```js\n...\n\nmethods: {\n\n  selectFile(e) {\n\n  const file = e.target.files[0]\n\n  const reader = new FileReader()\n\n  if (file) {\n\n    reader.addEventListener('load', () => {\n\n      const data_uri = reader.result\n\n      this.data_uri = data_uri\n\n      const base64 = data_uri.split(',')[1]\n\n      app.models.predict(Clarifai.GENERAL_MODEL, base64)\n\n        .then(response => {\n\n          this.tentativeEntries =\n\n            response.outputs[0].data.concepts\n\n            .map(c => c.name)\n\n        })\n\n      })\n\n    reader.readAsDataURL(file)\n\n  }\n\n},\n\n...\n\n```", "```js\n    ...\n\n    send(concept) {\n\n      entries.store({\n\n        text: concept,\n\n         datetime: new Date()\n\n      }).subscribe(\n\n        result => console.log(result),\n\n        error => console.log(error)\n\n      )\n\n      this.tentativeEntries = []\n\n      this.$refs.file.value = ''\n\n      this.data_uri = undefined\n\n    }\n\n  }\n\n})\n\n```", "```js\ncreated() {\n\n  entries.order('datetime', 'descending').limit(10).watch()\n\n    .subscribe(allEntries => {\n\n      this.entries = [...allEntries].reverse()\n\n  })\n\n}\n\n```", "```js\nhz serve --dev\n\n```", "```js\nentries.order('datetime', 'descending').limit(10).watch()\n\n  .subscribe(allEntries => {\n\n    this.entries = [...allEntries].reverse()\n\n  })\n\n```"]