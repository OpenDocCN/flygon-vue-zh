["```js\nnpm install -g vue-cli\n\n```", "```js\nvue init webpack\n\n```", "```js\n<template>\n\n  <div id=\"app\">\n\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n\n  name: 'app'\n\n}\n\n</script>\n\n<style>\n\n</style>\n\n```", "```js\n<div id=\"app\">\n\n  <div>\n\n    <label>principal capital</label>\n\n    <input v-model.number=\"principal\">\n\n  </div>\n\n  <div>\n\n    <label>Yearly interestRate</label>\n\n    <input v-model.number=\"interestRate\">\n\n  </div>\n\n  <div>\n\n    <label>Investment length (timeYears)</label>\n\n    <input v-model.number=\"timeYears\">\n\n  </div>\n\n  <div>\n\n    You will gain:\n\n    <output>{{final}}</output>\n\n  </div>\n\n</div>\n\n```", "```js\nexport default {\n\n  name: 'app',\n\n  data () {\n\n    return {\n\n      principal: 0,\n\n      interestRate: 0,\n\n      timeYears: 0\n\n    }\n\n  }\n\n}\n\n```", "```js\nP * Math.pow((1 + r), t)\n\n```", "```js\ncomputed: {\n\n  final () {\n\n    const P = this.principal\n\n    const r = this.interestRate\n\n    const t = this.timeYears\n\n    return P * Math.pow((1 + r), t)\n\n  }\n\n}\n\n```", "```js\nnpm run dev\n\n```", "```js\nexport default function (Principal, yearlyRate, years) {\n\n  const P = Principal\n\n  const r = yearlyRate\n\n  const t = years\n\n  return P * Math.pow((1 + r), t)\n\n}\n\n```", "```js\ncomputed: {\n\n  final () {\n\n    return compoundInterest(\n\n this.principal,\n\n this.interestRate,\n\n this.timeYears\n\n )\n\n  }\n\n}\n\n```", "```js\n<script>\n\n import compoundInterest from './compoundInterest'\n\n  export default {\n\n  ...\n\n```", "```js\nexport default function (Principal, yearlyRate, years) {\n\n...\n\n```", "```js\nimport compoundInterest from './compoundInterest'\n\n...\n\n```", "```js\nvue init gurghet/webpack\n\n```", "```js\n<template>\n\n  <span id=\"shaker\" class=\"shake\">\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://csshake.surge.sh/csshake.min.css\">\n\n    <slot></slot>\n\n  </span>\n\n</template>\n\n```", "```js\n<script>\n\n  export default {\n\n    name: 'shaker\n\n'\n\n  }\n\n</script>\n\n```", "```js\n// The Vue build version to load with the `import` command\n\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\n\nimport Vue from 'vue'\n\nimport Shaker from './Shaker'\n\n/* eslint-disable no-new */\n\nnew Vue({\n\n  el: '#app',\n\n template: `\n\n    <div>\n\n      This is a <Shaker>test</Shaker>\n\n    </div>\n\n  `, \n\n  components: { Shaker\n\n }\n\n})\n\n```", "```js\nnpm run dev\n\n```", "```js\nplugins: [\n\n  new Plugin1(...),\n\n  new Plugin2(...),\n\n  ...\n\n  new PluginN(...)\n\n]\n\n```", "```js\nplugins: [\n\n  new webpack.DefinePlugin({\n\n    'process.env': env\n\n  }),\n\n  new webpack.optimize.UglifyJsPlugin({\n\n    compress: {\n\n      warnings: false\n\n    }\n\n  }),\n\n  new webpack.optimize.OccurrenceOrderPlugin()\n\n]\n\n```", "```js\noutput: {\n\n  path: config.build.assetsRoot,\n\n  filename: utils.assetsPath('js/[name].[chunkhash].js'),\n\n  chunkFilename: utils.assetsPath('js/[id].[chunkhash].js')\n\n}\n\n```", "```js\noutput: {\n\n  path: config.build.assetsRoot,\n\n filename: utils.assetsPath('shaker.js') \n\n}\n\n```", "```js\n... {\n\n  loaders: utils.cssLoaders({\n\n    ...\n\n    extract: false\n\n  })\n\n}\n\n```", "```js\nexternals: {\n\n  'vue': 'Vue'\n\n}\n\n```", "```js\nvar webpackConfig = merge(baseWebpackConfig, {\n\n  entry: {\n\n app: './src/dist.js'\n\n },\n\n  module: {\n\n  ...\n\n```", "```js\nimport Vue from 'vue'\n\nimport Shaker from './Shaker'\n\nVue.component('shaker', Shaker)\n\n```", "```js\nassetsSubDirectory: 'static',\n\n```", "```js\nassetsSubDirectory: '.',\n\n```", "```js\nnpm run build\n\n```", "```js\n{\n\n \"name\": \"recipe\",\n\n \"version\": \"1.0.0\"\n\n}\n\n```", "```js\nnpm install --save-dev webpack@2\n\n```", "```js\n<template>\n\n  <div>\n\n    {{msg}}\n\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n\n  name: 'app',\n\n  data () {\n\n    return {\n\n      msg: 'Hello world'\n\n    }\n\n  }\n\n}\n\n</script>\n\n<style>\n\n</style>\n\n```", "```js\nmodule.exports = {\n\n  module: {\n\n    rules: [\n\n      {test: /.vue$/, use: 'vue-loader'}\n\n    ]\n\n  }\n\n}\n\n```", "```js\nnpm install --save-dev vue-loader\n\n```", "```js\nnpm install --save-dev vue-template-compiler css-loader\n\n```", "```js\nnpm install --save vue\n\n```", "```js\nimport Vue from 'vue'\n\nimport App from './App.vue'\n\nnew Vue({\n\n  el: '#app',\n\n  render: h => h(App)\n\n})\n\n```", "```js\n<!DOCTYPE html>\n\n<html>\n\n  <head>\n\n    <title>Webpack 2 demo</title>\n\n  </head>\n\n  <body>\n\n    <div id=\"app\"></div>\n\n    <script src=\"dist/bundle.js\"></script>\n\n  </body>\n\n</html>\n\n```", "```js\n./node_modules/webpack/bin/webpack.js app/index.js dist/bundle.js\n\n```", "```js\nmodule.exports = {\n\n  entry: './app/index.js',\n\n output: {\n\n filename: 'bundle.js',\n\n path: __dirname + '/dist'\n\n },\n\n  module: {\n\n  ...\n\n```", "```js\n\"scripts\": {\n\n  \"build\": \"webpack\"\n\n}\n\n```", "```js\nvue init gurghet/webpack\n\n```", "```js\nnpm install --save vue-bulma-modal bulma\n\n```", "```js\nnpm install --save-dev node-sass sass-loader\n\n```", "```js\n{\n\n  test: /.js$/,\n\n  loader: 'babel-loader',\n\n  include: [\n\n    path.join(projectRoot, 'src')\n\n  ],\n\n exclude: /node_modules/\n\n},\n\n```", "```js\n{\n\n  test: /.js$/,\n\n  loader: 'babel-loader',\n\n  include: [\n\n    path.join(projectRoot, 'src'),\n\n path.join(projectRoot, 'node_modules/vue-bulma-modal')\n\n  ]\n\n},\n\n```", "```js\n<template>\n\n  <div id=\"app\">\n\n    <card-modal\n\n      @ok=\"accept\"\n\n      ok-text=\"Accept\"\n\n      :visible=\"popup\"\n\n      @cancel=\"cancel\"\n\n    >\n\n      <div class=\"content\">\n\n        <h1>Contract</h1>\n\n          <p>\n\n            I hereby declare I have learned how to\n\n            install third party components in my\n\n            own Vue project.\n\n          </p>\n\n        </div>\n\n      </card-modal>\n\n    <p v-if=\"signed\">It appears you signed!</p>\n\n  </div>\n\n</template>\n\n```", "```js\n<script>\n\nimport { CardModal } from 'vue-bulma-modal'\n\nexport default {\n\n  name: 'app',\n\n  components: { CardModal },\n\n  data () {\n\n    return {\n\n      signed: false,\n\n      popup: true\n\n    }\n\n  },\n\n  methods: {\n\n    accept () {\n\n      this.popup = false\n\n      this.signed = true\n\n    },\n\n    cancel () {\n\n      this.popup = false\n\n    }\n\n  }\n\n}\n\n</script>\n\n```", "```js\n<style lang=\"sass\">\n\n@import '~bulma';\n\n</style>\n\n```", "```js\n{\n\n  \"name\": \"vue-bulma-modal\",\n\n  \"version\": \"1.0.1\",\n\n  \"description\": \"Modal component for Vue Bulma\",\n\n \"main\": \"src/index.js\", \n\n  \"peerDependencies\": {\n\n    \"bulma\": \">=0.2\",\n\n    \"vue\": \">=2\"\n\n  },\n\n  ...\n\n  \"author\": \"Fangdun Cai <cfddream@gmail.com>\",\n\n  \"license\": \"MIT\"\n\n}\n\n```", "```js\nimport { CardModal } from 'vue-bulma-modal'\n\n```", "```js\nimport Modal from './Modal'\n\nimport BaseModal from './BaseModal'\n\nimport CardModal from './CardModal'\n\nimport ImageModal from './ImageModal'\n\nexport {\n\n  Modal,\n\n  BaseModal,\n\n  CardModal,\n\n  ImageModal\n\n}\n\n```", "```js\n<style lang=\"sass\">\n\n@import '~bulma';\n\n</style>\n\n```", "```js\n{\n\n  \"name\": \"bulma\",\n\n  \"version\": \"0.3.1\",\n\n  ...\n\n \"main\": \"bulma.sass\",\n\n  ...\n\n}\n\n```", "```js\n<template>\n\n  <div>\n\n    Swears: {{counter}} $$\n\n    <button @click=\"addSwear\">+</button>\n\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n\n  name: 'swear-jar',\n\n  data () {\n\n    return {\n\n      counter: 0\n\n    }\n\n  },\n\n  methods: {\n\n    addSwear () {\n\n      this.counter++\n\n    }\n\n  }\n\n}\n\n</script>\n\n```", "```js\n<!DOCTYPE html>\n\n<html>\n\n  <head>\n\n    <title>Swear Jar Page</title>\n\n  </head>\n\n  <body>\n\n    <div id=\"app\"></div>\n\n    <script src=\"bundle.js\"></script>\n\n  </body>\n\n</html>\n\n```", "```js\nimport Vue from 'vue'\n\nimport SwearJar from './SwearJar.vue'\n\nnew Vue({\n\n  el: '#app',\n\n  render: h => h(SwearJar)\n\n})\n\n```", "```js\nmodule.exports = {\n\n  entry: './index.js',\n\n  output: {\n\n    path: 'dist',\n\n    filename: 'bundle.js'\n\n  }\n\n}\n\n```", "```js\nmodule.exports = {\n\n  entry: './index.js',\n\n  output: {\n\n    path: 'dist',\n\n    filename: 'bundle.js'\n\n  },\n\n  module: {\n\n rules: [\n\n {\n\n test: /.vue$/,\n\n use: 'vue-loader'\n\n }\n\n ]\n\n }\n\n}\n\n```", "```js\nnpm install --save vue\n\nnpm install --save-dev vue-loader vue-template-compiler webpack webpack-dev-server\n\n```", "```js\n./node_modules/webpack-dev-server/bin/webpack-dev-server.js --output-path / --inline --hot --open\n\n```", "```js\n\"scripts\": {\n\n  \"dev\": \"webpack-dev-server --output-path / --inline --hot --open\"\n\n}\n\n```", "```js\n<template>\n\n  <div>\n\n    <p>\n\nSwears: {{counter}} $$</p>\n\n    <button @click=\"addSwear\">Add Swear\n\n</button>\n\n  </div>\n\n</template>\n\n```", "```js\nwebpack-dev-server --output-path / --inline --hot --open\n\n```", "```js\nnpm install --save vue\n\nnpm install --save-dev webpack babel-core babel-loader babel-preset-es2015 vue-loader vue-template-compiler\n\n```", "```js\n<template>\n\n  <div>Hello</div>\n\n</template>\n\n<script>\n\nvar double = n => n * 2\n\nexport default {\n\n  beforeCreate () {\n\n    console.log([1,2,3].map(double))\n\n  }\n\n}\n\n</script>\n\n```", "```js\nvar double = n => n * 2\n\n```", "```js\nmodule.exports = {\n\n  entry: 'babel-loader!vue-loader!./myComp.vue',\n\n  output: {\n\n    filename: 'bundle.js',\n\n    path: 'dist'\n\n  }\n\n}\n\n```", "```js\nmodule.exports = {\n\n entry: './myComp.vue', \n\n  output: {\n\n    filename: 'bundle.js'\n\n  },\n\n  module: {\n\n    rules: [\n\n      {\n\n        test: /.vue$/,\n\n        use: 'vue-loader'\n\n      },\n\n      {\n\n        test: /.js$/,\n\n        use: 'babel-loader'\n\n      }\n\n    ]\n\n  }\n\n}\n\n```", "```js\n{\n\n  \"presets\": [\"es2015\"]\n\n}\n\n```", "```js\n\"scripts\": {\n\n  \"build\": \"webpack\"\n\n}\n\n```", "```js\n...\n\nvar double = function double(n) {\n\n  return n * 2;\n\n};\n\n...\n\n```", "```js\nvar addOne = n => n + 1\n\n```", "```js\nvar addOne = function addOne(n) {\n\n  return n + 1\n\n}\n\n```", "```js\ntest: /\\.vue$/\n\n```", "```js\n<template>\n\n  <div>\n\n    Hello {{name}}!\n\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n\n  data () {\n\n    return {\n\n      name: 'John',\n\n      name: 'Jane'\n\n    }\n\n  }\n\n}\n\n</script>\n\n```", "```js\nimport Vue from 'vue'\n\nimport MyComp from './MyComp.vue'\n\nnew Vue({\n\n  el: '#app',\n\n  render: h => h(MyComp)\n\n})\n\n```", "```js\n<!DOCTYPE html>\n\n<html>\n\n  <head>\n\n    <title>Hello</title>\n\n  </head>\n\n  <body>\n\n    <div id=\"app\"></div>\n\n      <script src=\"bundle.js\"></script>\n\n    </body>\n\n</html>\n\n```", "```js\nmodule.exports = {\n\n  entry: './src/index.js',\n\n  module: {\n\n    rules: [\n\n      { \n\n        test: /.vue$/,\n\n        use: 'vue-loader'\n\n      }\n\n    ]\n\n  }\n\n}\n\n```", "```js\n{\n\n  test: /.(vue|js)$/,\n\n  use: 'eslint-loader',\n\n  enforce: 'pre'\n\n}\n\n```", "```js\nmodule.exports = {\n\n  \"extends\": \"eslint:recommended\",\n\n  \"parser\": \"babel-eslint\",\n\n  plugins: [\n\n    'html'\n\n  ]\n\n}\n\n```", "```js\nnpm install --save vue\n\nnpm install --save-dev babel-eslint eslint eslint-loader eslint-plugin-html vue-loader vue-template-compiler webpack webpack-dev-server\n\n```", "```js\n\"scripts\": {\n\n  \"dev\": \"webpack-dev-server --entry ./src/index.js --inline --hot --open\"\n\n}\n\n```", "```js\ndata () {\n\n  return {\n\n    name: 'John'\n\n  }\n\n}\n\n```", "```js\nwebpack(webpackConfig, function (err, stats) {\n\n...\n\n})\n\n```", "```js\nconst configs = [\n\n  {\n\n    plugins: [\n\n      new webpack.optimize.UglifyJsPlugin({\n\n        compress: {\n\n          warnings: false\n\n        },\n\n        sourceMap: true\n\n      })\n\n    ]\n\n  },\n\n  {\n\n    plugins: []\n\n  }\n\n]\n\n```", "```js\nvar merge = require('webpack-merge')\n\n```", "```js\nconfigs.\n\nmap(c =>\n\n webpack(merge(webpackConfig, c)\n\n, function (err, stats) {\n\n...\n\n```", "```js\nconst configs = [\n\n  {\n\n    output: {\n\n path: <whatever is your path>,\n\n filename: 'myFilename.min.js'),\n\n <other options you may have>\n\n },\n\n    plugins: [\n\n      new webpack.optimize.UglifyJsPlugin({\n\n        compress: {\n\n          warnings: false\n\n        }\n\n      })\n\n    ]\n\n  },\n\n  {\n\n    output: {\n\n path: <whatever is your path>,\n\n filename: 'myFilename.js'),\n\n <other options you may have>\n\n },\n\n    plugins: []\n\n  }\n\n]\n\n```", "```js\nvue init Akryum/vue-share-components\n\n```", "```js\n<template>\n\n  <div class=\"test\">\n\n    <button @click=\"newJoke\">New Joke</button>\n\n    <p>{{joke}}</p>\n\n  </div>\n\n</template>\n\n<script>\n\nconst jokes = [\n\n 'Chuck Norris/'s keyboard has the Any key.',\n\n 'Chuck Norris can win at solitaire with only 18 cards.',\n\n 'Chuck Norris/' first job was as a paperboy. There were no survivors.',\n\n 'When Chuck Norris break the build, you can/'t fix it.',\n\n]\n\nexport default {\n\n  name: 'joke-button',\n\n  data () {\n\n    return {\n\n      joke: '...',\n\n    }\n\n  },\n\n  methods: {\n\n    newJoke () {\n\n      this.joke = jokes[Math.floor(Math.random() * jokes.length)]\n\n    },\n\n  },\n\n}\n\n</script>\n\n```", "```js\nimport JokeButton\n\n from './components/JokeButton\n\n.vue'\n\n// Install the components\n\nexport function install (Vue) {\n\n  Vue.component('jokeButton\n\n', JokeButton\n\n)\n\n  /* -- Add more components here -- */\n\n}\n\n// Expose the components\n\nexport {\n\n  JokeButton\n\n,\n\n  /* -- Add more components here -- */\n\n}\n\n...\n\n```", "```js\nnpm adduser\n\n```", "```js\nnpm publish\n\n```", "```js\n...\n\n\"main\": \"dist/joke-button.common.js\",\n\n\"unpkg\": \"dist/joke-button.browser.js\",\n\n\"module\": \"index.js\",\n\n\"scripts\": {\n\n  \"dev\": \"cross-env NODE_ENV=development webpack --config config/webpack.config.dev.js --progress --watch\",\n\n  \"build\": \"npm run build:browser && npm run build:common\",\n\n  \"build:browser\": \"cross-env NODE_ENV=production webpack --config config/webpack.config.browser.js --progress --hide-modules\",\n\n  \"build:common\": \"cross-env NODE_ENV=production webpack --config config/webpack.config.common.js --progress --hide-modules\",\n\n  \"prepublish\": \"npm run build\"\n\n},\n\n...\n\n```", "```js\nimport JokeButton from 'JokeButton'\n\n```", "```js\nvar JokeButton = require(\"JokeButton\")\n\n```", "```js\noutput: {\n\n  path: './dist',\n\n  filename: outputFile + '.common.js',\n\n  libraryTarget: 'commonjs2',\n\n},\n\ntarget\n\n:\n\n '\n\nnode' \n\n,\n\n```", "```js\noutput: {\n\n  path: './dist',\n\n  filename: outputFile + '.browser.js',\n\n  library: globalName,\n\n  libraryTarget: 'umd',\n\n},\n\n```", "```js\n/* -- Plugin definition & Auto-install -- */\n\n/* You shouldn't have to modify the code below */\n\n// Plugin\n\nconst plugin = {\n\n /* eslint-disable no-undef */\n\n version: VERSION,\n\n install,\n\n}\n\nexport default plugin\n\n// Auto-install\n\nlet GlobalVue = null\n\nif (typeof window !== 'undefined') {\n\n GlobalVue = window.Vue\n\n} else if (typeof global !== 'undefined') {\n\n GlobalVue = global.Vue\n\n}\n\nif (GlobalVue) {\n\n GlobalVue.use(plugin)\n\n}\n\n```"]