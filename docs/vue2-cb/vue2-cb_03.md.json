["```js\n<div id=\"app\"> \n\n</div>\n\n```", "```js\n<button @click=\"taxiCalled = true\"> \n\n  Call a cab \n\n</button>\n\n```", "```js\n<p v-if=\"taxiCalled\">\n\n</p>\n\n```", "```js\nnew Vue({ \n\n  el: '#app', \n\n  data: { \n\n    taxiCalled: false \n\n  } \n\n})\n\n```", "```js\n<transition  \n\n  enter-active-class=\"animated slideInRight\"> \n\n  <p v-if=\"taxiCalled\">\n\n</p> \n\n</transition>\n\n```", "```js\n<transition enter-active-class=\"animated slideInRight\">\n\n```", "```js\n<div id=\"app\"> \n\n  <button @click=\"taxiCalled = true\"> \n\n    Call a cab \n\n  </button> \n\n  <p v-if=\"taxiCalled\">\n\n</p> \n\n</div>\n\n```", "```js\nnew Vue({ \n\n  el: '#app', \n\n  data: { \n\n    taxiCalled: false \n\n  } \n\n})\n\n```", "```js\n.slideInRight { \n\n  transform: translateX(200px); \n\n} \n\n.go { \n\n  transition: all 2s ease-out; \n\n}\n\n```", "```js\n<transition  \n\n  enter-class=\"slideInRight\" \n\n  enter-active-class=\"go\"> \n\n  <p v-if=\"taxiCalled\">\n\n</p> \n\n</transition>\n\n```", "```js\n<div id=\"app\"> \n\n  <button @click=\"taxiCalled = true\"> \n\n    Call a cab \n\n  </button> \n\n  <p v-if=\"taxiCalled\">\n\n</p> \n\n</div>\n\n```", "```js\nnew Vue({ \n\n  el: '#app', \n\n  data: { \n\n    taxiCalled: false \n\n  } \n\n})\n\n```", "```js\n<transition \n\n  @enter=\"enter\" \n\n  :css=\"false\" \n\n> \n\n<p v-if=\"taxiCalled\">\n\n</p> \n\n</transition>\n\n```", "```js\nmethods: { \n\n    enter (el) { \n\n      Velocity(el,  \n\n      { opacity: [1, 0], translateX: [\"0px\", \"200px\"] }, \n\n      { duration: 2000, easing: \"ease-out\" }) \n\n    } \n\n  }\n\n```", "```js\n<transition \n\n  @enter=\"enter\" \n\n  :css=\"false\" \n\n> \n\n  <p v-if=\"taxiCalled\">\n\n</p> \n\n</transition>\n\n```", "```js\nenter (el) { \n\n  Velocity(el,  \n\n    { opacity: [1, 0], translateX: [\"0px\", \"200px\"] }, \n\n    { duration: 2000, easing: \"ease-out\" }\n\n  ) \n\n}\n\n```", "```js\nVelocity( elementToAnimate, propertiesToAnimate, [options] )\n\n```", "```js\np { \n\n  opacity: 0; \n\n}\n\n```", "```js\nVelocity(el,  \n\n  { opacity: 1 } \n\n)\n\n```", "```js\nVelocity(el,  \n\n  { opacity: 1 }, \n\n  { begin: () => { el.style.opacity = 0 } } \n\n)\n\n```", "```js\n<button @click=\"taxiCalled = false\">\n\n  Cancel\n\n</button>\n\n```", "```js\n<transition \n\n  @enter=\"enter\" \n\n  @leave=\"leave\" \n\n  :css=\"false\" \n\n> \n\n  <p v-if=\"taxiCalled\">\n\n</p> \n\n</transition>\n\n```", "```js\nleave (el) { \n\n  Velocity(el, \n\n    { opacity: [0, 1], 'font-size': ['0.1em', '1em'] }, \n\n    { duration: 200}) \n\n}\n\n```", "```js\nleave (el, done) { \n\n  Velocity(el, \n\n  { opacity: [0, 1], 'font-size': ['0.1em', '1em'] }, \n\n  { duration: 200 }) \n\n}\n\n```", "```js\nleave (el, done) { \n\n  Velocity(el, \n\n  { opacity: [0, 1], 'font-size': ['0.1em', '1em'] }, \n\n  { duration: 200, complete: done }) \n\n}\n\n```", "```js\n<h1> \n\n  The Fill Murray Page \n\n</h1>\n\n```", "```js\n<div id=\"app\"> \n\n  <img src=\"https://fillmurray.com/50/70\"> \n\n  <p> \n\n    The internet was missing the ability to \n\n    provide custom-sized placeholder images of Bill Murray. \n\n    Now it can. \n\n  </p> \n\n</div>\n\n```", "```js\n<transition appear> \n\n  <img src=\"https://fillmurray.com/50/70\"> \n\n</transition>\n\n```", "```js\nimg { \n\n  float: left; \n\n  padding: 5px \n\n} \n\n.v-enter { \n\n  opacity: 0 \n\n} \n\n.v-enter-active { \n\n  transition: opacity 2s \n\n}\n\n```", "```js\n<transition appear> \n\n  <img src=\"https://fillmurray.com/50/70\" width=\"50\" height=\"70\"> \n\n</transition>\n\n```", "```js\n<transition \n\n  appear \n\n  @before-appear=\"customBeforeAppearHook\" \n\n  @appear=\"customAppearHook\" \n\n  @after-appear=\"customAfterAppearHook\" \n\n  appear-class=\"custom-appear-class\" \n\n  appear-active-class=\"custom-appear-active-class\" \n\n> \n\n  <p>My element</p> \n\n</transition>\n\n```", "```js\n<transition appear name=\"myTransition\"> \n\n  <p>My element</p> \n\n</transition>\n\n```", "```js\n.myTransition-enter {...} \n\n.myTransition-enter-active {...}\n\n```", "```js\n<div id=\"app\"> \n\n  <button @click=\"kisses++\">\n\nKiss!</button> \n\n</div>\n\n```", "```js\nnew Vue({ \n\n   el: '#app', \n\n  data: { \n\n   kisses: 0 \n\n  } \n\n})\n\n```", "```js\n<transition name=\"fade\"> \n\n  <p v-if=\"kisses < 3\" key=\"frog\">\n\nfrog</p> \n\n  <p v-if=\"kisses >= 3\" key=\"princess\">\n\nprincess</p> \n\n</transition>\n\n```", "```js\n.fade-enter-active, .fade-leave-active { \n\n  transition: opacity .5s \n\n} \n\n.fade-enter, .fade-leave-active { \n\n  opacity: 0 \n\n}\n\n```", "```js\np { \n\n  margin: 0; \n\n  position: absolute; \n\n  font-size: 3em; \n\n}\n\n```", "```js\n<transition name=\"fade\"> \n\n  <p v-if=\"kisses < 3\">\n\nfrog</p> \n\n  <p v-if=\"kisses >= 3\">\n\nprincess</p> \n\n</transition>\n\n```", "```js\n<p v-if=\"kisses < 3\" >\n\nfrog</p> \n\n<span v-if=\"kisses >= 3\">\n\nprincess</span>\n\n```", "```js\np, span { \n\n  margin: 0; \n\n  position: absolute; \n\n  font-size: 3em; \n\n  display: block; \n\n}\n\n```", "```js\n<transition name=\"fade\"> \n\n  <p v-if=\"kisses < 3\" key=\"frog\">\n\nfrog</p> \n\n  <p v-else-if=\"kisses >= 3 && kisses <= 5\" key=\"princess\">\n\nprincess</p> \n\n  <p v-else key=\"santa\">\n\nsanta</p> \n\n</transition>\n\n```", "```js\n<transition name=\"fade\">\n\n  <p :key=\"transformation\">{{emoji}}{{transformation}}</p>\n\n</transition>\n\n```", "```js\ncomputed: { \n\n  transformation () { \n\n    if (this.kisses < 3) { \n\n      return 'frog' \n\n    } \n\n    if (this.kisses >= 3 && this.kisses <= 5) { \n\n      return 'princess' \n\n    } \n\n    if (this.kisses > 5) { \n\n      return 'santa' \n\n    } \n\n  }, \n\n  emoji () { \n\n    switch (this.transformation) { \n\n      case 'frog': return '\n\n' \n\n      case 'princess': return '\n\n' \n\n      case 'santa': return '\n\n' \n\n    } \n\n  } \n\n}\n\n```", "```js\nnew Vue({ \n\n  el: '#app', \n\n  data: { \n\n    product: 0, \n\n    products: ['\n\numbrella', '\n\ncomputer', '\n\nball', '\n\ncamera'] \n\n  } \n\n})\n\n```", "```js\n<div id=\"app\"> \n\n  <button @click=\"product++\">next</button> \n\n  <transition name=\"slide\"> \n\n    <p :key=\"products[product % 4]\">{{products[product % 4]}}</p> \n\n  </transition> \n\n</div>\n\n```", "```js\n.slide-enter-active, .slide-leave-active { \n\n  transition: transform .5s \n\n} \n\n.slide-enter { \n\n  transform: translateX(300px) \n\n} \n\n.slide-leave-active { \n\n  transform: translateX(-300px); \n\n}\n\n```", "```js\np { \n\n  position: absolute; \n\n  margin: 0; \n\n  font-size: 3em; \n\n}\n\n```", "```js\np { \n\n  margin: 0; \n\n  font-size: 3em; \n\n}\n\n```", "```js\n<transition name=\"slide\" mode=\"out-in\"> \n\n  <p :key=\"products[product%4]\">{{products[product%4]}}</p> \n\n</transition>\n\n```", "```js\n<transition mode=\"in-out\"> \n\n  <!-- elements --> \n\n</transition>\n\n```", "```js\n<transition mode=\"out-in\"> \n\n  <!-- elements --> \n\n</transition>\n\n```", "```js\nnew Vue({ \n\n  el: '#app', \n\n  data: { \n\n    syllabus: [ \n\n      'HTML', \n\n      'CSS', \n\n      'Scratch', \n\n      'JavaScript', \n\n      'Python' \n\n    ] \n\n  } \n\n})\n\n```", "```js\n<div id=\"app\"> \n\n  <h3>Syllabus</h3> \n\n  <ul> \n\n    <li v-for=\"topic in syllabus\"> \n\n      {{topic}} \n\n    </li> \n\n  </ul> \n\n</div>\n\n```", "```js\n<li v-for=\"topic in syllabus\"> \n\n  <button @click=\"completed(topic)\">Done</button>{{topic}} \n\n</li>\n\n```", "```js\nmethods: { \n\n  completed (topic) { \n\n    let index = this.syllabus.indexOf(topic) \n\n    this.syllabus.splice(index, 1) \n\n  } \n\n}\n\n```", "```js\n<transition-group tag=\"ul\"> \n\n  <li v-for=\"topic in syllabus\" :key=\"topic\"> \n\n    <button @click=\"completed(topic)\">Done</button>{{topic}} \n\n  </li> \n\n</transition-group>\n\n```", "```js\n.v-leave-active { \n\n  transition: all 1s; \n\n  opacity: 0; \n\n  transform: translateY(-30px); \n\n}\n\n```", "```js\nnew Vue({ \n\n  el: '#app', \n\n  data: { \n\n    buses: [1,2,3,4,5], \n\n    nextBus: 6 \n\n  } \n\n})\n\n```", "```js\nmounted () { \n\n  setInterval(() => { \n\n    const headOrTail = () => Math.random() > 0.5 \n\n    if (headOrTail()) { \n\n      this.buses.push(this.nextBus) \n\n      this.nextBus += 1 \n\n    } else { \n\n      this.buses.splice(0, 1) \n\n    } \n\n  }, 2000) \n\n}\n\n```", "```js\n<div id=\"app\"> \n\n  <h3>Bus station simulator</h3> \n\n  <transition-group tag=\"p\" name=\"station\"> \n\n    <span v-for=\"bus in buses\" :key=\"bus\">\n\n</span> \n\n  </transition-group> \n\n</div>\n\n```", "```js\n.station-leave-active, .station-enter-active { \n\n  transition: all 2s; \n\n  position: absolute; \n\n} \n\n.station-leave-to { \n\n  opacity: 0; \n\n  transform: translateX(-30px); \n\n} \n\n.station-enter { \n\n  opacity: 0; \n\n  transform: translateX(30px); \n\n} \n\n.station-move { \n\n  transition: 2s; \n\n} \n\nspan { \n\n  display: inline-block; \n\n  margin: 3px; \n\n}\n\n```", "```js\n<transition-group tag=\"p\" name=\"station\"> \n\n  <span v-for=\"bus in buses\" :key=\"bus\">\n\n</span> \n\n</transition-group>\n\n```", "```js\n{ \n\n  bottom:110.4375 \n\n  height:26 \n\n  left:11 \n\n  right:27 \n\n  top:84.4375 \n\n  width:16 \n\n}\n\n```", "```js\n.station-leave-active, .station-enter-active { \n\n  transition: all 2s; \n\n  position: absolute; \n\n}\n\n```", "```js\n.station-move { \n\n  transition: 2s; \n\n}\n\n```", "```js\n<div id=\"app\"> \n\n  <input type=\"number\"> \n\n  <div class=\"ball\"></div> \n\n</div>\n\n```", "```js\n.ball { \n\n  width: 3em; \n\n  height: 3em; \n\n  background-color: red; \n\n  border-radius: 50%; \n\n  position: absolute; \n\n  left: 10em; \n\n}\n\n```", "```js\n<div id=\"app\"> \n\n  <input type=\"number\"> \n\n  <div class=\"ball\" :style=\"'top: ' + height + 'em'\"></div> \n\n</div>\n\n```", "```js\nnew Vue({ \n\n   el: '#app', \n\n   data: { \n\n     height: 0 \n\n   } \n\n})\n\n```", "```js\n<div id=\"app\"> \n\n  <input type=\"number\" @input=\"move\"> \n\n  <div class=\"ball\" :style=\"'top: ' + height + 'em'\"></div> \n\n</div>\n\n```", "```js\nmethods: { \n\n  move (event) { \n\n    const newHeight = Number(event.target.value) \n\n    const _this = this \n\n    const animate = (time) => { \n\n      requestAnimationFrame(animate) \n\n      TWEEN.update(time) \n\n    } \n\n    new TWEEN.Tween({ H: this.height }) \n\n      .easing(TWEEN.Easing.Bounce.Out) \n\n      .to({ H: newHeight }, 1000) \n\n      .onUpdate(function () { \n\n        _this.height = this.H \n\n      }) \n\n      .start() \n\n    animate() \n\n  } \n\n}\n\n```", "```js\nconst newHeight = Number(event.target.value)\n\n```", "```js\nconst _this = this\n\n```", "```js\nconst animate = (time) => { \n\n  requestAnimationFrame(animate) \n\n  TWEEN.update(time) \n\n}\n\n```", "```js\nnew TWEEN.Tween({ H: this.height }) \n\n  .easing(TWEEN.Easing.Bounce.Out) \n\n  .to({ H: newHeight }, 1000) \n\n  .onUpdate(function () { \n\n    _this.height = this.H \n\n  }) \n\n.start()\n\n```", "```js\nTween({ H: this.height })\n\n```", "```js\neasing(TWEEN.Easing.Bounce.Out)\n\n```", "```js\n.to({ H: newHeight }, 1000)\n\n```", "```js\nonUpdate(function () { \n\n  _this.height = this.H \n\n})\n\n```", "```js\n<div id=\"app\"> \n\n  <button @click=\"showRecipe = !showRecipe\"> \n\n    Recipe \n\n  </button> \n\n  <button @click=\"showNews= !showNews\"> \n\n    Breaking News \n\n  </button> \n\n  <article v-if=\"showRecipe\" class=\"card\"> \n\n    <h3> \n\n      Apple Pie Recipe \n\n    </h3> \n\n    <p> \n\n      Ingredients: apple pie. Procedure: serve hot. \n\n    </p> \n\n  </article> \n\n  <article v-if=\"showNews\" class=\"card\"> \n\n    <h3> \n\n      Breaking news \n\n    </h3> \n\n    <p> \n\n      Donald Duck is the new president of the USA. \n\n    </p> \n\n  </article> \n\n</div>\n\n```", "```js\n.card { \n\n  position: relative; \n\n  background-color: FloralWhite; \n\n  width: 9em; \n\n  height: 9em; \n\n  margin: 0.5em; \n\n  padding: 0.5em; \n\n  font-family: sans-serif; \n\n  box-shadow: 0px 0px 10px 2px rgba(0,0,0,0.3); \n\n}\n\n```", "```js\nnew Vue({ \n\n  el: '#app', \n\n  data: { \n\n    showRecipe: false, \n\n    showNews: false \n\n  } \n\n})\n\n```", "```js\nVue.component('puff', { \n\n  functional: true, \n\n  render: function (createElement, context) { \n\n    var data = { \n\n      props: { \n\n        'enter-active-class': 'magictime puffIn', \n\n        'leave-active-class': 'magictime puffOut' \n\n      } \n\n    } \n\n    return createElement('transition', data, context.children) \n\n  } \n\n})\n\n```", "```js\n<div id=\"app\"> \n\n  <button @click=\"showRecipe = !showRecipe\"> \n\n    Recipe \n\n  </button> \n\n  <button @click=\"showNews = !showNews\"> \n\n    Breaking News \n\n  </button> \n\n <puff>\n\n    <article v-if=\"showRecipe\" class=\"card\"> \n\n      <h3> \n\n        Apple Pie Recipe \n\n      </h3> \n\n      <p> \n\n        Ingredients: apple pie. Procedure: serve hot. \n\n      </p> \n\n    </article> \n\n </puff> \n\n <puff>\n\n    <article v-if=\"showNews\" class=\"card\"> \n\n      <h3> \n\n        Breaking news \n\n      </h3> \n\n      <p> \n\n        Donald Duck is the new president of the USA. \n\n      </p> \n\n    </article> \n\n </puff>\n\n</div>\n\n```", "```js\nprops: { \n\n  'enter-active-class': 'magictime puffIn', \n\n  'leave-active-class': 'magictime puffOut' \n\n}\n\n```", "```js\nreturn createElement('transition', data, context.children)\n\n```", "```js\n<div id=\"app\"> \n\n  <button @click=\"kisses++\">\n\nKiss!</button> \n\n  <transition :name=\"kindOfTransformation\" :mode=\"transformationMode\"> \n\n    <p :key=\"transformation\">{{emoji}}{{transformation}}</p> \n\n  </transition> \n\n</div>\n\n```", "```js\nnew Vue({ \n\nel: '#app', \n\n  data: { \n\n    kisses: 0, \n\n    kindOfTransformation: 'fade', \n\n    transformationMode: 'in-out' \n\n  } \n\n})\n\n```", "```js\n.fade-enter-active, .fade-leave-active { \n\n  transition: opacity .5s \n\n} \n\n.fade-enter, .fade-leave-active { \n\n  opacity: 0 \n\n}\n\n```", "```js\ncomputed: { \n\n  transformation () { \n\n    if (this.kisses < 3) { \n\n      return 'frog' \n\n    } \n\n    if (this.kisses >= 3 && this.kisses <= 5) { \n\n      return 'princess' \n\n    } \n\n    if (this.kisses > 5) { \n\n         return 'santa' \n\n    } \n\n  }, \n\n  emoji () { \n\n    switch (this.transformation) { \n\n      case 'frog': return '\n\n' \n\n      case 'princess': return '\n\n' \n\n      case 'santa': return '\n\n' \n\n    } \n\n  } \n\n}\n\n```", "```js\n.zoom-leave-active, .zoom-enter-active { \n\n  transition: transform .5s; \n\n} \n\n.zoom-leave-active, .zoom-enter { \n\n  transform: scale(0) \n\n}\n\n```", "```js\ntransformation () { \n\n  if (this.kisses < 3) { \n\n    return 'frog' \n\n  } \n\n  if (this.kisses >= 3 && this.kisses <= 5) { \n\n this.transformationMode = 'out-in'\n\n    return 'princess' \n\n  } \n\n  if (this.kisses > 5) { \n\n this.kindOfTransformation = 'zoom'\n\n    return 'santa' \n\n  } \n\n}\n\n```", "```js\np { \n\n  margin: 0; \n\n  position: absolute; \n\n  font-size: 3em; \n\n}\n\n```"]