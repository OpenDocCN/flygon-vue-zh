["```js\n        new Vue({el:'#app'})\n\n```", "```js\n        <div id=\"app\">\n\n          {{'Hello ' + 'world'}}\n\n        </div>\n\n```", "```js\n<!DOCTYPE html> \n\n<html> \n\n  <body> \n\n    <div id=\"app\"></div> \n\n  </body> \n\n</html>\n\n```", "```js\nWe conquered 5 planets.<br/> \n\n{{'Hello ' + 5 + ' worlds'}}\n\n```", "```js\nWe conquered {{5 + 2}} planets.<br/> \n\nHello {{5 + 2}} worlds\n\n```", "```js\n<div id=\"app\"> \n\n  We conquered {{countWorlds}} planets.<br/> \n\n  Hello {{countWorlds}} worlds \n\n</div>\n\nnew Vue({ \n\n  el:'#app', \n\n  data: { \n\n    countWorlds: 5 + 2 \n\n  } \n\n})\n\n```", "```js\n        new Vue({el:'#app'})\n\n```", "```js\n        <div id=\"app\"> \n\n          <ul> \n\n            <li v-for=\"n in 4\">Hello!</li> \n\n          </ul> \n\n        </div>\n\n```", "```js\n<div id=\"app\"> \n\n  <ul> \n\n    <li v-for=\"n in 10\">{{11-n}}</li> \n\n    <li>launch missile!</li> \n\n  </ul> \n\n</div>\n\n```", "```js\n        <ul> \n\n            <li v-for=\"n in [10,9,8,7,6,5,4,3,2,1]\">{{n}}</li> \n\n            <li>launch missile!</li> \n\n        </ul>\n\n```", "```js\n        <ul> \n\n          <li v-for=\"n in countdown\">{{n}}</li> \n\n          <li>launch missile!</li> \n\n        </ul>\n\n```", "```js\n        new Vue({ \n\n          el:'#app', \n\n          data: { \n\n            countdown: [10,9,8,7,6,5,4,3,2,1] \n\n          } \n\n        })\n\n```", "```js\n        <div id=\"app\"> \n\n          <ul> \n\n            <li v-for=\"(animal, i) in animals\">\n\n              The {{animal}} goes {{sounds[i]}}\n\n            </li> \n\n          </ul> \n\n        </div>\n\n```", "```js\n        new Vue({ \n\n          el: '#app', \n\n          data: { \n\n            animals: ['dog', 'cat', 'bird'], \n\n            sounds: ['woof', 'meow', 'tweet'] \n\n          } \n\n        })\n\n```", "```js\n        <div id=\"app\"> \n\n          <ul> \n\n            <li v-for=\"(sound, name) in animals\"> \n\n              The {{name}} goes {{sound}} \n\n            </li> \n\n          </ul> \n\n        </div>\n\n```", "```js\n        new Vue({ \n\n          el: '#app', \n\n          data: { \n\n            animals: { \n\n              dog: 'woof', cat: 'meow', bird: 'tweet' \n\n            } \n\n          } \n\n        })\n\n```", "```js\n<ul> \n\n  <li v-for=\"n in 10\">{{11 - n}}</li> \n\n  <li>launch missile!</li> \n\n</ul>\n\n```", "```js\nv-for=\"(element, index) in array\"\n\n```", "```js\n<div id=\"app\"> \n\n  <ul> \n\n    <li v-for=\"n in countdown\">{{n}}</li> \n\n    <li>launch missile!</li> \n\n  </ul> \n\n</div>\n\n```", "```js\nnew Vue({\n\n  el:'#app',\n\n  data: {\n\n    countdown: \n\n      [10,9,8,7,6,5,4,3,2,1]\n\n  }\n\n})\n\n```", "```js\n        var vm = new Vue({\n\n          el:'#app',\n\n          data: {\n\n            countdown: []\n\n          }\n\n        })\n\n```", "```js\n        var counter = 10\n\n```", "```js\n        setInterval(function () { \n\n          if (counter > 0) { \n\n            vm.countdown.push(counter--) \n\n          } \n\n        }, 1000)\n\n```", "```js\nvm.countdown[counter] = counter-- // this won't work\n\n```", "```js\n<ul> \n\n  <li v-for=\"n in countdown\">{{n}}</li> \n\n  <li>{{ countdown.length === 10 ? 'launch missile!' : '...' }}</li> \n\n</ul>\n\n```", "```js\nvm.reactiveArray[index] = 'updated value' // won't affect the view \n\nvm.reactiveArray.length = 0 // nothing happens apparently\n\n```", "```js\nvm.reactiveArray.splice(index, 1, 'updated value') \n\nvm.reactiveArray.splice(0)\n\n```", "```js\n        <div id=\"app\"> \n\n          <button v-on:click=\"toast\">Toast bread</button> \n\n        </div>\n\n```", "```js\n        new Vue({el:'#app', methods:{toast(){alert('Tosted!')}}})\n\n```", "```js\n<div id=\"app\"> \n\n  <button v-on:click=\"toast\">Toast bread</button> \n\n  <input v-model=\"toastedBreads\" /> \n\n  Quantity to put in the oven: {{toastedBreads}} \n\n</div>\n\nnew Vue({ \n\n  el: '#app', \n\n  methods: { \n\n    toast () { \n\n      this.toastedBreads++ \n\n    } \n\n  }, \n\n  data: { \n\n    toastedBreads: 0 \n\n  } \n\n})\n\n```", "```js\n<div id=\"app\"> \n\n  <ul> \n\n    <li v-for=\"world in worlds\">{{world}}</li> \n\n  </ul> \n\n</div>\n\nnew Vue({ \n\n  el: '#app', \n\n  data: { \n\n    worlds: ['Terran', 'L24-D', 'Ares', 'New Kroy', 'Sebek', 'Vestra'] \n\n  } \n\n})\n\n```", "```js\n<ul> \n\n  <li v-for=\"(world, i) in worlds\"> \n\n    {{world}} \n\n  <button @click=\"worlds.splice(i, 1)\">Zap!</button> \n\n  </li> \n\n</ul> \n\n<input v-model=\"newWorld\"/> \n\n<button @click=\"worlds.push(newWorld)\">Conquer</button>\n\n```", "```js\n[Vue warn]: Property or method \"newWorld\" is not defined on the instance but referenced during render. Make sure to declare reactive data properties in the data option. (found in root instance)\n\n```", "```js\nnew Vue({ \n\n  el: '#app', \n\n  data: { \n\n    worlds: ['Terran', 'L24-D', 'Ares', 'New Kroy', 'Sebek', 'Vestra'], \n\n    newWorld: '' \n\n  } \n\n})\n\n```", "```js\n        <!DOCTYPE html> \n\n        <html> \n\n          <head> \n\n            <title>Vue.js app</title> \n\n          </head> \n\n          <body> \n\n            <div id=\"app\"> \n\n              {{'hello world'}} \n\n            </div> \n\n            <script \n\n              src=\"https://cdnjs.cloudflare.com/ajax\n\n               /libs/vue/2.0.0/vue.js\">\n\n            </script> \n\n            <script> \n\n              new Vue({el:'#app'}) \n\n            </script> \n\n          </body> \n\n        </html>\n\n```", "```js\n<script src=\"https://somecdn.com/moment.js/X.X.X/moment.js \"></script>\n\n```", "```js\nimport Vue from 'vue' \n\nimport App from './App.vue'\n\nnew Vue({ \n\n el: '#app', \n\n render: h => h(App) \n\n})\n\n```", "```js\n<template> \n\n  <div id=\"app\"> \n\n    <img src=\"./assets/logo.png\"> \n\n    <h1>\\{{ msg }}</h1> \n\n  </div> \n\n</template>\n\n<script> \n\nexport default { \n\n  data () { \n\n    return { \n\n      msg: 'Hello Vue 2.0!' \n\n    } \n\n  } \n\n} \n\n</script> \n\n<style> \n\nbody { \n\n  font-family: Helvetica, sans-serif; \n\n} \n\n</style>\n\n```", "```js\nimport MyLibrary from 'mylibrary'\n\n```", "```js\nnpm install moment\n\n```", "```js\nimport moment from 'moment'\n\n```", "```js\n{{'hello world' | capitalize }}\n\n```", "```js\n        Vue.filter('capitalize', function (string) { \n\n          var capitalFirst = string.charAt(0).toUpperCase() \n\n          var noCaseTail = string.slice(1, string.length) \n\n            return capitalFirst + noCaseTail \n\n        }) \n\n        new Vue({el:'#app'})\n\n```", "```js\n        {{'hello world' | capitalize }}\n\n```", "```js\nVue.filter('capitalize', function (string) { \n\n  var [first, ...tail] = string \n\n  return first.toUpperCase() + tail.join('') \n\n})\n\n```", "```js\n        new Vue({ \n\n          el: '#app', \n\n          data: { \n\n            cat: { \n\n              sound: 'meow' \n\n            } \n\n          } \n\n        })\n\n```", "```js\n        <p>Cat object: {{ cat }}</p>\n\n```", "```js\n npm install -g git://github.com/vuejs/vue-migration-helper.git\n\n```", "```js\n vue-migration-helper\n\n```", "```js\nvar eventBus = new Vue()\n\n```", "```js\nnew Vue({ \n\n  el: '#app', \n\n  components: { \n\n   comp1: { \n\n         template: '<div/>', \n\n         created () { \n\n         eventBus.$on('brew', () => { \n\n         console.log('HTTP Error 418: I'm a teapot') \n\n        }) \n\n      } \n\n    }, \n\n    comp2: { \n\n         template: '<div/>', \n\n         created () { \n\n         eventBus.$emit('brew') \n\n      } \n\n    } \n\n  } \n\n})\n\n```", "```js\n<div id=\"app\"> \n\n  <comp1></comp1> \n\n  <comp2></comp2> \n\n</div>\n\n```", "```js\n<div id=\"app\"> \n\n  {!msg!} \n\n</div>\n\nnew Vue({ \n\n el: '#app', \n\n data: { \n\n   msg:'hello world' \n\n }, \n\n delimiters: ['{!','!}'] \n\n})\n\n```"]