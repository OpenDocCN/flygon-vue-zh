["```js\n    npm install -g @vue/cli@next\n    ```", "```js\n    vue create .\n    ```", "```js\n    yarn global add @vue/cli@next\n    ```", "```js\n    yarn create .\n    ```", "```js\n<template>\n\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0<h1>Select a Puzzle</h1>\n\u00a0\u00a0\u00a0\u00a0<div v-for=\"p of puzzles\" :key=\"p.id\" class=\"row\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<img :src=\"require(`../assets/${p.image}`)\" />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<h2>{{p.title}}</h2>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"play-button\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<button @click=\"selectPuzzle(p)\">Play</button>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0</div>\n</template>\n```", "```js\n<script>\nexport default {\n\u00a0\u00a0data() {\n\u00a0\u00a0\u00a0\u00a0return {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0puzzles: [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ id: 'cut-pink', image: \"pink.jpg\", title: \"Pink \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Flower\" },\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ id: 'cut-purple', image: \"purple.jpg\", title: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Purple Flower\" },\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ id: 'cut-red', image: \"red.jpg\", title: \"Red \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Flower\" },\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0},\n...\n<style scoped>\n.row {\n\u00a0\u00a0display: flex;\n\u00a0\u00a0max-width: 90vw;\n\u00a0\u00a0flex-wrap: wrap;\n\u00a0\u00a0justify-content: space-between;\n}\n.row img {\n\u00a0\u00a0width: 100px;\n}\n.row .play-button {\n\u00a0\u00a0padding-top: 25px;\n}\n</style>\n```", "```js\n<template>\n\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0<h1>Records</h1>\n\u00a0\u00a0\u00a0\u00a0<button @click=\"getRecords\">Refresh</button>\n\u00a0\u00a0\u00a0\u00a0<div v-for=\"(r, index) of records\" :key=\"index\">{{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0index + 1}} - {{r.elapsedTime}}</div>\n\u00a0\u00a0</div>\n</template>\n<script>\nexport default {\n\u00a0\u00a0data() {\n\u00a0\u00a0\u00a0\u00a0return {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0records: [],\n\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0},\n\u00a0\u00a0created() {\n\u00a0\u00a0\u00a0\u00a0this.getRecords();\n\u00a0\u00a0},\n\u00a0\u00a0methods: {\n\u00a0\u00a0\u00a0\u00a0getRecords() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const records = JSON.parse(localStorage.getItem(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"records\")) || [];\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.records = records;\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0},\n};\n</script>\n```", "```js\n<script>\nimport moment from \"moment\";\nconst correctPuzzleArray = [\n\u00a0\u00a0\"image_part_001.jpg\",\n\u00a0\u00a0\"image_part_002.jpg\",\n\u00a0\u00a0\"image_part_003.jpg\",\n\u00a0\u00a0\"image_part_004.jpg\",\n\u00a0\u00a0\"image_part_005.jpg\",\n\u00a0\u00a0\"image_part_006.jpg\",\n\u00a0\u00a0\"image_part_007.jpg\",\n\u00a0\u00a0\"image_part_008.jpg\",\n\u00a0\u00a0\"image_part_009.jpg\",\n];\n...\n</script>\n```", "```js\n<script>\n...\nexport default {\n\u00a0\u00a0name: \"SliderPuzzle\",\n\u00a0\u00a0props: {\n\u00a0\u00a0\u00a0\u00a0puzzleId: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type: String,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0default: \"cut-pink\",\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0},\n\u00a0\u00a0data() {\n\u00a0\u00a0\u00a0\u00a0return {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0correctPuzzleArray,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0shuffledPuzzleArray: [...correctPuzzleArray].sort(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0() => Math.random() - 0.5\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0indexesToSwap: [],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0timer: undefined,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0startDateTime: new Date(),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0currentDateTime: new Date(),\n\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0},\n\u00a0\u00a0...\n};\n</script>\n```", "```js\n<script>\n...\nexport default {\n\u00a0\u00a0...\n\u00a0\u00a0computed: {\n\u00a0\u00a0\u00a0\u00a0isWinning() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for (let i = 0; i < correctPuzzleArray.length; i++) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (correctPuzzleArray[i] !== \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.shuffledPuzzleArray[i]) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return false;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return true;\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0elapsedDiff() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const currentDateTime = moment(this.currentDateTime);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const startDateTime = moment(this.startDateTime);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return currentDateTime.diff(startDateTime);\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0elapsedTime() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return moment.utc(this.elapsedDiff).format(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"HH:mm:ss\");\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0},\n};\n</script>\n```", "```js\n<script>\n...\nexport default {\n\u00a0\u00a0...\n\u00a0\u00a0methods: {\n\u00a0\u00a0\u00a0\u00a0swap(index) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!this.timer) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (this.indexesToSwap.length < 2) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.indexesToSwap.push(index);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (this.indexesToSwap.length === 2) {\n...\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.resetTime();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0clearInterval(this.timer);\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0resetTime() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.startDateTime = new Date();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.currentDateTime = new Date();\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0recordSpeedRecords() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0let records = JSON.parse(localStorage.getItem(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"records\")) || [];\n...\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0localStorage.setItem(\"records\", stringifiedRecords);\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0},\n};\n</script>\n```", "```js\n[this.shuffledPuzzleArray[index1], this.shuffledPuzzleArray[index2]] = [this.shuffledPuzzleArray[index2], this.shuffledPuzzleArray[index1]];\n```", "```js\n<template>\n\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0<h1>Swap the Images to Win</h1>\n\u00a0\u00a0\u00a0\u00a0<button @click=\"start\" id=\"start-button\">Start \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Game</button>\n\u00a0\u00a0\u00a0\u00a0<button @click=\"stop\" id=\"quit-button\">Quit</button>\n\u00a0\u00a0\u00a0\u00a0<p>Elapsed Time: {{ elapsedTime }}</p>\n\u00a0\u00a0\u00a0\u00a0<p v-if=\"isWinning\">You win</p>\n\u00a0\u00a0\u00a0\u00a0<div class=\"row\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class=\"column\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0v-for=\"(s, index) of shuffledPuzzleArray\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:key=\"s\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0@click=\"swap(index)\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<img :src=\"require(`../assets/${puzzleId}/${s}`)\" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0</div>\n</template>\n```", "```js\n<style scoped>\n.row {\n\u00a0\u00a0display: flex;\n\u00a0\u00a0max-width: 90vw;\n\u00a0\u00a0flex-wrap: wrap;\n}\n.column {\n\u00a0\u00a0flex-grow: 1;\n\u00a0\u00a0width: 33%;\n}\n.column img {\n\u00a0\u00a0max-width: 100%;\n}\n</style>\n```", "```js\n<template>\n\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0<Puzzles @puzzle-changed=\"selectedPuzzleId = $event\" />\n\u00a0\u00a0\u00a0\u00a0<Records />\n\u00a0\u00a0\u00a0\u00a0<SliderPuzzle :puzzleId=\"selectedPuzzleId\" />\n\u00a0\u00a0</div>\n</template>\n<script>\nimport SliderPuzzle from \"./components/SliderPuzzle.vue\";\nimport Puzzles from \"./components/Puzzles.vue\";\nimport Records from \"./components/Records.vue\";\nexport default {\n\u00a0\u00a0name: \"App\",\n\u00a0\u00a0components: {\n\u00a0\u00a0\u00a0\u00a0SliderPuzzle,\n\u00a0\u00a0\u00a0\u00a0Puzzles,\n\u00a0\u00a0\u00a0\u00a0Records,\n\u00a0\u00a0},\n\u00a0\u00a0data() {\n\u00a0\u00a0\u00a0\u00a0return {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0selectedPuzzleId: \"cut-pink\",\n\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0},\n};\n</script>\n```", "```js\n\"jest\": {\n\"setupFiles\": [\n\"jest-localstorage-mock\"\n\u00a0\u00a0]\n}\n```", "```js\n{\n\u00a0\u00a0\"name\": \"vue-example-ch3-slider-puzzle\",\n\u00a0\u00a0\"version\": \"0.1.0\",\n\u00a0\u00a0\"private\": true,\n\u00a0\u00a0\"scripts\": {\n\u00a0\u00a0\u00a0\u00a0\"serve\": \"vue-cli-service serve\",\n\u00a0\u00a0\u00a0\u00a0\"build\": \"vue-cli-service build\",\n\u00a0\u00a0\u00a0\u00a0\"test:unit\": \"vue-cli-service test:unit\",\n\u00a0\u00a0\u00a0\u00a0\"lint\": \"vue-cli-service lint\"\n\u00a0\u00a0},\n\u00a0\u00a0\"dependencies\": {\n\u00a0\u00a0\u00a0\u00a0\"core-js\": \"^3.6.5\",\n\u00a0\u00a0\u00a0\u00a0\"lodash\": \"^4.17.20\",\n\u00a0\u00a0\u00a0\u00a0\"moment\": \"^2.28.0\",\n\u00a0\u00a0\u00a0\u00a0\"vue\": \"^3.0.0-0\"\n\u00a0\u00a0},\n\u00a0\u00a0\"devDependencies\": {\n...\n\u00a0\u00a0\u00a0\u00a0\"eslint-plugin-vue\": \"^7.0.0-0\",\n\u00a0\u00a0\u00a0\u00a0\"jest-localstorage-mock\": \"^2.4.3\",\n\u00a0\u00a0\u00a0\u00a0\"typescript\": \"~3.9.3\",\n\u00a0\u00a0\u00a0\u00a0\"vue-jest\": \"^5.0.0-0\"\n\u00a0\u00a0},\n\u00a0\u00a0\"jest\": {\n\u00a0\u00a0\u00a0\u00a0\"setupFiles\": [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"jest-localstorage-mock\"\n\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0}\n}\n```", "```js\nimport { mount } from '@vue/test-utils'\nimport Puzzles from '@/components/Puzzles.vue'\ndescribe('Puzzles.vue', () => {\n\u00a0\u00a0it('emit puzzled-changed event when Play button is \n\u00a0\u00a0\u00a0\u00a0clicked', () => {\n\u00a0\u00a0\u00a0\u00a0const wrapper = mount(Puzzles)\n\u00a0\u00a0\u00a0\u00a0wrapper.find('.play-button button').trigger('click');\n\u00a0\u00a0\u00a0\u00a0expect(wrapper.emitted()).toHaveProperty('puzzle-\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0changed');\n\u00a0\u00a0})\n\u00a0\u00a0it('emit puzzled-changed event with the puzzle ID when \n\u00a0\u00a0\u00a0\u00a0Play button is clicked', () => {\n\u00a0\u00a0\u00a0\u00a0const wrapper = mount(Puzzles)\n\u00a0\u00a0\u00a0\u00a0wrapper.find('.play-button button').trigger('click');\n\u00a0\u00a0\u00a0\u00a0const puzzleChanged = wrapper.emitted('puzzle-\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0changed');\n\u00a0\u00a0\u00a0\u00a0expect(puzzleChanged[0]).toEqual([wrapper.vm.puzzles[0].id]\n );\n\u00a0\u00a0})\n})\n```", "```js\nwrapper.find('.play-button button').trigger('click');\n```", "```js\nimport { shallowMount } from '@vue/test-utils'\nimport 'jest-localstorage-mock';\nimport Records from '@/components/Records.vue'\ndescribe('Records.vue', () => {\n\u00a0\u00a0it('gets records from local storage', () => {\n\u00a0\u00a0\u00a0\u00a0shallowMount(Records, {})\n\u00a0\u00a0\u00a0\u00a0expect(localStorage.getItem).\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0toHaveBeenCalledWith('records');\n\u00a0\u00a0})\n})\n```", "```js\nimport { mount } from '@vue/test-utils'\nimport SliderPuzzle from '@/components/SliderPuzzle.vue'\nimport 'jest-localstorage-mock';\njest.useFakeTimers();\ndescribe('SliderPuzzle.vue', () => {\n\u00a0\u00a0it('inserts the index of the image to swap when we click \n\u00a0\u00a0\u00a0\u00a0on an image', () => {\n\u00a0\u00a0\u00a0\u00a0const wrapper = mount(SliderPuzzle)\n\u00a0\u00a0\u00a0\u00a0wrapper.find('#start-button').trigger('click')\n...\n\u00a0\u00a0\u00a0\u00a0expect(firstImage).toBe(newSecondImage);\n\u00a0\u00a0\u00a0\u00a0expect(secondImage).toBe(newFirstImage);\n\u00a0\u00a0})\n\u00a0\u00a0...\n\u00a0\u00a0})\n\u00a0\u00a0afterEach(() => {\n\u00a0\u00a0\u00a0\u00a0jest.clearAllMocks();\n\u00a0\u00a0});\n})\n```", "```js\nexpect(firstImage).toBe(newSecondImage);\nexpect(secondImage).toBe(newFirstImage);\n```", "```js\nimport { mount } from '@vue/test-utils'\nimport SliderPuzzle from '@/components/SliderPuzzle.vue'\nimport 'jest-localstorage-mock';\njest.useFakeTimers();\ndescribe('SliderPuzzle.vue', () => {\n\u00a0\u00a0...\n\u00a0\u00a0it('starts timer when start method is called', () => {\n\u00a0\u00a0\u00a0\u00a0const wrapper = mount(SliderPuzzle);\n\u00a0\u00a0\u00a0\u00a0wrapper.vm.start();\n\u00a0\u00a0\u00a0\u00a0expect(setInterval).toHaveBeenCalledTimes(1);\n\u00a0\u00a0\u00a0\u00a0expect(setInterval).toHaveBeenLastCalledWith(expect.any(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Function), 1000);\n\u00a0\u00a0})\n\u00a0\u00a0...\n\u00a0\u00a0afterEach(() => {\n\u00a0\u00a0\u00a0\u00a0jest.clearAllMocks();\n\u00a0\u00a0});\n})\n```", "```js\nimport { mount } from '@vue/test-utils'\nimport SliderPuzzle from '@/components/SliderPuzzle.vue'\nimport 'jest-localstorage-mock';\njest.useFakeTimers();\ndescribe('SliderPuzzle.vue', () => {\n\u00a0\u00a0...\n\u00a0\u00a0it('stops timer when stop method is called', () => {\n\u00a0\u00a0\u00a0\u00a0const wrapper = mount(SliderPuzzle);\n\u00a0\u00a0\u00a0\u00a0wrapper.vm.stop();\n\u00a0\u00a0\u00a0\u00a0expect(clearInterval).toHaveBeenCalledTimes(1);\n\u00a0\u00a0})\n\u00a0\u00a0it('shows the elapsed time', () => {\n\u00a0\u00a0\u00a0\u00a0const wrapper = mount(SliderPuzzle, {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0data() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0currentDateTime: new Date(2020, 0, 1, 0, 0, 1),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0startDateTime: new Date(2020, 0, 1, 0, 0, 0),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0\u00a0\u00a0expect(wrapper.html()).toContain('00:00:01')\n\u00a0\u00a0})\n\u00a0\u00a0...\n\u00a0\u00a0afterEach(() => {\n\u00a0\u00a0\u00a0\u00a0jest.clearAllMocks();\n\u00a0\u00a0});\n})\n```"]