["```js\nphp artisan make:migration create_chats_table\nphp artisan make:migration create_messages_table\n```", "```js\n<?php\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\nclass CreateChatsTable extends Migration\n{\n\u00a0\u00a0\u00a0\u00a0public function up()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Schema::create('chats', function (Blueprint $table)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$table->id();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$table->string('name');\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$table->timestamp('created_at')->useCurrent();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$table->timestamp('updated_at')->useCurrent();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public function down()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Schema::dropIfExists('chats');\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```js\n<?php\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\nclass CreateMessagesTable extends Migration\n{\n\u00a0\u00a0\u00a0\u00a0public function up()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Schema::create('messages', function (Blueprint \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$table) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$table->id();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$table->unsignedBigInteger('user_id');\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$table->unsignedBigInteger('chat_id');\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$table->string('message');\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$table->timestamp('created_at')->useCurrent();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$table->timestamp('updated_at')->useCurrent();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$table->foreign('user_id')->references('id')-\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0>on('users');\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$table->foreign('chat_id')->references('id')-\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0>on('chats');\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public function down()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Schema::dropIfExists('messages');\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```js\nDB_CONNECTION=sqlite\nDB_DATABASE=C:\\vue-example-ch8-chat-app\\backend\\db.sqlite\n```", "```js\nBROADCAST_DRIVER=redis\nQUEUE_CONNECTION=redis\nQUEUE_DRIVER=sync\n```", "```js\nREDIS_HOST=127.0.0.1\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n```", "```js\n<?php\nnamespace Database\\Seeders;\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Support\\Facades\\DB;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Support\\Str;\nuse App\\Models\\User;\nuse App\\Models\\Chat;\nclass DatabaseSeeder extends Seeder\n{\n\u00a0\u00a0\u00a0\u00a0public function run()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->addUsers();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->addChats();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->addMessages();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0private function addUsers()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for ($x = 0; $x <= 1; $x++) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0DB::table('users')->insert([\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'name' => 'user'.$x,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'email' => 'user'.$x.'@gmail.com',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'password' => Hash::make('password'),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0...\n}\n```", "```js\n\u00a0\u00a0\u00a0\u00a0...\n\u00a0\u00a0\u00a0\u00a0private function addChats()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for ($x = 0; $x <= 1; $x++) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0DB::table('chats')->insert([\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'name' => 'chat '.$x,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0...\n```", "```js\n...\n\u00a0\u00a0\u00a0\u00a0private function addMessages()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for ($x = 0; $x <= 1; $x++) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0DB::table('messages')->insert([\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'message' => 'hello',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'user_id' => User::all()->get(0)->id,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'chat_id' => Chat::all()->get($x)->id\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0DB::table('messages')->insert([\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'message' => 'how are you',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'user_id' => User::all()->get(1)->id,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'chat_id' => Chat::all()->get($x)->id\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n...\n```", "```js\nphp artisan make:controller Chat\n```", "```js\n...\n\u00a0\u00a0\u00a0\u00a0public function create(Request $request)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$validator = Validator::make($request->all(), [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'name' => 'required|string|max:255',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if($validator->fails()){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return response()->json($validator->errors()-\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0>toJson(), 400);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$chat = Chat::create([\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'name' => $request->get('name'),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return response()->json($chat, 201);\n\u00a0\u00a0\u00a0\u00a0}\n...\n```", "```js\n...\n\u00a0\u00a0\u00a0\u00a0public function update(Request $request)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$validator = Validator::make($request->all(), [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'name' => 'required|string|max:255',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if($validator->fails()){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return response()->json($validator->errors()-\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0>toJson(), 400);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$chat = Chat::find($request->id);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$chat->name =\u00a0\u00a0$request->get('name');\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$chat->save();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return response()->json($chat);\n\u00a0\u00a0\u00a0\u00a0}\n...\n```", "```js\n...\n\u00a0\u00a0\u00a0\u00a0public function delete(Request $request)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$chat = Chat::find($request->id);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$chat->delete();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return response(null, 200);\n\u00a0\u00a0\u00a0\u00a0}\n...\n```", "```js\n<?php\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\AuthController;\nuse App\\Http\\Controllers\\UserController;\nuse App\\Http\\Controllers\\ChatController;\nuse App\\Http\\Controllers\\MessageController;\nRoute::post('register', [UserController::class, 'register']);\nRoute::group([\n\u00a0\u00a0\u00a0\u00a0'middleware' => 'api',\n\u00a0\u00a0\u00a0\u00a0'prefix' => 'auth'\n], function () {\n\u00a0\u00a0\u00a0\u00a0Route::post('login', [AuthController::class, 'login']);\n\u00a0\u00a0\u00a0\u00a0Route::post('logout', [AuthController::class, \n\u00a0\u00a0\u00a0\u00a0\u00a0'logout']);\n\u00a0\u00a0\u00a0\u00a0Route::post('refresh', [AuthController::class, \n\u00a0\u00a0\u00a0\u00a0\u00a0'refresh']);\n\u00a0\u00a0\u00a0\u00a0Route::post('me', [AuthController::class, 'me']);\n\u00a0\u00a0\u00a0\u00a0\u00a0});\n...\n\u00a0\u00a0\u00a0\u00a0Route::get('{chat_id}', [MessageController::class, \n\u00a0\u00a0\u00a0\u00a0\u00a0'getAll']);\n\u00a0\u00a0\u00a0\u00a0Route::post('create', [MessageController::class, \n\u00a0\u00a0\u00a0\u00a0\u00a0'create']);\n});\n```", "```js\nphp artisan make:controller AuthController\n```", "```js\ncomposer require tymon/jwt-auth\n```", "```js\nphp artisan vendor:publish --provider=\"Tymon\\JWTAuth\\Providers\\LaravelServiceProvider\"\n```", "```js\nphp artisan jwt:secret\n```", "```js\n<?php\nreturn [\n\u00a0\u00a0\u00a0\u00a0'defaults' => [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'guard' => 'api',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'passwords' => 'users',\n\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0'guards' => [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'web' => [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'driver' => 'session',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'provider' => 'users',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'api' => [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'driver' => 'jwt',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'provider' => 'users',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0'providers' => [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'users' => [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'driver' => 'eloquent',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'model' => App\\Models\\User::class,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0'passwords' => [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'users' => [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'provider' => 'users',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'table' => 'password_resets',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'expire' => 60,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'throttle' => 60,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0'password_timeout' => 10800,\n];\n```", "```js\ncomposer require fruitcake/laravel-cors\n```", "```js\n<?php\nnamespace App\\Http;\nuse Illuminate\\Foundation\\Http\\Kernel as HttpKernel;\nclass Kernel extends HttpKernel\n{\n\u00a0\u00a0\u00a0\u00a0protected $middleware = [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\\App\\Http\\Middleware\\TrustProxies::class,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\\Fruitcake\\Cors\\HandleCors::class,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\\App\\Http\\Middleware\\\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0PreventRequestsDuringMaintenance::class,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\\Illuminate\\Foundation\\Http\\Middleware\\\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ValidatePostSize::class,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\\App\\Http\\Middleware\\TrimStrings::class,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\\Illuminate\\Foundation\\Http\\Middleware\\\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ConvertEmptyStringsToNull::class,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\\Fruitcake\\Cors\\HandleCors::class,\n\u00a0\u00a0\u00a0\u00a0];\n...\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'password.confirm' =>\u00a0\u00a0\\Illuminate\\Auth\\Middleware\\\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0RequirePassword::class,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'signed' => \\Illuminate\\Routing\\Middleware\\\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ValidateSignature::class,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'throttle' => \\Illuminate\\Routing\\Middleware\\\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ThrottleRequests::class,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'verified' => \\Illuminate\\Auth\\Middleware\\\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EnsureEmailIsVerified::class,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'jwt.verify' => \\App\\Http\\Middleware\\\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0JwtMiddleware::class,\n\u00a0\u00a0\u00a0\u00a0];\n}\n```", "```js\n'jwt.verify' => \\App\\Http\\Middleware\\JwtMiddleware::class,\n```", "```js\ncomposer require predis/predis\n```", "```js\n<?php\nuse Illuminate\\Support\\Str;\nreturn [\n\u00a0\u00a0\u00a0\u00a0...\u00a0\u00a0\u00a0\u00a0'redis' => [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'client' => env('REDIS_CLIENT', 'predis'),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'options' => [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'cluster' => env('REDIS_CLUSTER', 'redis'),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'prefix' => env('REDIS_PREFIX', Str::slug(\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0env('APP_NAME', 'laravel'), '_').'_database_'),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'cache' => [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'url' => env('REDIS_URL'),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'host' => env('REDIS_HOST', '127.0.0.1'),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'password' => env('REDIS_PASSWORD', null),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'port' => env('REDIS_PORT', '6379'),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'database' => env('REDIS_CACHE_DB', '1'),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0],\n];\n```", "```js\n<?php\nnamespace App\\Events;\n...\nclass MessageSent implements ShouldBroadcast\n{\n\u00a0\u00a0\u00a0\u00a0use InteractsWithSockets, SerializesModels;\n\u00a0\u00a0\u00a0\u00a0public $user;\n\u00a0\u00a0\u00a0\u00a0public $message;\n\u00a0\u00a0\u00a0\u00a0public function __construct(User $user, Message \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$message)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->user = $user;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->message = $message;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public function broadcastOn()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return new Channel('chat');\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public function broadcastAs()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 'MessageSent';\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```js\n<?php\nuse Illuminate\\Support\\Facades\\Broadcast;\nBroadcast::channel('chat', function () {\n\u00a0\u00a0\u00a0\u00a0return true;\n});\n```", "```js\n{\n \"authHost\": \"http://localhost:8000\",\n \"authEndpoint\": \"/broadcasting/auth\",\n \"clients\": [\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\"appId\": \"APP_ID\",\n\u00a0\u00a0\u00a0\"key\": \"c84077a4dabd8ab2a60e51b051c9d0ea\"\n\u00a0\u00a0}\n ...\n\u00a0\u00a0},\n\u00a0\u00a0\"sqlite\": {\n\u00a0\u00a0\u00a0\"databasePath\": \"/database/laravel-echo-server.sqlite\"\n\u00a0\u00a0},\n\u00a0\u00a0\"publishPresence\": true\n },\n \"devMode\": true,\n \"host\": \"127.0.0.1\",\n ...\n \"http\": true,\n\u00a0\u00a0\"redis\": true\n },\n \"apiOriginAllow\": {\n\u00a0\u00a0\"allowCors\": true,\n\u00a0\u00a0\"allowOrigin\": \"*\",\n\u00a0\u00a0\"allowMethods\": \"GET, POST\",\n\u00a0\u00a0\"allowHeaders\": \"Origin, Content-Type, X-Auth-Token, \u00a0\u00a0\u00a0\u00a0X-Requested-With, Accept, Authorization, X-CSRF-TOKEN, \u00a0\u00a0\u00a0\u00a0X-Socket-Id\"\n }\n}\n```", "```js\nsudo apt update\nsudo apt install redis-server\n```", "```js\nredis-server\n```", "```js\nphp artisan config:cache\nphp artisan config:clear\nphp artisan route:cache\nphp artisan route:clear\n```", "```js\nnpm install axios socket.io-client laravel-echo\n```", "```js\nexport const APIURL = 'http://localhost:8000';\n```", "```js\n...\naxios.interceptors.request.use((config) => {\n\u00a0\u00a0if (config.url.includes('login') || \n\u00a0\u00a0\u00a0config.url.includes('register')) {\n\u00a0\u00a0\u00a0\u00a0return config;\n\u00a0\u00a0}\n\u00a0\u00a0return {\n\u00a0\u00a0\u00a0\u00a0...config, headers: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Authorization: `Bearer ${localStorage.getItem('token')}`,\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0}\n}, (error) => {\n\u00a0\u00a0return Promise.reject(error);\n});\naxios.interceptors.response.use((response) => {\n\u00a0\u00a0const { data: { status } } = response;\n\u00a0\u00a0if (status === 'Token is Expired') {\n\u00a0\u00a0\u00a0\u00a0router.push('/login');\n\u00a0\u00a0}\n\u00a0\u00a0return response;\n}, (error) => {\n\u00a0\u00a0return Promise.reject(error);\n});\ncreateApp(App).use(router).mount('#app')\n```", "```js\n<template>\n\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0<h1>{{ edit ? \"Edit\" : \"Add\" }} Chatroom</h1>\n\u00a0\u00a0\u00a0\u00a0<form @submit.prevent=\"submit\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"form-field\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<label for=\"name\">Name</label>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input v-model=\"form.name\" type=\"text\" name=\"name\" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input type=\"submit\" />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0</form>\n\u00a0\u00a0</div>\n</template>\n...\n```", "```js\n<script>\nimport axios from \"axios\";\nimport { APIURL } from \"../constants\";\nexport default {\n\u00a0\u00a0name: \"ChatroomForm\",\n\u00a0\u00a0...\n\u00a0\u00a0async created() {\n\u00a0\u00a0\u00a0\u00a0if (this.edit) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const { data } = await \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0axios.get(`${APIURL}/api/chat/${this.id}`);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.form = data;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0},\n };\n</script>\n```", "```js\n<template>\n\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0<ul>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<li>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<router-link to=\"/\">Chatrooms</router-link>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</li>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<li><a href=\"#\" @click=\"logOut\">Logout</a></li>\n\u00a0\u00a0\u00a0\u00a0</ul>\n\u00a0\u00a0</div>\n</template>\n<script>\nimport axios from \"axios\";\nimport { APIURL } from \"../constants\";\nexport default {\n\u00a0\u00a0name: \"NavBar\",\n\u00a0\u00a0methods: {\n\u00a0\u00a0\u00a0\u00a0async logOut() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0await axios.post(`${APIURL}/api/auth/logout`);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0localStorage.clear();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.$router.push(\"/login\");\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0},\n};\n</script>\n...\n```", "```js\n<style scoped>\nul {\n\u00a0\u00a0list-style-type: none;\n}\nul li {\n\u00a0\u00a0display: inline;\n\u00a0\u00a0margin-right: 10px;\n}\n</style>\n```", "```js\n<template>\n\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0<NavBar></NavBar>\n\u00a0\u00a0\u00a0\u00a0<ChatroomForm></ChatroomForm>\n\u00a0\u00a0</div>\n</template>\n<script>\nimport ChatroomForm from \"@/components/ChatroomForm\";\nimport NavBar from \"@/components/NavBar\";\nexport default {\n\u00a0\u00a0components: {\n\u00a0\u00a0\u00a0\u00a0ChatroomForm,\n\u00a0\u00a0\u00a0\u00a0NavBar\n\u00a0\u00a0},\n};\n</script>\n```", "```js\n...\n<script>\nimport axios from \"axios\";\nimport { APIURL } from \"../constants\";\nimport NavBar from \"@/components/NavBar\";\nexport default {\n\u00a0\u00a0name: \"Chatroom\",\n\u00a0\u00a0components: {\n\u00a0\u00a0\u00a0\u00a0NavBar,\n\u00a0\u00a0},\n\u00a0\u00a0beforeMount() {\n\u00a0\u00a0\u00a0\u00a0this.getChatMessages();\n\u00a0\u00a0\u00a0\u00a0this.addChatListener();\n\u00a0\u00a0},\n\u00a0\u00a0data() {\n\u00a0\u00a0\u00a0\u00a0return {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0chatMessages: [],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0message: \"\",\n\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0},\n\u00a0\u00a0...};\n</script>\n```", "```js\n...\n<script>\n...\nexport default {\n\u00a0\u00a0...\n\u00a0\u00a0methods: {\n\u00a0\u00a0\u00a0\u00a0async getChatMessages() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const { id } = this.$route.params;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const { data } = await \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0axios.get(`${APIURL}/api/message/${id}`);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.chatMessages = data;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.$nextTick(() => {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const container = this.$refs.container;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0container.scrollTop = container.scrollHeight;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0async sendChatMessage() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const { message } = this;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!message) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const { id: chat_id } = this.$route.params;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0() => {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.getChatMessages();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0);\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0},\n</script>\n```", "```js\n<template>\n\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0<NavBar></NavBar>\n\u00a0\u00a0\u00a0\u00a0<h1>Chatroom</h1>\n\u00a0\u00a0\u00a0\u00a0<div id=\"chat-messages\" ref=\"container\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"row\" v-for=\"m of chatMessages\" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:key=\"m.id\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<b>{{ m.user.name }} - {{ m.created_at }}</b>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div>{{ m.message }}</div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0<form @submit.prevent=\"sendChatMessage\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"form-field\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<label for=\"message\">Message</label>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input v-model=\"message\" type=\"text\" name=\"message\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input type=\"submit\" />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0</form>\n\u00a0\u00a0</div>\n</template>\n```", "```js\n<style scoped>\n#chat-messages {\n\u00a0\u00a0height: 300px;\n\u00a0\u00a0overflow-y: scroll;\n}\n.row {\n\u00a0\u00a0display: flex;\n\u00a0\u00a0flex-wrap: wrap;\n}\n.row div:first-child {\n\u00a0\u00a0width: 30%;\n}\n</style>\n```", "```js\n<template>\n\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0<NavBar></NavBar>\n\u00a0\u00a0\u00a0\u00a0<h1>Chatrooms</h1>\n\u00a0\u00a0\u00a0\u00a0<button @click=\"createChatRoom\">Create Chatroom\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</button>\n\u00a0\u00a0\u00a0\u00a0<table id=\"table\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<thead>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<tr>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<th>Name</th>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<th>Go</th>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<th>Edit</th>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<th>Delete</th>\n...\n\u00a0\u00a0beforeMount() {\n\u00a0\u00a0\u00a0\u00a0this.getChatRooms();\n\u00a0\u00a0},\n};\n</script>\n<style scoped>\n#table {\n\u00a0\u00a0width: 100%;\n...\n</style>\n```", "```js\n<template>\n\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0<NavBar></NavBar>\n\u00a0\u00a0\u00a0\u00a0<ChatroomForm edit :id=\"$route.params.id\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</ChatroomForm>\n\u00a0\u00a0</div>\n</template>\n<script>\nimport ChatroomForm from \"@/components/ChatroomForm\";\nimport NavBar from \"@/components/NavBar\";\nexport default {\n\u00a0\u00a0components: {\n\u00a0\u00a0\u00a0\u00a0ChatroomForm,\n\u00a0\u00a0\u00a0\u00a0NavBar,\n\u00a0\u00a0},\n};\n</script>\n```", "```js\n<template>\n\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0<h1>Login</h1>\n\u00a0\u00a0\u00a0\u00a0<form @submit.prevent=\"login\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"form-field\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<label for=\"email\">Email</label>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input v-model=\"form.email\" type=\"email\" name=\"email\" />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"form-field\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<label for=\"password\">Password</label>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input v-model=\"form.password\" type=\"password\"\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name=\"password\" />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input type=\"submit\" value=\"Log in\" />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<button type=\"button\" @click=\"goToRegister\">Register</\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0button>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0</form>\n\u00a0\u00a0</div>\n</template>\n<script>\nimport axios from \"axios\";\nimport { APIURL } from \"../constants\";\nexport default {\n\u00a0\u00a0name: \"Login\",\n\u00a0\u00a0data() {\n\u00a0\u00a0\u00a0\u00a0return {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0form: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0email: \"\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0password: \"\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0},\n\u00a0\u00a0methods: {\n\u00a0\u00a0\u00a0\u00a0async login() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const { email, password } = this.form;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!email || !password) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0alert(\"Email and password are required\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0data: { access_token },\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} = await axios.post(`${APIURL}/api/auth/login`, {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0email,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0password,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0localStorage.setItem(\"token\", access_token);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.$router.push(\"/\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} catch (error) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0alert(\"Invalid username or password\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0goToRegister() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.$router.push(\"/register\");\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0},\n};\n</script>\n```", "```js\n<template>\n\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0<h1>Register</h1>\n\u00a0\u00a0\u00a0\u00a0<form @submit.prevent=\"register\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"form-field\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<label for=\"email\">Name</label>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input v-model=\"form.name\" type=\"text\" name=\"name\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"form-field\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<label for=\"email\">Email</label>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input v-model=\"form.email\" type=\"email\" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name=\"email\" />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"form-field\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<label for=\"password\">Password</label>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2026\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0email,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0password,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0password_confirmation: confirmPassword,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.$router.push(\"/login\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} catch (error) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0alert(\"Invalid username or password\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0},\n};\n</script>\n```", "```js\n<template>\n\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0<router-view />\n\u00a0\u00a0</div>\n</template>\n<style scoped>\ndiv {\n\u00a0\u00a0width: 70vw;\n\u00a0\u00a0margin: 0 auto;\n}\n</style>\n<style>\n.form-field input {\n\u00a0\u00a0width: 100%;\n}\n</style>\n```", "```js\n...\nwindow.io = require('socket.io-client');\nconst beforeEnter = (to, from, next) => {\n\u00a0\u00a0const hasToken = Boolean(localStorage.getItem('token'));\n\u00a0\u00a0if (!hasToken) {\n\u00a0\u00a0\u00a0\u00a0return next({ path: 'login' });\n\u00a0\u00a0}\n\u00a0\u00a0next();\n}\nconst routes = [\n\u00a0\u00a0{\n...\n\u00a0\u00a0\u00a0\u00a0path: '/edit-chatroom/:id',\n\u00a0\u00a0\u00a0\u00a0name: 'edit-chatroom/:id',\n\u00a0\u00a0\u00a0\u00a0component: EditChatroomForm,\n\u00a0\u00a0\u00a0\u00a0beforeEnter\n\u00a0\u00a0},\n]\n...\nexport default router\n```"]