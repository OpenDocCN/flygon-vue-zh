["```js\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Vue Shop</title>\n</head>\n<body>\n  <div id=\"app\"></div>\n\n  <!-- Libraries -->\n  <script type=\"text/javascript\" src=\"js/libs/vue.js\"></script>\n  <script type=\"text/javascript\" src=\"js/libs/vuex.js\"></script>\n  <script type=\"text/javascript\" src=\"js/libs/router.js\"></script>\n\n  <!-- Components -->\n  <script src=\"js/components/ListCategories.js\"></script>\n  <script src=\"js/components/ListProducts.js\"></script>\n  <script src=\"js/components/ListPurchases.js\"></script>\n  <script src=\"js/components/ProductFiltering.js\"></script>\n\n  <!-- Views -->\n  <script src=\"js/views/PageNotFound.js\"></script>\n  <script src=\"js/views/CategoryPage.js\"></script>\n  <script src=\"js/views/HomePage.js\"></script>\n  <script src=\"js/views/OrderBasket.js\"></script>\n  <script src=\"js/views/OrderCheckout.js\"></script>\n  <script src=\"js/views/OrderConfirmation.js\"></script>\n  <script src=\"js/views/ProductPage.js\"></script>\n\n  <!-- App -->\n  <script type=\"text/javascript\" src=\"js/app.js\"></script>\n</body>\n</html>\n```", "```js\nVue.component('list-products', {\n\n});\n```", "```js\nconst OrderConfirmation = {\nname: 'OrderConfirmation'\n};\n```", "```js\nconst store = new Vuex.Store({});\n\nconst router = new VueRouter({});\n\nnew Vue({\n  el: '#app',\n\n  store,\n  router\n});\n```", "```js\nconst products = {...}\n```", "```js\n<script type=\"text/javascript\" src=\"data.json\"></script>\n```", "```js\n<script src=\"https://d3js.org/d3.v4.min.js\"></script>\n```", "```js\nnew Vue({\n  el: '#app',\n\n  store,\n  router,\n\n  created() {\n    d3.csv('./data/csv-files/bicycles.csv', (error, data) => {\n console.log(data);\n });\n  }\n});\n```", "```js\nnew Vue({\n  el: '#app',\n\n  store,\n  router,\n\n  created() {\n    CSV.fetch({url: './data/csv-files/bicycles.csv'}).then(data => {\n console.log(data);\n });\n  }\n});\n```", "```js\nhttps://unpkg.com/vue-shopify-products\n```", "```js\nVue.use(ShopifyProducts);\n```", "```js\nVue.use(ShopifyProducts);\n\nconst store = new Vuex.Store({});\n\nconst router = new VueRouter({});\n\nnew Vue({\n  el: '#app',\n\n  store,\n  router,\n\n  created() {\n    CSV.fetch({url: './data/csv-files/bicycles.csv'}).then(data => {\n      let products = this.$formatProducts(data);\n      console.log(products);\n    });\n  }\n});\n```", "```js\nconst store = new Vuex.Store({\n  state: {\n    products: {}\n  },\n\n  mutations: {\n    products(state, payload) {\n\n    }\n  }\n});\n```", "```js\nconst store = new Vuex.Store({\n  state: {\n    products: {}\n  },\n\n  mutations: {\n    products(state, payload) {\n      state.products = payload;\n    }\n  }\n});\n```", "```js\nnew Vue({\n  el: '#app',\n\n  store,\n  router,\n\n  created() {\n    CSV.fetch({url: './data/csv-files/bicycles.csv'}).then(data => {\n      let products = this.$formatProducts(data);\n      this.store.commit('products', products);\n    });\n  }\n});\n```", "```js\nnew Vue({\n  el: '#app',\n\n  store,\n  router,\n\n  created() {\n    CSV.fetch({url: './data/csv-files/bicycles.csv'}).then(data => {\n      this.$store.commit('products', this.$formatProducts(data));\n    });\n  }\n});\n```", "```js\nconst router = new VueRouter({\n  routes: [\n {\n      path: '/product/:slug', \n      component: ProductPage\n    }\n ]\n});\n```", "```js\nconst router = new VueRouter({\n  routes: [\n    {\n      path: '/product/:slug', \n      component: ProductPage\n    },\n\n    {\n path: '/404', \n alias: '*',\n component: PageNotFound\n }\n  ]\n});\n```", "```js\nconst PageNotFound = {\n  name: 'PageNotFound',\n  template: `<div>\n <h1>404 Page Not Found</h1>\n <p>Head back to the <router-link to=\"/\">home page</router-link> and start again.</p>\n </div>`\n};\n```", "```js\n<div id=\"app\">\n  <router-view></router-view>\n</div> \n```", "```js\n#/product/15mm-combo-wrench\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n  template: `<div>{{ product.title }}</div>`\n};\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n  template: `<div v-if=\"product\">{{ product.title }}</div>`\n};\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n  template: `<div v-if=\"product\">{{ product.title }}</div>`,\n\n  computed: {\n    product() {\n let product;\n\n return product;\n }\n  }\n};\n```", "```js\nproducts[handle]\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n  template: `<div v-if=\"product\">{{ product.title }}</div>`,\n\n  computed: {\n    product() {\n      let product;\n\n      product = this.$store.state.products[this.$route.params.slug];\n\n      return product;\n    }\n  }\n};\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n  template: `<div v-if=\"product\">{{ product.title }}</div>`,\n\n  computed: {\n    product() {\n      let product;\n\n      if(Object.keys(this.$store.state.products).length) {\n        product = this.$store.state.products[this.$route.params.slug];\n      }\n\n      return product;\n    }\n  }\n};\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n\n  template: `<div v-if=\"product\"><h1>{{ product.title }}</h1></div>`,\n\n components: {\n PageNotFound\n },\n\n  computed: {\n    product() {\n      let product;\n\n      if(Object.keys(this.$store.state.products).length) {\n        product = this.$store.state.products[this.$route.params.slug];\n      }\n\n      return product;\n    }\n  }\n};\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n\n  template: `<div>\n    <div v-if=\"product\"><h1>{{ product.title }}</h1></div>\n    <page-not-found></page-not-found>\n  </div>`,\n\n  components: {\n    PageNotFound\n  },\n  computed: {\n    product() {\n      let product;\n\n      if(Object.keys(this.$store.state.products).length) {\n        product = this.$store.state.products[this.$route.params.slug];\n      }\n\n      return product;\n    }\n  }\n};\n```", "```js\n<page-not-found v-if=\"!product\"></page-not-found>\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n\n  template: `<div>\n    <div v-if=\"product\"><h1>{{ product.title }}</h1></div>\n    <page-not-found v-if=\"productNotFound\"></page-not-found>\n  </div>`,\n\n  components: {\n    PageNotFound\n  },\n\n data() {\n return {\n productNotFound: false\n }\n },\n\n  computed: {\n    product() {\n      let product;\n\n      if(Object.keys(this.$store.state.products).length) {\n        product = this.$store.state.products[this.$route.params.slug];\n      }\n\n      return product;\n    }\n  }\n};\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n\n  template: `<div>\n    <div v-if=\"product\"><h1>{{ product.title }}</h1></div>\n    <page-not-found v-if=\"productNotFound\"></page-not-found>\n  </div>`,\n\n  components: {\n    PageNotFound\n  },\n\n  data() {\n    return {\n      productNotFound: false\n    }\n  },\n\n  computed: {\n    product() {\n      let product;\n\n      if(Object.keys(this.$store.state.products).length) {\n        product = this.$store.state.products[this.$route.params.slug];\n\n if(!product) {\n this.productNotFound = true;\n }\n      }\n\n      return product;\n    }\n  }\n};\n```", "```js\nproduct() {\n  let product;\n\n  if(Object.keys(this.$store.state.products).length) {\n    product = this.$store.state.products[this.$route.params.slug];\n    if(!product) {\n      this.productNotFound = true;\n    }\n  }\n\n  console.log(product);\n  return product;\n}\n```", "```js\ntemplate: `<div>\n  <div v-if=\"product\">\n    <h1>{{ product.title }}</h1>\n    <div class=\"meta\">\n <span>\n Manufacturer: <strong>{{ product.vendor.title }}</strong>\n </span>\n <span v-if=\"product.type\">\n Category: <strong>{{ product.type }}</strong>\n </span>\n </div>\n {{ product.body }}\n  </div>\n  <page-not-found v-if=\"productNotFound\"></page-not-found>\n</div>`,\n```", "```js\ntemplate: `<div>\n  <div v-if=\"product\">\n    <h1>{{ product.title }}</h1>\n    <div class=\"meta\">\n      <span>\n        Manufacturer: <strong>{{ product.vendor.title }}</strong>\n      </span>\n      <span v-if=\"product.type\">\n        Category: <strong>{{ product.type }}</strong>\n      </span>\n    </div>\n    <div v-html=\"product.body\"></div>\n  </div>\n  <page-not-found v-if=\"productNotFound\"></page-not-found>\n</div>`,\n```", "```js\ntemplate: `<div>\n  <div v-if=\"product\">\n\n    <div class=\"images\" v-if=\"product.images.length\">\n <template v-for=\"img in product.images\">\n <img \n :src=\"img.source\" \n :alt=\"img.alt || product.title\" \n width=\"100\">\n </template>\n </div> \n\n    <h1>{{ product.title }}</h1>\n\n    <div class=\"meta\">\n      <span>\n        Manufacturer: <strong>{{ product.vendor.title }}</strong>\n      </span>\n      <span v-if=\"product.type\">\n        Category: <strong>{{ product.type }}</strong>\n      </span>\n    </div>\n\n    <div v-html=\"product.body\"></div>\n\n  </div>\n  <page-not-found v-if=\"productNotFound\"></page-not-found>\n</div>`,\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n\n  template: `<div>\n    <div v-if=\"product\">\n      <div class=\"images\" v-if=\"product.images.length\">\n        <template v-for=\"img in product.images\">\n          <img \n            :src=\"img.source\" \n            :alt=\"img.alt || product.title\" \n            width=\"100\">\n        </template>\n      </div> \n      <h1>{{ product.title }}</h1>\n      <div class=\"meta\">\n        <span>\n          Manufacturer: <strong>{{ product.vendor.title }}</strong>\n        </span>\n        <span v-if=\"product.type\">\n          Category: <strong>{{ product.type }}</strong>\n        </span>\n      </div>\n      <div v-html=\"product.body\"></div>\n    </div>\n    <page-not-found v-if=\"productNotFound\"></page-not-found>\n  </div>`,\n\n  components: {\n    PageNotFound\n  },\n\n  data() {\n    return {\n      productNotFound: false,\n      image: false\n    }\n  },\n\n  computed: {\n    product() {\n      let product;\n\n      if(Object.keys(this.$store.state.products).length) {\n\n        product = this.$store.state.products[this.$route.params.slug];\n        this.image = (product.images.length) ? product.images[0] : false;\n\n        if(!product) {\n          this.productNotFound = true;\n        }\n      }\n\n      console.log(product);\n      return product;\n    }\n  }\n};\n```", "```js\ntemplate: `<div>\n  <div v-if=\"product\">\n\n    <div class=\"images\" v-if=\"image\">\n      <div class=\"main\">\n        <img \n :src=\"image.source\" \n :alt=\"image.alt || product.title\">\n      </div>\n\n      <div class=\"thumbnails\" v-if=\"product.images.length > 1\">\n        <template v-for=\"img in product.images\">\n          <img \n            :src=\"img.source\" \n            :alt=\"img.alt || product.title\" \n            width=\"100\">\n        </template>\n      </div>\n    </div> \n\n    <h1>{{ product.title }}</h1>\n\n    <div class=\"meta\">\n      <span>\n        Manufacturer: <strong>{{ product.vendor.title }}</strong>\n      </span>\n      <span v-if=\"product.type\">\n        Category: <strong>{{ product.type }}</strong>\n      </span>\n    </div>\n\n    <div v-html=\"product.body\"></div>\n\n  </div>\n  <page-not-found v-if=\"productNotFound\"></page-not-found>\n</div>`,\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n\n  template: `<div>\n    <div v-if=\"product\">\n      <div class=\"images\" v-if=\"image\">\n        <div class=\"main\">\n          <img \n            :src=\"image.source\" \n            :alt=\"image.alt || product.title\">\n        </div>\n\n        <div class=\"thumbnails\" v-if=\"product.images.length > 1\">\n          <template v-for=\"img in product.images\">\n            <img \n              :src=\"img.source\" \n              :alt=\"img.alt || product.title\" \n              width=\"100\" \n              @click=\"updateImage(img)\">\n          </template>\n        </div>\n      </div> \n\n      <h1>{{ product.title }}</h1>\n\n      <div class=\"meta\">\n        <span>\n          Manufacturer: <strong>{{ product.vendor.title }}</strong>\n        </span>\n        <span v-if=\"product.type\">\n          Category: <strong>{{ product.type }}</strong>\n        </span>\n      </div>\n\n      <div v-html=\"product.body\"></div>\n\n    </div>\n    <page-not-found v-if=\"productNotFound\"></page-not-found>\n  </div>`,\n\n  components: {\n    PageNotFound\n  },\n\n  data() {\n    return {\n      productNotFound: false,\n      image: false\n    }\n  },\n\n  computed: {\n    product() {\n      let product;\n\n      if(Object.keys(this.$store.state.products).length) {\n\n        product = this.$store.state.products[this.$route.params.slug];\n        this.image = (product.images.length) ? product.images[0] : false;\n\n        if(!product) {\n          this.productNotFound = true;\n        }\n      }\n\n      console.log(product);\n      return product;\n    }\n  },\n\n  methods: {\n updateImage(img) {\n this.image = img;\n }\n }\n};\n```", "```js\n<div v-for=\"item in items\" :key=\"item.id\">\n  {{ item.title }}\n</div>\n```", "```js\ntemplate: `<div>\n  <div v-if=\"product\">\n    <div class=\"images\" v-if=\"image\">\n      <div class=\"main\">\n        <img \n          :src=\"image.source\" \n          :alt=\"image.alt || product.title\">\n      </div>\n\n      <div class=\"thumbnails\" v-if=\"product.images.length > 1\">\n        <template v-for=\"img in product.images\">\n          <img \n            :src=\"img.source\" \n            :alt=\"img.alt || product.title\" \n            width=\"100\" \n            @click=\"updateImage(img)\">\n        </template>\n      </div>\n    </div> \n\n    <h1>{{ product.title }}</h1>\n\n    <div class=\"meta\">\n      <span>\n        Manufacturer: <strong>{{ product.vendor.title }}</strong>\n      </span>\n      <span v-if=\"product.type\">\n        Category: <strong>{{ product.type }}</strong>\n      </span>\n    </div>\n\n    <div class=\"variations\">\n <table>\n <tr v-for=\"variation in product.variationProducts\" :key=\"variation.barcode\">\n <td>{{ variation.quantity }}</td>\n <td>\\${{ variation.price }}</td>\n <td><button>Add to basket</button></td>\n </tr>\n </table>\n </div>\n\n    <div v-html=\"product.body\"></div>\n\n  </div>\n  <page-not-found v-if=\"productNotFound\"></page-not-found>\n</div>`,\n```", "```js\n<div class=\"variations\">\n  <table>\n    <tr v-for=\"variation in product.variationProducts\" :key=\"variation.barcode\">\n      <td>{{ variantTitle(variation) }}</td>\n      <td>{{ variation.quantity }}</td>\n      <td>\\${{ variation.price }}</td>\n      <td><button>Add to basket</button></td>\n    </tr>\n  </table>\n</div>\n```", "```js\nmethods: {\n  updateImage(img) {\n    this.image = img;\n  },\n\n variantTitle(variation) {\n\n }\n}\n```", "```js\nvariantTitle(variation) {\n  let variants = variation.variant,\n output = [];\n\n for(let a in variants) {\n output.push(`<b>${variants[a].name}:</b> ${variants[a].value}`);\n } \n}\n```", "```js\n[\"<b>Color:</b> Alloy\", \"<b>Size:</b> 49 cm\"]\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n\n  template: `<div>\n    <div v-if=\"product\">\n      <div class=\"images\" v-if=\"image\">\n        <div class=\"main\">\n          <img \n            :src=\"image.source\" \n            :alt=\"image.alt || product.title\">\n        </div>\n\n        <div class=\"thumbnails\" v-if=\"product.images.length > 1\">\n          <template v-for=\"img in product.images\">\n            <img \n              :src=\"img.source\" \n              :alt=\"img.alt || product.title\" \n              width=\"100\" \n              @click=\"updateImage(img)\">\n          </template>\n        </div>\n      </div> \n\n      <h1>{{ product.title }}</h1>\n\n      <div class=\"meta\">\n        <span>\n          Manufacturer: <strong>{{ product.vendor.title }}</strong>\n        </span>\n        <span v-if=\"product.type\">\n          Category: <strong>{{ product.type }}</strong>\n        </span>\n      </div>\n\n      <div class=\"variations\">\n        <table>\n          <tr v-for=\"variation in product.variationProducts\" :key=\"variation.barcode\">\n            <td v-html=\"variantTitle(variation)\"></td>\n            <td>{{ variation.quantity }}</td>\n            <td>\\${{ variation.price }}</td>\n            <td><button>Add to basket</button></td>\n          </tr>\n        </table>\n      </div>\n\n      <div v-html=\"product.body\"></div>\n\n    </div>\n    <page-not-found v-if=\"productNotFound\"></page-not-found>\n  </div>`,\n\n  components: {\n    PageNotFound\n  },\n\n  data() {\n    return {\n      productNotFound: false,\n      image: false\n    }\n  },\n\n  computed: {\n    ...\n  },\n\n  methods: {\n    updateImage(img) {\n      this.image = img;\n    },\n\n    variantTitle(variation) {\n      let variants = variation.variant,\n        output = [];\n\n      for(let a in variants) {\n        output.push(`<b>${variants[a].name}:</b> ${variants[a].value}`);\n      }\n\n      return output.join(' / ');\n    }\n\n  }\n};\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n\n  template: `<div>\n    <div v-if=\"product\">\n      <div class=\"images\" v-if=\"image\">\n        <div class=\"main\">\n          <img \n            :src=\"image.source\" \n            :alt=\"image.alt || product.title\">\n        </div>\n\n        <div class=\"thumbnails\" v-if=\"product.images.length > 1\">\n          <template v-for=\"img in product.images\">\n            <img \n              :src=\"img.source\" \n              :alt=\"img.alt || product.title\" \n              width=\"100\" \n              @click=\"updateImage(img)\">\n          </template>\n        </div>\n      </div> \n\n      <h1>{{ product.title }}</h1>\n\n      <div class=\"meta\">\n        <span>\n          Manufacturer: <strong>{{ product.vendor.title }}</strong>\n        </span>\n        <span v-if=\"product.type\">\n          Category: <strong>{{ product.type }}</strong>\n        </span>\n      </div>\n\n      <div class=\"variations\">\n        <table>\n          <tr v-for=\"variation in product.variationProducts\" :key=\"variation.barcode\">\n            <td v-html=\"variantTitle(variation)\"></td>\n            <td>{{ variation.quantity }}</td>\n            <td>\\${{ variation.price }}</td>\n            <td><button @click=\"addToBasket(variation)\">Add to basket</button></td>\n          </tr>\n        </table>\n      </div>\n\n      <div v-html=\"product.body\"></div>\n\n    </div>\n    <page-not-found v-if=\"productNotFound\"></page-not-found>\n  </div>`,\n\n  components: {\n    PageNotFound\n  },\n\n  data() {\n    return {\n      productNotFound: false,\n      image: false\n    }\n  },\n\n  computed: {\n    product() {\n      let product;\n\n      if(Object.keys(this.$store.state.products).length) {\n\n        product = this.$store.state.products[this.$route.params.slug];\n        this.image = (product.images.length) ? product.images[0] : false;\n\n        if(!product) {\n          this.productNotFound = true;\n        }\n      }\n\n      console.log(product);\n      return product;\n    }\n  },\n\n  methods: {\n    updateImage(img) {\n      this.image = img;\n    },\n\n    variantTitle(variation) {\n      let variants = variation.variant,\n        output = [];\n\n      for(let a in variants) {\n        output.push(`<b>${variants[a].name}:</b> ${variants[a].value}`);\n      }\n\n      return output.join(' / ');\n    },\n\n    addToBasket(variation) {\n alert(`Added to basket: ${this.product.title} - ${this.variantTitle(variation)}`);\n }\n\n  }\n};\n```", "```js\n<div class=\"variations\">\n <select>\n <option \n v-for=\"variation in product.variationProducts\" \n :key=\"variation.barcode\" \n v-html=\"variantTitle(variation)\"\n ></option>\n </select>\n\n  <button @click=\"addToBasket()\">Add to basket</button>\n</div>\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n\n  template: `...`,\n\n  components: {\n    PageNotFound\n  },\n\n  data() {\n    return {\n      productNotFound: false,\n      image: false,\n      variation: false\n    }\n  },\n\n  computed: {\n    product() {\n      let product;\n\n      if(Object.keys(this.$store.state.products).length) {\n\n        product = this.$store.state.products[this.$route.params.slug];\n\n        this.image = (product.images.length) ? product.images[0] : false;\n        this.variation = product.variationProducts[0];\n\n        if(!product) {\n          this.productNotFound = true;\n        }\n      }\n\n      console.log(product);\n      return product;\n    }\n  },\n\n  methods: {\n    ...\n  }\n};\n```", "```js\naddToBasket() {\n  alert(`Added to basket: ${this.product.title} - ${this.variantTitle(this.variation)}`);\n}\n```", "```js\n<div class=\"variations\">\n  <select v-model=\"variation\">\n    <option \n      v-for=\"variation in product.variationProducts\" \n      :key=\"variation.barcode\" \n      :value=\"variation\"\n      v-html=\"variantTitle(variation)\"\n    ></option>\n  </select>\n\n  <button @click=\"addToBasket()\">Add to basket</button>\n</div>\n```", "```js\ntemplate: `<div>\n  <div v-if=\"product\">\n    <div class=\"images\" v-if=\"image\">\n      <div class=\"main\">\n        <img \n          :src=\"image.source\" \n          :alt=\"image.alt || product.title\">\n      </div>\n\n      <div class=\"thumbnails\" v-if=\"product.images.length > 1\">\n        <template v-for=\"img in product.images\">\n          <img \n            :src=\"img.source\" \n            :alt=\"img.alt || product.title\" \n            width=\"100\" \n            @click=\"updateImage(img)\">\n        </template>\n      </div>\n    </div> \n\n    <h1>{{ product.title }} - \\${{ variation.price }}</h1>\n\n    <div class=\"meta\">\n      <span>\n        Manufacturer: <strong>{{ product.vendor.title }}</strong>\n      </span>\n      <span v-if=\"product.type\">\n        Category: <strong>{{ product.type }}</strong>\n      </span>\n      <span>\n Quantity: <strong>{{ variation.quantity }}</strong>\n </span>\n    </div>\n\n    <div class=\"variations\">\n      <select v-model=\"variation\">\n        <option \n          v-for=\"variation in product.variationProducts\" \n          :key=\"variation.barcode\" \n          :value=\"variation\"\n          v-html=\"variantTitle(variation)\"\n        ></option>\n      </select>\n\n      <button @click=\"addToBasket()\">Add to basket</button>\n    </div>\n\n    <div v-html=\"product.body\"></div>\n\n  </div>\n  <page-not-found v-if=\"productNotFound\"></page-not-found>\n</div>`,\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n\n  template: `...`,\n\n  components: {\n    ...\n  },\n\n  data() {\n    ...\n  },\n\n  computed: {\n    ...\n  },\n\n watch: {\n variation(v) {\n if(v.hasOwnProperty('image')) {\n this.updateImage(v.image);\n }\n }\n },\n\n  methods: {\n    ...\n  }\n};\n```", "```js\ntemplate: `<div>\n    <div v-if=\"product\">\n      <div class=\"images\" v-if=\"image\">\n        <div class=\"main\">\n          <img \n            :src=\"image.source\" \n            :alt=\"image.alt || product.title\">\n        </div>\n\n        <div class=\"thumbnails\" v-if=\"product.images.length > 1\">\n          <template v-for=\"img in product.images\">\n            <img \n              :src=\"img.source\" \n              :alt=\"img.alt || product.title\" \n              width=\"100\" \n              @click=\"updateImage(img)\">\n          </template>\n        </div>\n      </div> \n\n      <h1>{{ product.title }} - \\${{ variation.price }}</h1>\n\n      <div class=\"meta\">\n        <span>\n          Manufacturer: <strong>{{ product.vendor.title }}</strong>\n        </span>\n        <span v-if=\"product.type\">\n          Category: <strong>{{ product.type }}</strong>\n        </span>\n        <span>\n          Quantity: <strong>{{ variation.quantity }}</strong>\n        </span>\n      </div>\n\n      <div class=\"variations\">\n        <select v-model=\"variation\">\n          <option \n            v-for=\"variation in product.variationProducts\" \n            :key=\"variation.barcode\" \n            :value=\"variation\"\n            v-html=\"variantTitle(variation) + ((!variation.quantity) ? ' - out of stock' : '')\"\n          ></option>\n        </select>\n\n        <button @click=\"addToBasket()\" :disabled=\"!variation.quantity\">\n          {{ (variation.quantity) ? 'Add to basket' : 'Out of stock' }}\n        </button>\n      </div>\n\n      <div v-html=\"product.body\"></div>\n\n    </div>\n    <page-not-found v-if=\"productNotFound\"></page-not-found>\n  </div>`,\n```", "```js\n<div class=\"variations\">\n  <select v-model=\"variation\" v-if=\"product.variationProducts.length > 1\">\n    <option \n      v-for=\"variation in product.variationProducts\" \n      :key=\"variation.barcode\" \n      :value=\"variation\"\n      v-html=\"variantTitle(variation) + ((!variation.quantity) ? ' - out of stock' : '')\"\n    ></option>\n  </select>\n\n  <button @click=\"addToBasket()\" :disabled=\"!variation.quantity\">\n    {{ (variation.quantity) ? 'Add to basket' : 'Out of stock' }}\n  </button>\n</div>\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n\n  template: `...`,\n\n  components: {\n    PageNotFound\n  },\n\n  data() {\n    return {\n      slug: this.$route.params.slug,\n      productNotFound: false,\n      image: false,\n      variation: false\n    }\n  },\n\n  computed: {\n    product() {\n      let product;\n\n      if(Object.keys(this.$store.state.products).length) {\n\n        product = this.$store.state.products[this.slug];\n\n        this.image = (product.images.length) ? product.images[0] : false;\n        this.variation = product.variationProducts[0];\n\n        if(!product) {\n          this.productNotFound = true;\n        }\n      }\n\n      console.log(product);\n      return product;\n    }\n  },\n\n  watch: {\n    ...\n  },\n\n  methods: {\n    ...\n  }\n};\n```", "```js\nconst ProductPage = {\n  name: 'ProductPage',\n\n  template: `<div>\n    <div v-if=\"product\">\n      <div class=\"images\" v-if=\"image\">\n        <div class=\"main\">\n          <img \n            :src=\"image.source\" \n            :alt=\"image.alt || product.title\">\n        </div>\n\n        <div class=\"thumbnails\" v-if=\"product.images.length > 1\">\n          <template v-for=\"img in product.images\">\n            <img \n              :src=\"img.source\" \n              :alt=\"img.alt || product.title\" \n              width=\"100\" \n              @click=\"updateImage(img)\">\n          </template>\n        </div>\n      </div> \n\n      <h1>{{ product.title }} - \\${{ variation.price }}</h1>\n\n      <div class=\"meta\">\n        <span>\n          Manufacturer: <strong>{{ product.vendor.title }}</strong>\n        </span>\n        <span v-if=\"product.type\">\n          Category: <strong>{{ product.type }}</strong>\n        </span>\n        <span>\n          Quantity: <strong>{{ variation.quantity }}</strong>\n        </span>\n      </div>\n\n      <div class=\"variations\">\n        <select v-model=\"variation\" v-if=\"product.variationProducts.length > 1\">\n          <option \n            v-for=\"variation in product.variationProducts\" \n            :key=\"variation.barcode\" \n            :value=\"variation\"\n            v-html=\"variantTitle(variation) + ((!variation.quantity) ? ' - out of stock' : '')\"\n          ></option>\n        </select>\n\n        <button @click=\"addToBasket()\" :disabled=\"!variation.quantity\">\n          {{ (variation.quantity) ? 'Add to basket' : 'Out of stock' }}\n        </button>\n      </div>\n\n      <div v-html=\"product.body\"></div>\n\n    </div>\n    <page-not-found v-if=\"productNotFound\"></page-not-found>\n  </div>`,\n\n  components: {\n    PageNotFound\n  },\n\n  data() {\n    return {\n      slug: this.$route.params.slug,\n      productNotFound: false,\n      image: false,\n      variation: false\n    }\n  },\n\n  computed: {\n    product() {\n      let product;\n\n      if(Object.keys(this.$store.state.products).length) {\n\n        product = this.$store.state.products[this.slug];\n\n        this.image = (product.images.length) ? product.images[0] : false;\n        this.variation = product.variationProducts[0];\n\n        if(!product) {\n          this.productNotFound = true;\n        }\n      }\n\n      return product;\n    }\n  },\n\n  watch: {\n    variation(v) {\n      if(v.hasOwnProperty('image')) {\n        this.updateImage(v.image);\n      }\n    },\n\n    '$route'(to) {\n this.slug = to.params.slug;\n }\n  },\n\n  methods: {\n    updateImage(img) {\n      this.image = img;\n    },\n\n    variantTitle(variation) {\n      let variants = variation.variant,\n        output = [];\n\n      for(let a in variants) {\n        output.push(`${variants[a].name}: ${variants[a].value}`);\n      }\n\n      return output.join(' / ');\n    },\n\n    addToBasket() {\n      alert(`Added to basket: ${this.product.title} - ${this.variantTitle(this.variation)}`);\n    }\n\n  }\n};\n```"]