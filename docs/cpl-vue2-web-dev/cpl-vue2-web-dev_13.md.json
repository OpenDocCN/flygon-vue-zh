["```js\n<div id=\"app\"> \n</div>\n```", "```js\n<button @click=\"taxiCalled = true\"> \n  Call a cab \n</button>\n```", "```js\n<p v-if=\"taxiCalled\"></p>\n```", "```js\nnew Vue({ \n  el: '#app', \n  data: { \n    taxiCalled: false \n  } \n})\n```", "```js\n<transition  \n  enter-active-class=\"animated slideInRight\"> \n  <p v-if=\"taxiCalled\"></p> \n</transition>\n```", "```js\n<transition enter-active-class=\"animated slideInRight\">\n```", "```js\n<div id=\"app\"> \n  <button @click=\"taxiCalled = true\"> \n    Call a cab \n  </button> \n  <p v-if=\"taxiCalled\"></p> \n</div>\n```", "```js\nnew Vue({ \n  el: '#app', \n  data: { \n    taxiCalled: false \n  } \n})\n```", "```js\n.slideInRight { \n  transform: translateX(200px); \n} \n\n.go { \n  transition: all 2s ease-out; \n}\n```", "```js\n<transition  \n  enter-class=\"slideInRight\" \n  enter-active-class=\"go\"> \n  <p v-if=\"taxiCalled\"></p> \n</transition>\n```", "```js\n<div id=\"app\"> \n  <button @click=\"taxiCalled = true\"> \n    Call a cab \n  </button> \n  <p v-if=\"taxiCalled\"></p> \n</div>\n```", "```js\nnew Vue({ \n  el: '#app', \n  data: { \n    taxiCalled: false \n  } \n})\n```", "```js\n<transition \n  @enter=\"enter\" \n  :css=\"false\" \n> \n<p v-if=\"taxiCalled\"></p> \n</transition>\n```", "```js\nmethods: { \n    enter (el) { \n      Velocity(el,  \n      { opacity: [1, 0], translateX: [\"0px\", \"200px\"] }, \n      { duration: 2000, easing: \"ease-out\" }) \n    } \n  }\n```", "```js\n<transition \n  @enter=\"enter\" \n  :css=\"false\" \n> \n  <p v-if=\"taxiCalled\"></p> \n</transition>\n```", "```js\nenter (el) { \n  Velocity(el,  \n    { opacity: [1, 0], translateX: [\"0px\", \"200px\"] }, \n    { duration: 2000, easing: \"ease-out\" }\n  ) \n}\n```", "```js\nVelocity( elementToAnimate, propertiesToAnimate, [options] )\n```", "```js\np { \n  opacity: 0; \n}\n```", "```js\nVelocity(el,  \n  { opacity: 1 } \n)\n```", "```js\nVelocity(el,  \n  { opacity: 1 }, \n  { begin: () => { el.style.opacity = 0 } } \n)\n```", "```js\n<button @click=\"taxiCalled = false\">\n  Cancel\n</button>\n```", "```js\n<transition \n  @enter=\"enter\" \n  @leave=\"leave\" \n  :css=\"false\" \n> \n  <p v-if=\"taxiCalled\"></p> \n</transition>\n```", "```js\nleave (el) { \n  Velocity(el, \n    { opacity: [0, 1], 'font-size': ['0.1em', '1em'] }, \n    { duration: 200}) \n}\n```", "```js\nleave (el, done) { \n  Velocity(el, \n  { opacity: [0, 1], 'font-size': ['0.1em', '1em'] }, \n  { duration: 200 }) \n}\n```", "```js\nleave (el, done) { \n  Velocity(el, \n  { opacity: [0, 1], 'font-size': ['0.1em', '1em'] }, \n  { duration: 200, complete: done }) \n}\n```", "```js\n<h1> \n  The Fill Murray Page \n</h1>\n```", "```js\n<div id=\"app\"> \n  <img src=\"https://fillmurray.com/50/70\"> \n  <p> \n    The internet was missing the ability to \n    provide custom-sized placeholder images of Bill Murray. \n    Now it can. \n  </p> \n</div>\n```", "```js\n<transition appear> \n  <img src=\"https://fillmurray.com/50/70\"> \n</transition>\n```", "```js\nimg { \n  float: left; \n  padding: 5px \n} \n.v-enter { \n  opacity: 0 \n} \n.v-enter-active { \n  transition: opacity 2s \n}\n```", "```js\n<transition appear> \n  <img src=\"https://fillmurray.com/50/70\" width=\"50\" height=\"70\"> \n</transition>\n```", "```js\n<transition \n  appear \n  @before-appear=\"customBeforeAppearHook\" \n  @appear=\"customAppearHook\" \n  @after-appear=\"customAfterAppearHook\" \n  appear-class=\"custom-appear-class\" \n  appear-active-class=\"custom-appear-active-class\" \n> \n  <p>My element</p> \n</transition>\n```", "```js\n<transition appear name=\"myTransition\"> \n  <p>My element</p> \n</transition>\n```", "```js\n.myTransition-enter {...} \n.myTransition-enter-active {...}\n```", "```js\n<div id=\"app\"> \n  <button @click=\"kisses++\">Kiss!</button> \n</div>\n```", "```js\nnew Vue({ \n   el: '#app', \n  data: { \n   kisses: 0 \n  } \n})\n```", "```js\n<transition name=\"fade\"> \n  <p v-if=\"kisses < 3\" key=\"frog\">frog</p> \n  <p v-if=\"kisses >= 3\" key=\"princess\">princess</p> \n</transition>\n```", "```js\n.fade-enter-active, .fade-leave-active { \n  transition: opacity .5s \n} \n.fade-enter, .fade-leave-active { \n  opacity: 0 \n}\n```", "```js\np { \n  margin: 0; \n  position: absolute; \n  font-size: 3em; \n}\n```", "```js\n<transition name=\"fade\"> \n  <p v-if=\"kisses < 3\">frog</p> \n  <p v-if=\"kisses >= 3\">princess</p> \n</transition>\n```", "```js\n<p v-if=\"kisses < 3\" >frog</p> \n<span v-if=\"kisses >= 3\">princess</span>\n```", "```js\np, span { \n  margin: 0; \n  position: absolute; \n  font-size: 3em; \n  display: block; \n}\n```", "```js\n<transition name=\"fade\"> \n  <p v-if=\"kisses < 3\" key=\"frog\">frog</p> \n  <p v-else-if=\"kisses >= 3 && kisses <= 5\" key=\"princess\">princess</p> \n  <p v-else key=\"santa\">santa</p> \n</transition>\n```", "```js\n<transition name=\"fade\">\n  <p :key=\"transformation\">{{emoji}}{{transformation}}</p>\n</transition>\n```", "```js\ncomputed: { \n  transformation () { \n    if (this.kisses < 3) { \n      return 'frog' \n    } \n    if (this.kisses >= 3 && this.kisses <= 5) { \n      return 'princess' \n    } \n    if (this.kisses > 5) { \n      return 'santa' \n    } \n  }, \n  emoji () { \n    switch (this.transformation) { \n      case 'frog': return '' \n      case 'princess': return '' \n      case 'santa': return '' \n    } \n  } \n}\n```", "```js\nnew Vue({ \n  el: '#app', \n  data: { \n    product: 0, \n    products: ['umbrella', 'computer', 'ball', 'camera'] \n  } \n})\n```", "```js\n<div id=\"app\"> \n  <button @click=\"product++\">next</button> \n  <transition name=\"slide\"> \n    <p :key=\"products[product % 4]\">{{products[product % 4]}}</p> \n  </transition> \n</div>\n```", "```js\n.slide-enter-active, .slide-leave-active { \n  transition: transform .5s \n} \n.slide-enter { \n  transform: translateX(300px) \n} \n.slide-leave-active { \n  transform: translateX(-300px); \n}\n```", "```js\np { \n  position: absolute; \n  margin: 0; \n  font-size: 3em; \n}\n```", "```js\np { \n  margin: 0; \n  font-size: 3em; \n}\n```", "```js\n<transition name=\"slide\" mode=\"out-in\"> \n  <p :key=\"products[product%4]\">{{products[product%4]}}</p> \n</transition>\n```", "```js\n<transition mode=\"in-out\"> \n  <!-- elements --> \n</transition>\n```", "```js\n<transition mode=\"out-in\"> \n  <!-- elements --> \n</transition>\n```", "```js\nnew Vue({ \n  el: '#app', \n  data: { \n    syllabus: [ \n      'HTML', \n      'CSS', \n      'Scratch', \n      'JavaScript', \n      'Python' \n    ] \n  } \n})\n```", "```js\n<div id=\"app\"> \n  <h3>Syllabus</h3> \n  <ul> \n    <li v-for=\"topic in syllabus\"> \n      {{topic}} \n    </li> \n  </ul> \n</div>\n```", "```js\n<li v-for=\"topic in syllabus\"> \n  <button @click=\"completed(topic)\">Done</button>{{topic}} \n</li>\n```", "```js\nmethods: { \n  completed (topic) { \n    let index = this.syllabus.indexOf(topic) \n    this.syllabus.splice(index, 1) \n  } \n}\n```", "```js\n<transition-group tag=\"ul\"> \n  <li v-for=\"topic in syllabus\" :key=\"topic\"> \n    <button @click=\"completed(topic)\">Done</button>{{topic}} \n  </li> \n</transition-group>\n```", "```js\n.v-leave-active { \n  transition: all 1s; \n  opacity: 0; \n  transform: translateY(-30px); \n}\n```", "```js\nnew Vue({ \n  el: '#app', \n  data: { \n    buses: [1,2,3,4,5], \n    nextBus: 6 \n  } \n})\n```", "```js\nmounted () { \n  setInterval(() => { \n    const headOrTail = () => Math.random() > 0.5 \n    if (headOrTail()) { \n      this.buses.push(this.nextBus) \n      this.nextBus += 1 \n    } else { \n      this.buses.splice(0, 1) \n    } \n  }, 2000) \n}\n```", "```js\n<div id=\"app\"> \n  <h3>Bus station simulator</h3> \n  <transition-group tag=\"p\" name=\"station\"> \n    <span v-for=\"bus in buses\" :key=\"bus\"></span> \n  </transition-group> \n</div>\n```", "```js\n.station-leave-active, .station-enter-active { \n  transition: all 2s; \n  position: absolute; \n} \n\n.station-leave-to { \n  opacity: 0; \n  transform: translateX(-30px); \n} \n\n.station-enter { \n  opacity: 0; \n  transform: translateX(30px); \n} \n\n.station-move { \n  transition: 2s; \n} \n\nspan { \n  display: inline-block; \n  margin: 3px; \n}\n```", "```js\n<transition-group tag=\"p\" name=\"station\"> \n  <span v-for=\"bus in buses\" :key=\"bus\"></span> \n</transition-group>\n```", "```js\n{ \n  bottom:110.4375 \n  height:26 \n  left:11 \n  right:27 \n  top:84.4375 \n  width:16 \n}\n```", "```js\n.station-leave-active, .station-enter-active { \n  transition: all 2s; \n  position: absolute; \n}\n```", "```js\n.station-move { \n  transition: 2s; \n}\n```", "```js\n<div id=\"app\"> \n  <input type=\"number\"> \n  <div class=\"ball\"></div> \n</div>\n```", "```js\n.ball { \n  width: 3em; \n  height: 3em; \n  background-color: red; \n  border-radius: 50%; \n  position: absolute; \n  left: 10em; \n}\n```", "```js\n<div id=\"app\"> \n  <input type=\"number\"> \n  <div class=\"ball\" :style=\"'top: ' + height + 'em'\"></div> \n</div>\n```", "```js\nnew Vue({ \n   el: '#app', \n   data: { \n     height: 0 \n   } \n})\n```", "```js\n<div id=\"app\"> \n  <input type=\"number\" @input=\"move\"> \n  <div class=\"ball\" :style=\"'top: ' + height + 'em'\"></div> \n</div>\n```", "```js\nmethods: { \n  move (event) { \n    const newHeight = Number(event.target.value) \n    const _this = this \n    const animate = (time) => { \n      requestAnimationFrame(animate) \n      TWEEN.update(time) \n    } \n    new TWEEN.Tween({ H: this.height }) \n      .easing(TWEEN.Easing.Bounce.Out) \n      .to({ H: newHeight }, 1000) \n      .onUpdate(function () { \n        _this.height = this.H \n      }) \n      .start() \n    animate() \n  } \n}\n```", "```js\nconst newHeight = Number(event.target.value)\n```", "```js\nconst _this = this\n```", "```js\nconst animate = (time) => { \n  requestAnimationFrame(animate) \n  TWEEN.update(time) \n}\n```", "```js\nnew TWEEN.Tween({ H: this.height }) \n  .easing(TWEEN.Easing.Bounce.Out) \n  .to({ H: newHeight }, 1000) \n  .onUpdate(function () { \n    _this.height = this.H \n  }) \n.start()\n```", "```js\nTween({ H: this.height })\n```", "```js\neasing(TWEEN.Easing.Bounce.Out)\n```", "```js\n.to({ H: newHeight }, 1000)\n```", "```js\nonUpdate(function () { \n  _this.height = this.H \n})\n```", "```js\n<div id=\"app\"> \n  <button @click=\"showRecipe = !showRecipe\"> \n    Recipe \n  </button> \n  <button @click=\"showNews= !showNews\"> \n    Breaking News \n  </button> \n  <article v-if=\"showRecipe\" class=\"card\"> \n    <h3> \n      Apple Pie Recipe \n    </h3> \n    <p> \n      Ingredients: apple pie. Procedure: serve hot. \n    </p> \n  </article> \n  <article v-if=\"showNews\" class=\"card\"> \n    <h3> \n      Breaking news \n    </h3> \n    <p> \n      Donald Duck is the new president of the USA. \n    </p> \n  </article> \n</div>\n```", "```js\n.card { \n  position: relative; \n  background-color: FloralWhite; \n  width: 9em; \n  height: 9em; \n  margin: 0.5em; \n  padding: 0.5em; \n  font-family: sans-serif; \n  box-shadow: 0px 0px 10px 2px rgba(0,0,0,0.3); \n}\n```", "```js\nnew Vue({ \n  el: '#app', \n  data: { \n    showRecipe: false, \n    showNews: false \n  } \n})\n```", "```js\nVue.component('puff', { \n  functional: true, \n  render: function (createElement, context) { \n    var data = { \n      props: { \n        'enter-active-class': 'magictime puffIn', \n        'leave-active-class': 'magictime puffOut' \n      } \n    } \n    return createElement('transition', data, context.children) \n  } \n})\n```", "```js\n<div id=\"app\"> \n  <button @click=\"showRecipe = !showRecipe\"> \n    Recipe \n  </button> \n  <button @click=\"showNews = !showNews\"> \n    Breaking News \n  </button> \n <puff> \n    <article v-if=\"showRecipe\" class=\"card\"> \n      <h3> \n        Apple Pie Recipe \n      </h3> \n      <p> \n        Ingredients: apple pie. Procedure: serve hot. \n      </p> \n    </article> \n </puff> <puff> \n    <article v-if=\"showNews\" class=\"card\"> \n      <h3> \n        Breaking news \n      </h3> \n      <p> \n        Donald Duck is the new president of the USA. \n      </p> \n    </article> \n </puff> \n</div>\n```", "```js\nprops: { \n  'enter-active-class': 'magictime puffIn', \n  'leave-active-class': 'magictime puffOut' \n}\n```", "```js\nreturn createElement('transition', data, context.children)\n```", "```js\n<div id=\"app\"> \n  <button @click=\"kisses++\">Kiss!</button> \n  <transition :name=\"kindOfTransformation\" :mode=\"transformationMode\"> \n    <p :key=\"transformation\">{{emoji}}{{transformation}}</p> \n  </transition> \n</div>\n```", "```js\nnew Vue({ \nel: '#app', \n  data: { \n    kisses: 0, \n    kindOfTransformation: 'fade', \n    transformationMode: 'in-out' \n  } \n})\n```", "```js\n.fade-enter-active, .fade-leave-active { \n  transition: opacity .5s \n} \n.fade-enter, .fade-leave-active { \n  opacity: 0 \n}\n```", "```js\ncomputed: { \n  transformation () { \n    if (this.kisses < 3) { \n      return 'frog' \n    } \n    if (this.kisses >= 3 && this.kisses <= 5) { \n      return 'princess' \n    } \n    if (this.kisses > 5) { \n         return 'santa' \n    } \n  }, \n  emoji () { \n    switch (this.transformation) { \n      case 'frog': return '' \n      case 'princess': return '' \n      case 'santa': return '' \n    } \n  } \n}\n```", "```js\n.zoom-leave-active, .zoom-enter-active { \n  transition: transform .5s; \n} \n\n.zoom-leave-active, .zoom-enter { \n  transform: scale(0) \n}\n```", "```js\ntransformation () { \n  if (this.kisses < 3) { \n    return 'frog' \n  } \n  if (this.kisses >= 3 && this.kisses <= 5) { \n this.transformationMode = 'out-in' \n    return 'princess' \n  } \n  if (this.kisses > 5) { \n this.kindOfTransformation = 'zoom' \n    return 'santa' \n  } \n}\n```", "```js\np { \n  margin: 0; \n  position: absolute; \n  font-size: 3em; \n}\n```"]