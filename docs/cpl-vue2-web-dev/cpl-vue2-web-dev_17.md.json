["```js\n<div id=\"app\">\n  <p v-pony>I'm a pony paragraph!</p>\n  <code v-pony>Pony code</code>\n  <blockquote>Normal quote</blockquote>\n  <blockquote v-pony>I'm a pony quote</blockquote>\n</div>\n```", "```js\nVue.directive('pony', {\n  bind (el) {\n    el.style.backgroundColor = 'hotpink'\n  }\n})\n```", "```js\nVue.directive('pony', {\n  bind (el) {\n    el.style.backgroundColor = 'hotpink'\n    el.onclick = () => {\n const colGen = () => \n Math.round(Math.random()*255 + 25)\n const cols =\n [colGen() + 100, colGen(), colGen()]\n const randRGB =\n `rgb(${cols[0]}, ${cols[1]}, ${cols[2]})`\n el.style.backgroundColor = randRGB\n }\n  }\n})\n```", "```js\nnew Vue({\n  el: '#app'\n})\n```", "```js\nVue.directive(<name: String>, {\n  // hooks\n})\n```", "```js\n<div id=\"app\">\n  <h1>Welcome</h1>\n  <pre>{{chat}}</pre>\n  <input v-model=\"message\" @keyup.enter=\"send\">\n</div>\n```", "```js\n const ws = new WebSocket('ws://echo.websocket.org')\n```", "```js\nnew Vue({\n  el: '#app',\n  data: {\n    chat: '',\n    message: ''\n  }\n})\n```", "```js\nnew Vue({\n  el: '#app',\n  data: {\n    chat: '',\n    message: ''\n  },\n  methods: {\n send () {\n this.appendToChat(this.message)\n ws.send(this.message)\n this.message = ''\n },\n appendToChat (text) {\n this.chat += text + 'n'\n }\n }\n}\n```", "```js\n...\ncreated () {\n  ws.onmessage = event => {\n    this.appendToChat(event.data)\n  }\n}\n...\n```", "```js\n<div id=\"app\">\n  <h1>Welcome to the Kangaroo club</h1>\n  <img src=\"https://goo.gl/FVDU1I\" width=\"300px\" height=\"200px\">\n  <img src=\"https://goo.gl/U1Hvez\" width=\"300px\" height=\"200px\">\n  <img src=\"https://goo.gl/YxggEB\" width=\"300px\" height=\"200px\">\n  <p>We love kangaroos</p>\n</div>\n```", "```js\nnew Vue({\n  el: '#app'\n})\n```", "```js\n@keyframes generateJump {\n  20%{transform: translateY(0);}\n  40%{transform: translateY(-30px);}\n  50%{transform: translateY(0);}\n  60%{transform: translateY(-15px);}\n  80%{transform: translateY(0);}\n}\n.kangaroo {\n  animation: generateJump 1.5s ease 0s 2 normal;\n}\n```", "```js\nconst jump = el => {\n  el.classList.add('kangaroo')\n  el.addEventListener('animationend', () => {\n    el.classList.remove('kangaroo')\n  })\n}\n```", "```js\nconst doOnRandomElement = (action, collection) => {\n  if (collection.length === 0) {\n    return\n  }\n  const el = \n    collection[Math.floor(Math.random()*collection.length)]\n  action(el)\n}\n```", "```js\nconst atRandomIntervals = action => {\n  setTimeout(() => {\n    action()\n    atRandomIntervals(action)\n  }, Math.round(Math.random() * 6000))\n}\n```", "```js\nconst Kangaroo = {\n  install (vueInstance) {\n    vueInstance.kangaroos = []\n    vueInstance.directive('kangaroo', {\n      bind (el) {\n       vueInstance.kangaroos.push(el)\n      }\n    })\n    atRandomIntervals(() => \n      doOnRandomElement(jump, vueInstance.kangaroos))\n  }\n}\n```", "```js\nVue.use(Kangaroo)\nnew Vue({\n  el: '#app'\n})\n```", "```js\n <div id=\"app\">\n   <h1>Welcome to the Kangaroo club</h1>\n   <img v-kangaroo src=\"https://goo.gl/FVDU1I\" width=\"300px\" height=\"200px\">\n   <img v-kangaroo src=\"https://goo.gl/U1Hvez\" width=\"300px\" height=\"200px\">\n   <img v-kangaroo src=\"https://goo.gl/YxggEB\" width=\"300px\" height=\"200px\">\n   <p v-kangaroo>We love kangaroos</p>\n </div>\n```", "```js\nMyPlugin.install = (vueInstance, option) => {\n  // ...\n}\n```", "```js\nVue.use(MyPlugin, { /* any option you need */ }) \n```", "```js\n <div id=\"app\"></div>\n```", "```js\nconst Greeter = {\n  template: '<p>Hello World</p>'\n}\n```", "```js\nconst Greeter = {\n  template: '<p>Hello World</p>'\n}\nnew Vue({\n el: '#app',\n render: h => h(Greeter)\n})\n```", "```js\n<div id=\"app\"></div>\n```", "```js\nnew Vue({\n  el: '#app',\n  render: h => h('div')\n})\n```", "```js\nnew Vue({\n  el: '#app',\n  render: h => h(\n    'div',\n    [\n h('h1', 'The plumber club page')\n ]\n  )\n})\n```", "```js\nh(\n  {\n    render: function (h) {\n      const self = this\n      return h('div', [\n        'Your name is ',\n        h('input', {\n          domProps: {\n            value: self.name\n          },\n          on: {\n            input (event) {\n              self.name = event.target.value\n            }\n          }\n        }),\n        h(\n          'p',\n          'Hello ' + self.name + \n            (self.exclamation ? '!' : ''))\n      ])\n    },\n    data () { return { name: '' } },\n    props: ['exclamation']\n  },\n  {\n    props: {\n      exclamation: true\n    }\n  }\n)\n```", "```js\n{\n  props: {\n    exclamation: true\n  }\n}\n```", "```js\n 'Here you will find ', h('i', 'a flood '), 'of plumbers.'\n```", "```js\nnpm install\n babel-plugin-syntax-jsx\n babel-plugin-transform-vue-jsx\n babel-helper-vue-jsx-merge-props\n --save-dev\n```", "```js\n\"plugins\": [\n ...\n  \"transform-vue-jsx\" ]\n```", "```js\nimport Vue from 'vue'\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  render (h) {\n    return <div>{this.msg}</div>\n  },\n  data: {\n    msg: 'Hello World'\n  }\n})\n```", "```js\nconst myComp = {\n  render (h) {\n    return <p>{this.myProp}</p>\n  },\n  props: ['myProp']\n}\n```", "```js\nnew Vue({\n  el: '#app',\n  render (h) {\n    return <div>\n      <myComp myProp={this.msg}/>\n    </div>\n  },\n  data: {\n    msg: 'Hello World'\n  },\n  components: {\n    myComp\n  }\n})\n```", "```js\n<svg>\n  <path d=\"M 100 30 L 200 30 L 150 120 z\"/>\n</svg>\n```", "```js\n<orange-line>\n  moveTo 100 30 traceLine 200 30 traceLine 150 120 closePath\n</orange-line>\n```", "```js\n<div id=\"app\">\n  <orange-line>\n    moveTo 100 30 traceLine 200 30 traceLine 150 120 closePath\n  </orange-line>\n</div>\n```", "```js\nconst OrangeLine = {\n  functional: true,\n  render (h, context) {\n    return h('svg',\n      []\n    )\n  }\n}\n```", "```js\nrender (h, context) {\n  return h('svg',\n    [\n      h('path', {\n attrs: {\n d: context.children.map(c => {\n return c.text\n .replace(/moveTo/g, 'M')\n .replace(/traceLine/g, 'L')\n .replace(/closePath/g, 'z')\n }).join(' ').trim(),\n fill: 'black',\n stroke: 'orange',\n 'stroke-width': '4'\n }\n })\n    ]\n  )\n}\n```", "```js\nnew Vue({\n  el: '#app',\n  components: {\n    OrangeLine\n  }\n})\n```", "```js\ncontext.children.map(c => {\n  return c.text\n    .replace(/moveTo/g, 'M')\n    .replace(/traceLine/g, 'L')\n    .replace(/closePath/g, 'z')\n}).join(' ').trim()\n```", "```js\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.7/semantic.css\" />\n```", "```js\n<meta name=\"viewport\" content=\"width=device-width\">\n```", "```js\nnew Vue({\n  el: '#app',\n  data: {\n    width: document.body.clientWidth,\n  breeds: [\n    { name: 'Persian', colour: 'orange', affection: 3, shedding: 5 },\n    { name: 'Siberian', colour: 'blue', affection: 5, shedding: 4 },\n    { name: 'Bombay', colour: 'black', affection: 4, shedding: 2 }\n  ]\n  },\n  created() {\n    window.onresize = event => {\n      this.width = document.body.clientWidth\n    }\n  },\n  components: {\n    BreedTable\n  }\n})\n```", "```js\nconst BreedTable = {\n  functional: true,\n  render(h, context) {\n    if (context.parent.width > 400) {\n      return h(DesktopTable, context.data, context.children)\n    } else {\n      return h(MobileTable, context.data, context.children)\n    }\n  }\n}\n```", "```js\n<div id=\"app\">\n  <h1>Breeds</h1>\n  <breed-table :breeds=\"breeds\"></breed-table>\n</div>\n```", "```js\nconst DesktopTable = {\n  template: `\n    <table class=\"ui celled table unstackable\">\n      <thead>\n        <tr>\n          <th>Breed</th>\n          <th>Coat Colour</th>\n          <th>Level of Affection</th>\n          <th>Level of Shedding</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"breed in breeds\">\n          <td>{{breed.name}}</td>\n          <td>{{breed.colour}}</td>\n          <td>{{breed.affection}}</td>\n          <td>{{breed.shedding}}</td>\n        </tr>\n      </tbody>\n    </table>\n  `,\n  props: ['breeds']\n}\n```", "```js\nconst MobileTable = {\n  template: `\n    <table class=\"ui celled table unstackable\">\n      <thead>\n       <tr>\n         <th>Breed</th>\n         <th>Affection & Shedding</th>\n       </tr>\n     </thead>\n   ...\n```", "```js\n...\n<tbody>\n  <tr v-for=\"breed in breeds\">\n    <td>{{breed.name}}\n      <div \n        class=\"ui mini circular image\"\n        :style=\"'height:35px;background-color:'+breed.colour\"\n      ></div>\n    </td>\n  ...\n```", "```js\n      ...\n      <td>\n        <div class=\"ui heart rating\">\n          <i \n            v-for=\"n in 5\"\n            class=\"icon\"\n            :class=\"{ active: n <= breed.affection }\"\n          ></i>\n        </div>\n        <div class=\"ui star rating\">\n          <i \n            v-for=\"n in 5\"\n            class=\"icon\"\n            :class=\"{ active: n <= breed.shedding }\"\n          ></i>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n```"]