- en: Vue.js Principles and Comparisons
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vue.js的原则和比较
- en: In this chapter, we'll be looking at why Vue is an important web development
    framework, as well as looking at setting up our development environment. If we're
    looking to use Vue for our next project, it's important we realize the implications,
    time investment, and learning curve when doing so. You'll have considered how
    Vue shapes up to other frontend development projects, as well as creating your
    first application with Vue.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨为什么Vue是一个重要的Web开发框架，以及如何设置我们的开发环境。如果我们打算在下一个项目中使用Vue，重要的是我们意识到这样做的影响、时间投资和学习曲线。您将考虑Vue与其他前端开发项目的对比，以及使用Vue创建您的第一个应用程序。
- en: 'In summary, we''ll be considering the following points:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，我们将考虑以下几点：
- en: Downloading the book prerequisites
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载书籍先决条件
- en: Understanding of where Vue fits into a frontend framework
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解Vue在前端框架中的定位
- en: Why you should consider using Vue as the framework for your next project
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么您应该考虑将Vue作为下一个项目的框架
- en: Investigation of how flexible Vue is and its role in mobile development
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调查Vue的灵活性及其在移动开发中的作用
- en: Prerequisites
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 先决条件
- en: Although you could develop Vue applications without Node, we'll be using Node.js
    throughout this book to manage dependencies and interact with the Vue **Command
    Line Interface** (**CLI**). This allows us to bootstrap projects quicker and gives
    us a better development experience as we can use ECMAScript 2015 by default. Let's
    have a quick refresher on setting up your development environment.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管你可以在没有Node的情况下开发Vue应用程序，但我们将在本书中始终使用Node.js来管理依赖关系并与Vue **命令行界面** (**CLI**)
    交互。这使我们能够更快地启动项目，并且可以默认使用ECMAScript 2015，从而为我们提供更好的开发体验。让我们快速回顾一下如何设置开发环境。
- en: Windows
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows
- en: Installing Node for Windows is as simple as visiting [https://nodejs.org](https://nodejs.org/)
    and downloading the latest version. Ensure that when following the installation
    steps, Add to PATH is selected as this will allow us to access node commands within
    our Terminal.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上安装Node就像访问[https://nodejs.org](https://nodejs.org/)并下载最新版本一样简单。确保在按照安装步骤时选择Add
    to PATH，这样我们就可以在终端中访问node命令。
- en: Once you've done that, check your Node installation works by typing `node -v`
    and `npm -v`. If you get two version numbers back (that is, one for each), then
    you're ready to go ahead with the rest of the book!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，通过输入`node -v`和`npm -v`来检查Node安装是否成功。如果你得到两个版本号（即每个版本一个），那么你就可以继续进行本书的其余部分了！
- en: Mac
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Mac
- en: Installing Node for Mac involves a little more work than simply downloading
    the installer from the Node website. While it is possible to use the installer
    from [https://nodejs.org](https://nodejs.org/),it is not advised due to the requirement
    of `sudo`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在Mac上安装Node需要比简单地从Node网站下载安装程序更多的工作。虽然可以使用来自[https://nodejs.org](https://nodejs.org/)的安装程序，但由于需要`sudo`，不建议这样做。
- en: If we did it this way, we'd have to prefix all of our `npm` commands with `sudo`
    and this can leave our system vulnerable to potential scripting attacks and is
    inconvenient. Instead, we can install Node via the Homebrew package manager and
    we can then interact with `npm` without worrying about having to run things as
    `sudo`.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们这样做，我们将不得不在所有的`npm`命令前加上`sudo`，这可能会使我们的系统容易受到潜在的脚本攻击，并且不方便。相反，我们可以通过Homebrew软件包管理器安装Node，然后我们可以与`npm`交互，而不必担心必须以`sudo`身份运行事务。
- en: Another great thing about using Homebrew to install Node is that it's automatically
    added to our PATH. This means we'll be able to type node commands without having
    to fiddle around with our environment files.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Homebrew安装Node的另一个好处是它会自动添加到我们的PATH中。这意味着我们将能够在不必费力地调整我们的环境文件的情况下输入node命令。
- en: Installing Node via Homebrew
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Homebrew安装Node
- en: 'The quickest way to get Homebrew is to visit [http://brew.sh](http://brew.sh/)
    and get hold of the installation script. It should look a little something like
    this:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 获取Homebrew的最快方法是访问[http://brew.sh](http://brew.sh/)并获取安装脚本。它应该看起来有点像这样：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Simply paste that into your Terminal and it'll download the Homebrew package
    manager to your Mac. We can then use brew install node to install Node on our
    system without any worries.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 只需将其粘贴到您的终端中，它将下载Homebrew软件包管理器到您的Mac上。然后我们可以使用brew install node在系统上安装Node而不必担心任何问题。
- en: Once you've done that, check your Node installation works by typing `node -v`
    and `npm -v`. If you get two version numbers back (that is, one for each), then
    you’re ready to go ahead with the rest of the book!
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，通过输入`node -v`和`npm -v`来检查您的Node安装是否正常工作。如果您得到两个版本号（即每个版本一个），那么您就可以继续阅读本书的其余部分了！
- en: 'In order to manage the different Node versions, we could also install the **Node
    Version Manager** (**NVM**). Do note however that this is currently only supported
    by Mac at present and not Windows. To install NVM, we can use Homebrew like so:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为了管理不同的Node版本，我们还可以安装**Node Version Manager**（**NVM**）。但请注意，目前仅Mac支持此功能，不支持Windows。要安装NVM，我们可以使用Homebrew，就像这样：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Editor
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编辑器
- en: A variety of editors can be used, such as Visual Studio Code, Sublime Text,
    Atom, and WebStorm. I recommend Visual Studio Code ([https://code.visualstudio.com](https://code.visualstudio.com))
    as it has a frequent release cycle and a wealth of Vue extensions that we can
    use to improve our workflow.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用各种编辑器，如Visual Studio Code，Sublime Text，Atom和WebStorm。我推荐使用Visual Studio
    Code ([https://code.visualstudio.com](https://code.visualstudio.com))，因为它有频繁的发布周期和丰富的Vue扩展，可以用来改善我们的工作流程。
- en: Browser
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 浏览器
- en: We will be using Google Chrome to run our project(s) as this has an extension
    named Vue devtools that is instrumental to our development workflow. If you do
    not use Google Chrome, ensure your browser has the same Vue devtools extension
    that is available for usage.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Google Chrome来运行我们的项目，因为它有一个名为Vue devtools的扩展，对我们的开发工作流程至关重要。如果您不使用Google
    Chrome，请确保您的浏览器具有可供使用的相同Vue devtools扩展。
- en: Installing the Vue devtools
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Vue devtools
- en: 'Head over to the Google Chrome Extensions store and download Vue.js devtools
    ([https://goo.gl/Sc3YU1](https://goo.gl/Sc3YU1)). After installing this, you''ll
    then have access to the Vue panel within your developer tools. In the following
    example, we''re able to see the data object inside of our Vue instance:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 前往Google Chrome扩展商店并下载Vue.js devtools ([https://goo.gl/Sc3YU1](https://goo.gl/Sc3YU1))。安装后，您将可以在开发者工具中访问Vue面板。在下面的示例中，我们能够看到Vue实例中的数据对象：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If we then head over to our browser and open up the devtools we can see that
    Vue has been detected and that our message has outputted on to the screen:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们转到浏览器并打开开发工具，我们可以看到Vue已被检测到，并且我们的消息已经输出到屏幕上：
- en: '![](assets/1154a7c6-8c1c-461f-89a9-b86d0c9e7e79.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1154a7c6-8c1c-461f-89a9-b86d0c9e7e79.png)'
- en: We'll be using this throughout the book to gain extra insight into our applications.
    Do be aware that the developer tools will only recognize your Vue project if it
    is served on a local server.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在整本书中使用它来更深入地了解我们的应用程序。请注意，开发者工具只会在本地服务器上提供Vue项目时才能识别您的Vue项目。
- en: Vue CLI
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vue CLI
- en: 'To take advantage of all of the features of Vue, we''ll be using Vue CLI. This
    allows us to create projects with various starter templates with appropriate bundling/transpilation
    configurations. Type the following into your Terminal ensuring Node is installed:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 为了充分利用Vue的所有功能，我们将使用Vue CLI。这使我们能够使用各种起始模板创建项目，并具有适当的捆绑/转译配置。在确保安装了Node的情况下，将以下内容输入到您的终端中：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This sets us up for the future sections as using starter templates significantly
    empowers our workflow.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这为我们未来的章节做好了准备，使用起始模板显著增强了我们的工作流程。
- en: How Vue.js compares
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vue.js的比较
- en: This book seeks to outline how to best structure your Vue applications with
    common development patterns, best practices, and anti-patterns to avoid.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在概述如何使用常见的开发模式、最佳实践和要避免的反模式来最佳地构建Vue应用程序。
- en: Our journey starts by taking a look at how Vue shapes up to other common projects,
    and if you measure your frameworks by GitHub stars, Vue is clearly a future winner.
    According to [https://bestof.js.org](https://bestof.js.org), in 2017 it currently
    measures at 114 stars per day in comparison to React's 76 and Angular's 32.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的旅程始于看看Vue与其他常见项目的比较，如果你通过GitHub星标来衡量你的框架，Vue显然是未来的赢家。根据[https://bestof.js.org](https://bestof.js.org)，2017年它的每日星标数目为114，而React为76，Angular为32。
- en: Framework discussion when talking about modern web development technologies
    is an interesting one. Very rarely do you find a true, unbiased comparison...
    but that's fine! It's not about which framework or library is best, but rather
    what's best for your team, project goals, consumers, and hundreds of other variables.
    As a Vue developer, you're likely a person that wants to build reactive web applications
    with a simple, easy-to-use API.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 谈论现代Web开发技术时，对框架的讨论是一个有趣的话题。很少能找到一个真正客观的比较...但没关系！重点不在于哪个框架或库最好，而在于什么对你的团队、项目目标、消费者以及其他数百个变量最好。作为一个Vue开发者，你可能是一个想要用简单、易于使用的API构建响应式Web应用的人。
- en: 'It''s this adaptable, easy-to-use API that makes Vue pleasant to work with,
    and perhaps one of the strongest points of Vue is the simple, focused documentation.
    It has a significantly low barrier to entry: simply add a script file from a CDN,
    initialize a new Vue instance... and you''re away! Granted, there''s much more
    to Vue than this, but in contrast to some fully fledged frameworks such as Angular,
    you''d be forgiven for thinking it''s that easy.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 正是这种适应性强、易于使用的API使得Vue很愉快地使用，也许Vue最强大的地方之一就是简单而专注的文档。它的门槛非常低：只需从CDN添加一个脚本文件，初始化一个新的Vue实例...然后你就可以开始了！当然，Vue比这更复杂得多，但与一些完整的框架如Angular相比，你可能会原谅自己认为它是如此简单。
- en: Vue uses templates, declarative bindings, and a component-based architecture
    to separate concerns and make projects easier to maintain. This becomes especially
    important when considering which framework to use inside of an enterprise. Usually,
    this is where projects such Angular shine as it's ability to enforce standards
    across the entire project.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Vue使用模板、声明式绑定和基于组件的架构来分离关注点，使项目更易于维护。当考虑在企业内部使用哪个框架时，这变得尤为重要。通常情况下，这就是Angular等项目的闪光之处，因为它能够在整个项目中强制执行标准。
- en: We've established it's easy to use, but Vue is quite young in comparison to
    its competitors... how do we know it's not all hype? Is it being used in production
    by anyone? It certainly is! GitLab recently wrote an article about why they chose
    Vue.js ([https://about.gitlab.com/2016/10/20/why-we-chose-vue/](https://about.gitlab.com/2016/10/20/why-we-chose-vue/)),
    and the primary benefits they cited were ease of use, less code, and fewer assumptions.
    Other companies such as Laravel, Nintendo, Sainsbury's and Alibaba are all following
    this route and even companies such as Rever Shine rewrote their web client from
    Angular 2.x to Vue 2.x ([https://medium.com/reverdev/why-we-moved-from-angular-2-to-vue-js-and-why-we-didnt-choose-react-ef807d9f4163](https://medium.com/reverdev/why-we-moved-from-angular-2-to-vue-js-and-why-we-didnt-choose-react-ef807d9f4163)).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经确定它很容易使用，但是与竞争对手相比，Vue还很年轻...我们怎么知道这不全是炒作呢？有人在生产中使用它吗？当然有！GitLab最近写了一篇关于他们为什么选择Vue.js的文章（[https://about.gitlab.com/2016/10/20/why-we-chose-vue/](https://about.gitlab.com/2016/10/20/why-we-chose-vue/)），他们列举的主要优点是易用性、代码量少和假设少。其他公司如Laravel、任天堂、Sainsbury's和阿里巴巴都在追随这条路线，甚至像Rever
    Shine这样的公司也将他们的Web客户端从Angular 2.x重写为Vue 2.x（[https://medium.com/reverdev/why-we-moved-from-angular-2-to-vue-js-and-why-we-didnt-choose-react-ef807d9f4163](https://medium.com/reverdev/why-we-moved-from-angular-2-to-vue-js-and-why-we-didnt-choose-react-ef807d9f4163)）。
- en: It's not just public – facing web applications that are taking advantage of
    Vue.js—NativeScript Sidekick ([https://www.nativescript.org/blog/announcing-the-nativescript-sidekick-public-preview](https://www.nativescript.org/blog/announcing-the-nativescript-sidekick-public-preview)),
    a project focused on improving the NativeScript development experience, is built
    with Electron and Vue.js.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 不仅是公开面向的Web应用程序正在利用Vue.js——NativeScript Sidekick（[https://www.nativescript.org/blog/announcing-the-nativescript-sidekick-public-preview](https://www.nativescript.org/blog/announcing-the-nativescript-sidekick-public-preview)）是一个专注于改进NativeScript开发体验的项目，它是使用Electron和Vue.js构建的。
- en: 'If we gain some insights from the State of JavaScript survey ([http://2016.stateofjs.com/2016/frontend/](http://2016.stateofjs.com/2016/frontend/))
    by Sacha Greif ([https://twitter.com/SachaGreif](https://twitter.com/SachaGreif))
    and Michael Rambeau ([http://michaelrambeau.com/](http://michaelrambeau.com/)),
    we can see that a whopping **89%** of people used Vue before and want to use it
    again. Other libraries such as React have similar satisfaction rates at **92%**,
    but Angular 2 and onwards didn''t see anywhere near as much love, with **65%**
    wanting to use it again:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们从Sacha Greif（[https://twitter.com/SachaGreif](https://twitter.com/SachaGreif)）和Michael
    Rambeau（[http://michaelrambeau.com/](http://michaelrambeau.com/)）的JavaScript调查中获得一些见解，我们可以看到惊人的**89%**的人在之前使用过Vue，并希望再次使用它。其他库如React的满意度率也达到了**92%**，但是Angular
    2及以后的版本并没有得到太多的喜爱，只有**65%**的人希望再次使用它。
- en: '![](assets/c4a92ed0-fa01-40d4-8f55-f7b42de01887.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c4a92ed0-fa01-40d4-8f55-f7b42de01887.png)'
- en: What other options are available to us as frontend developers? How do they shape
    up to Vue? Let's start with React.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 作为前端开发人员，我们还有哪些其他选择？它们与Vue相比如何？让我们从React开始。
- en: React
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: React
- en: React is a JavaScript library developed and maintained by Facebook, and is largely
    the closest comparison to Vue as their goals are very similar. Like Vue, React
    is component based and takes advantage of Virtual DOM concepts. This allows for
    performant rendering of DOM nodes, as a different algorithm is used to determine
    which parts of the DOM have changed and how best to render/update them on change.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: React是由Facebook开发和维护的JavaScript库，与Vue最为接近，因为它们的目标非常相似。与Vue一样，React是基于组件的，并利用了虚拟DOM的概念。这允许对DOM节点进行高性能渲染，因为使用了不同的算法来确定DOM的哪些部分发生了变化，以及如何在变化时最好地渲染/更新它们。
- en: 'When it comes to templates, React uses JSX to render items on the screen. It
    takes the more verbose way of creating DOM elements with `React.createElement`
    and simplifies it like so:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在模板方面，React使用JSX来渲染屏幕上的项目。它采用了更冗长的方式来创建DOM元素，使用`React.createElement`并简化如下：
- en: 'This is how it will look without JSX:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这是没有JSX的样子：
- en: '[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Here is how it will look with JSX. As you can see, the two appear very different
    from one another:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是JSX的样子。如你所见，两者看起来非常不同：
- en: '[PRE5]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: For newer developers, this adds a slight learning overhead when compared to
    Vue's simple HTML template, but it is also what gives React its declarative power.
    It has a state management system using `setState()`, but also has compatibility
    with third-party state containers such as Redux and MobX. Vue also has similar
    capabilities with the `Vuex` library, and we'll be looking at this in further
    detail in later sections of this book.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 对于新手开发者来说，与Vue的简单HTML模板相比，这增加了一些学习负担，但也正是这一点赋予了React其声明性的力量。它有一个使用`setState()`的状态管理系统，但也与Redux和MobX等第三方状态容器兼容。Vue也具有类似的功能，使用`Vuex`库，我们将在本书的后面部分更详细地讨论这一点。
- en: One of the common recent concerns of using React is the BSD + Patents license
    agreement, something to keep in mind if you're part of an enterprise. Due to this
    license, Apache recently declared that no Apache software products will use React.
    Another example of this is the announcement by [Wordpress.com](http://Wordpress.com)
    that they're no longer using React for their Gutenberg project ([https://ma.tt/2017/09/on-react-and-wordpress/](https://ma.tt/2017/09/on-react-and-wordpress/)).
    This doesn't necessarily mean that you shouldn't use React in your projects, but
    is worth pointing out nonetheless.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 使用React的一个常见最近关注点是BSD +专利许可协议，如果你是企业的一部分，这是需要牢记的事情。由于这个许可证，Apache最近宣布，不会有任何Apache软件产品使用React。另一个例子是[Wordpress.com](http://Wordpress.com)宣布他们不再在Gutenberg项目中使用React（[https://ma.tt/2017/09/on-react-and-wordpress/](https://ma.tt/2017/09/on-react-and-wordpress/)）。这并不一定意味着你不应该在你的项目中使用React，但还是值得指出的。
- en: Some concerned developers elect to use alternatives such as Preact but more
    recently Vue.js, as it meets a lot of the goals that React developers are looking
    for when developing applications. To that end, Microsoft ([http://dev.office.com/fabric#/components](http://dev.office.com/fabric#/components)),
    Apple ([https://developer.apple.com/documentation](https://developer.apple.com/documentation)),
    and countless other companies have products released with React – make of that
    what you will.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 一些担心的开发者选择使用替代方案，如Preact，但最近更多地选择了Vue.js，因为它满足了React开发者在开发应用程序时寻求的许多目标。为此，微软（[http://dev.office.com/fabric#/components](http://dev.office.com/fabric#/components)）、苹果（[https://developer.apple.com/documentation](https://developer.apple.com/documentation)）和其他无数公司都发布了使用React的产品-你可以从中得出什么结论。
- en: Angular
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Angular
- en: Angular is an opinionated JavaScript framework developed and maintained by Google.
    At the time of writing, it's currently approaching version 5 and offers a structured
    standards-based approach to web development. It uses TypeScript to enforce type
    safety and ECMAScript 2015 > support.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Angular是由Google开发和维护的一种有主见的JavaScript框架。在撰写本文时，它目前接近第5版，并提供了一种基于结构化标准的网页开发方法。它使用TypeScript来强制执行类型安全和ECMAScript
    2015>支持。
- en: In comparison to Angular, Vue looks to enforce a smaller set of constraints
    and allows the developer more choice. One of Angular's core competencies is TypeScript
    everywhere. Most developers that came from Angular.js were hearing about TypeScript
    for the first time when Angular 2 was announced, and I noticed a fair amount of
    backlash because of the need to "learn a new language". The thing is, JavaScript
    is TypeScript and the value of increased tooling (autocompletion, refactoring,
    type safety, and much more) cannot be overlooked.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 与Angular相比，Vue似乎强制执行一组更小的约束，并允许开发人员有更多的选择。Angular的核心竞争力之一是在任何地方都使用TypeScript。大多数从Angular.js过来的开发人员在Angular
    2宣布时第一次听说TypeScript，我注意到有相当多的反对意见，因为需要“学习一门新语言”。事实上，JavaScript就是TypeScript，增加工具（自动完成、重构、类型安全等）的价值是不容忽视的。
- en: This is especially true when it comes to working on enterprise projects as the
    onboarding challenge gets harder with increased project complexity and team size.
    With TypeScript, we're able to better reason about the relationships between our
    code at scale. It's this structured development experience that is the prime strength
    of Angular. This is why the Angular team chose TypeScript as the primary development
    tool. The benefits of TypeScript are not limited to Angular; we'll be looking
    at how we can integrate Vue with TypeScript to gain these same benefits later
    on in the book.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是在处理企业项目时，随着项目复杂性和团队规模的增加，入门挑战变得更加困难。有了TypeScript，我们能够更好地推理代码之间的关系。这种结构化的开发体验是Angular的主要优势。这就是为什么Angular团队选择TypeScript作为主要开发工具的原因。TypeScript的好处不仅限于Angular；我们将在本书后面看看如何将Vue与TypeScript集成以获得同样的好处。
- en: Are there any drawbacks to using Angular as a development framework? Not necessarily.
    When we're comparing it to Vue, the onboarding experience is vitally different.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Angular作为开发框架有什么缺点吗？不一定。当与Vue进行比较时，入门体验是非常不同的。
- en: Mobile development
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动开发
- en: When it comes to developing mobile applications, projects such as Angular and
    React are great choices for developing mobile-first applications. The success
    of the NativeScript, React Native, and Ionic Framework projects have boosted the
    significant popularity of these frameworks. For instance, Ionic Framework currently
    has more stars than Angular on GitHub!
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发移动应用程序时，像Angular和React这样的项目是开发面向移动的应用程序的绝佳选择。NativeScript、React Native和Ionic
    Framework项目的成功大大提升了这些框架的流行度。例如，Ionic Framework目前在GitHub上的星标比Angular还要多！
- en: 'Vue is making waves in this area with projects such as NativeScript Vue, Weex,
    and Quasar Framework. All of the listed projects are relatively new, but it only
    takes one to truly spike the popularity of Vue in production even further. Using
    NativeScript Vue as an example, it only takes 43 lines of code to create a cross-platform
    mobile application that connects to a REST API and displays the results on screen.
    If you''d like to follow along with this yourself, run:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Vue在这一领域取得了一定的成就，例如NativeScript Vue、Weex和Quasar Framework等项目。所有列出的项目都相对较新，但只需要一个项目真正地提升Vue在生产中的流行度。以NativeScript
    Vue为例，只需要43行代码就可以创建一个连接到REST API并在屏幕上显示结果的跨平台移动应用程序。如果你想自己尝试一下，可以运行：
- en: '[PRE6]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Then, we can place the following inside of our `app/app.js`:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以将以下内容放在`app/app.js`中：
- en: '[PRE7]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'If we then run our code, we can see a list of posts. You''ll notice that our
    Vue code is declarative, and we have the power of larger frameworks at our disposal
    with much less code:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们运行我们的代码，就可以看到一个帖子列表。你会注意到我们的Vue代码是声明式的，而且我们可以用更少的代码获得更大框架的功能：
- en: '![](assets/533f7db4-3b7c-495c-9897-88cd50b6da2f.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/533f7db4-3b7c-495c-9897-88cd50b6da2f.jpg)'
- en: Server-Side Rendering (SSR)
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务器端渲染（SSR）
- en: Server-Side Rendering allows us to take our frontend JavaScript application
    and render it to static HTML on the server. This is important as it allows us
    to significantly speed up our application as the browser only has to parse the
    critical HTML/CSS. Maximizing performance is a key component of modern day web
    applications and the expectation continues to grow with progressive web applications
    and projects such as AMP. Both React, Angular and Vue are capable of SSR using
    a variety of different patterns.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器端渲染允许我们将前端JavaScript应用程序渲染为服务器上的静态HTML。这很重要，因为它可以显著加快我们的应用程序，因为浏览器只需解析关键的HTML/CSS。最大化性能是现代Web应用程序的关键组成部分，随着渐进式Web应用程序和AMP等项目的预期不断增长。React、Angular和Vue都能够使用各种不同的模式进行服务器端渲染。
- en: 'Let''s take a look at how we can achieve a simple Server-Side rendered Vue
    application:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何实现一个简单的服务器端渲染的Vue应用程序：
- en: '[PRE8]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Inside `server.js`, we can create a new Vue instance and use the Vue renderer
    to output the content of our instance as an HTML:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在`server.js`中，我们可以创建一个新的Vue实例，并使用Vue渲染器将我们实例的内容输出为HTML：
- en: '[PRE9]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To run the application, type the following in the Terminal:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行应用程序，请在终端中输入以下内容：
- en: '[PRE10]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We can then open this in our browser at `http://localhost: 8080` and we''d
    see the current date and time on screen. This is a simple example but we were
    able to see our application rendered using the `vue-server-renderer`. Notice how
    we''re not defining a target element to render content within our Vue instance;
    this is handled by the `renderer.renderToString` function.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以在浏览器中打开`http://localhost:8080`，我们会在屏幕上看到当前的日期和时间。这只是一个简单的例子，但我们能够看到我们的应用程序是使用`vue-server-renderer`渲染的。请注意，我们没有定义一个目标元素来在我们的Vue实例中渲染内容；这是由`renderer.renderToString`函数处理的。
- en: You'll also notice that we have the `data-server-rendered="true"` attribute
    on our DOM node, which isn't present on a client-side rendered Vue application.
    This allows us to hydrate our client-side instance with our server-side instance,
    something we'll be looking at more detail in the later chapter(s) on Nuxt ([https://nuxtjs.org/](https://nuxtjs.org/)).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 您还会注意到我们在DOM节点上有`data-server-rendered="true"`属性，这在客户端渲染的Vue应用程序中是不存在的。这使我们能够用服务器端实例来滋养我们的客户端实例，这是我们将在后面关于Nuxt的章节中更详细地讨论的内容（[https://nuxtjs.org/](https://nuxtjs.org/)）。
- en: Conclusion
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: The choice of web framework in the enterprise is always going to be dependent
    on the goals of your project, team, and organizational priorities. No one framework
    is the correct choice, because optimal means different things depending on the
    context. Each framework or library has its own unique benefits, drawbacks, and
    priorities. If your priority is to create web applications quickly and at scale,
    Vue can compete with the other market solutions.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 企业中的Web框架选择总是取决于项目、团队和组织优先事项的目标。没有一个框架是正确的选择，因为最佳选择取决于上下文。每个框架或库都有其独特的优点、缺点和优先事项。如果您的优先事项是快速创建并扩展Web应用程序，Vue可以与其他市场解决方案竞争。
- en: Vue is feature rich, declarative, and highly legible. Even though it's a simplistic
    framework, the declarative nature of Vue allows us to get up and running at blazing
    fast speed without having to worry about overly complex patterns.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Vue功能丰富、声明式且高度可读。尽管它是一个简单的框架，但Vue的声明性质使我们能够快速启动而不必担心过于复杂的模式。
- en: Summary
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at how we can set up our development environment
    and how Vue is being used in many products throughout the industry. We've learned
    that Vue is a simple, yet powerful frontend development framework. As well as
    this, we've considered how Vue shapes up when compared to other popular projects,
    such as Angular and React. We've also looked at how Vue works with other technologies,
    such as NativeScript, to create cross-platform native mobile applications. Finally,
    we've investigated SSR at a high level and set the stage for chapters to come.
    Hopefully, by now you're convinced that Vue is worth learning, and you're looking
    forward to taking advantage of all it has to offer!
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看了如何设置开发环境以及Vue在整个行业中的应用。我们了解到Vue是一个简单但强大的前端开发框架。此外，我们考虑了与其他流行项目（如Angular和React）相比，Vue的表现如何。我们还看了Vue如何与其他技术（如NativeScript）配合使用，创建跨平台原生移动应用程序。最后，我们以高层次调查了SSR，并为接下来的章节做好了铺垫。希望到现在你已经相信学习Vue是值得的，并且期待着利用它所提供的一切！
- en: In the next chapter, we'll be looking at the Vue CLI and how to take advantage
    of tools such as Webpack to create our Vue projects. As well as this, we'll look
    at how to take advantage of static types and tooling with TypeScript and reactive
    observable patterns with RxJS within Vue.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看一下Vue CLI以及如何利用诸如Webpack之类的工具来创建我们的Vue项目。此外，我们还将探讨如何利用静态类型和TypeScript以及在Vue中使用RxJS的响应式可观察模式。
