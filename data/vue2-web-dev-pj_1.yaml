- en: Getting Started with Vue
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用Vue
- en: Vue ([https://vuejs.org/](https://vuejs.org/)) is a JavaScript library focused
    on building web user interfaces. In this chapter, we will meet the library and
    after a brief introduction, we will start creating a web app, laying the ground
    for the different projects we will build together in this book.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Vue ([https://vuejs.org/](https://vuejs.org/))是一个专注于构建Web用户界面的JavaScript库。在本章中，我们将了解这个库，并在简要介绍之后，我们将开始创建一个Web应用程序，为我们在本书中一起构建的不同项目奠定基础。
- en: Why another frontend framework?
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么需要另一个前端框架？
- en: 'Vue is a relative newcomer in the JavaScript frontend landscape, but a very
    serious challenger to the current leading libraries. It is simple, flexible, and
    very fast, while still providing a lot of features and optional tools that can
    help you build a modern web app efficiently. Its creator, *Evan You*, calls it
    the **progressive framework**:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Vue在JavaScript前端领域是一个相对新手，但是对当前主要的库来说是一个非常严肃的挑战者。它简单、灵活、非常快速，同时还提供了许多功能和可选工具，可以帮助您高效地构建现代Web应用程序。它的创造者*Evan
    You*称其为**渐进式框架**：
- en: Vue is incrementally adoptable, with a core library focused on user interfaces
    that you can use in existing projects
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vue是可以逐步采用的，核心库专注于用户界面，您可以在现有项目中使用它
- en: You can make small prototypes all the way up to large and sophisticated web
    applications
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以制作小型原型，一直到大型复杂的Web应用程序
- en: Vue is approachable--the beginners can pick up the library easily, and the confirmed
    developers can be productive very quickly
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vue是易于接近的-初学者可以轻松掌握这个库，而经验丰富的开发人员可以很快提高生产力
- en: Vue roughly follows a Model-View-ViewModel architecture, which means the View
    (the user interface) and the Model (the data) are separated, with the ViewModel
    (Vue) being a mediator between the two. It handles the updates automatically and
    has been already optimized for you. Therefore, you don't have to specify when
    a part of the View should update because Vue will choose the right way and time
    to do so.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Vue大致遵循模型-视图-视图模型架构，这意味着视图（用户界面）和模型（数据）是分开的，视图模型（Vue）是两者之间的中介。它会自动处理更新，并已经为您进行了优化。因此，您不必指定视图的哪一部分应该更新，因为Vue会选择正确的方式和时间来进行更新。
- en: 'The library also takes inspiration from other similar libraries such as React,
    Angular, and Polymer. The following is an overview of its core features:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 该库还从其他类似的库（如React、Angular和Polymer）中汲取灵感。以下是其核心特性的概述：
- en: A reactive data system that can update your user interface automatically, with
    a lightweight virtual-DOM engine and minimal optimization efforts, is required
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个反应灵敏的数据系统可以自动更新您的用户界面，具有轻量级的虚拟DOM引擎和最小的优化工作是必需的
- en: Flexible View declaration--artist-friendly HTML templates, JSX (HTML inside
    JavaScript), or hyperscript render functions (pure JavaScript)
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 灵活的视图声明-艺术家友好的HTML模板、JSX（JavaScript内的HTML）或超文本渲染函数（纯JavaScript）
- en: Composable user interfaces with maintainable and reusable components
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可组合的用户界面，具有可维护和可重用的组件
- en: Official companion libraries that come with routing, state management, scaffolding,
    and more advanced features, making Vue a non-opinionated but fully fleshed out
    frontend framework
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 官方伴随库提供了路由、状态管理、脚手架和更高级的功能，使Vue成为一个非武断但完全成熟的前端框架
- en: A trending project
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个热门项目
- en: '*Evan You* started working on the first prototype of Vue in 2013, while working
    at Google, using Angular. The initial goal was to have all the cool features of
    Angular, such as data binding and data-driven DOM, but without the extra concepts
    that make this framework opinionated and heavy to learn and use.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*Evan You*在2013年开始在谷歌工作时着手开发了Vue的第一个原型，当时他正在使用Angular。最初的目标是拥有Angular的所有很酷的特性，比如数据绑定和数据驱动的DOM，但不包含使这个框架武断和难以学习和使用的额外概念。'
- en: The first public release was published on February 2014 and had immediate success
    the very first day, with HackerNews frontpage, `/r/javascript` at the top spot
    and 10k unique visits on the official website.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 2014年2月，第一个公开版本发布，第一天就取得了巨大成功，在HackerNews的首页、`/r/javascript`排名第一，并且官方网站访问量达到了1万次。
- en: The first major version 1.0 was reached in October 2015, and by the end of that
    year, the npm downloads rocketed to 382k ytd, the GitHub repository received 11k
    stars, the official website had 363k unique visitors, and the popular PHP framework
    Laravel had picked Vue as its official frontend library instead of React.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个主要版本1.0于2015年10月发布，到年底，npm下载量飙升至382k，GitHub仓库获得了11k颗星，官方网站访问量达到了363k，流行的PHP框架Laravel选择了Vue作为其官方前端库，而不是React。
- en: The second major version, 2.0, was released in September 2016, with a new virtual
    DOM-based renderer and many new features such as server-side rendering and performance
    improvements. This is the version we will use in this book. It is now one of the
    fastest frontend libraries, outperforming even React according to a comparison
    refined with the React team ([https://vuejs.org/v2/guide/comparison](https://vuejs.org/v2/guide/comparison)).
    At the time of writing this book, Vue was the second most popular frontend library
    on GitHub with 72k stars, just behind React and ahead of Angular 1 ([https://github.com/showcases/front-end-javascript-frameworks](https://github.com/showcases/front-end-javascript-frameworks)).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个主要版本2.0于2016年9月发布，采用了基于虚拟DOM的新渲染器和许多新功能，如服务器端渲染和性能改进。这就是本书中将使用的版本。现在它是最快的前端库之一，甚至在与React团队精心比较后，超过了React（[https://vuejs.org/v2/guide/comparison](https://vuejs.org/v2/guide/comparison)）。撰写本书时，Vue是GitHub上第二受欢迎的前端库，拥有72k颗星，仅次于React，领先于Angular
    1（[https://github.com/showcases/front-end-javascript-frameworks](https://github.com/showcases/front-end-javascript-frameworks)）。
- en: The next evolution of the library on the roadmap includes more integration with
    Vue-native libraries such as Weex and NativeScript to create native mobile apps
    with Vue, plus new features and improvements.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 路线图上该库的下一个发展阶段包括更多与Vue原生库（如Weex和NativeScript）的集成，以创建具有Vue的原生移动应用程序，以及新功能和改进。
- en: Today, Vue is used by many companies such as Microsoft, Adobe, Alibaba, Baidu,
    Xiaomi, Expedia, Nintendo, and GitLab.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，Vue被许多公司使用，如微软、Adobe、阿里巴巴、百度、小米、Expedia、任天堂和GitLab。
- en: Compatibility requirements
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 兼容性要求
- en: Vue doesn't have any dependency and can be used in any ECMAScript 5 minimum-compliant
    browser. This means that it is not compatible with Internet Explorer 8 or less,
    because it needs relatively new JavaScript features such as `Object.defineProperty`,
    which can't be polyfilled on older browsers.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Vue没有任何依赖，可以在任何符合ECMAScript 5最低标准的浏览器中使用。这意味着它与Internet Explorer 8或更低版本不兼容，因为它需要相对较新的JavaScript功能，如`Object.defineProperty`，这在旧版浏览器上无法进行polyfill。
- en: In this book, we are writing code in JavaScript version ES2015 (formerly ES6),
    so for the first few chapters, you will need a modern browser to run the examples
    (such as Edge, Firefox, or Chrome). At some point, we will introduce a compiler
    called *Babel* that will help us make our code compatible with older browsers.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们使用JavaScript版本ES2015（以前是ES6）编写代码，因此在前几章中，您需要一个现代浏览器来运行示例（如Edge、Firefox或Chrome）。在某个时候，我们将介绍一个名为*Babel*的编译器，它将帮助我们使我们的代码与旧版浏览器兼容。
- en: One-minute setup
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一分钟设置
- en: 'Without further ado, let''s start creating our first Vue app with a very quick
    setup. Vue is flexible enough to be included in any web page with a simple `script`
    tag. Let''s create a very simple web page that includes the library, with a simple
    `div` element and another `script` tag:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 话不多说，让我们开始用一个非常快速的设置创建我们的第一个Vue应用程序。Vue足够灵活，可以通过简单的`script`标签包含在任何网页中。让我们创建一个非常简单的网页，其中包括该库，一个简单的`div`元素和另一个`script`标签：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In the browser console, we should have something like this:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器控制台中，我们应该有类似这样的东西：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As you can see in the preceding code, the library exposes a `Vue` object that
    contains all the features we need to use it. We are now ready to go.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在前面的代码中所看到的，该库公开了一个包含我们需要使用它的所有功能的`Vue`对象。我们现在准备好了。
- en: Creating an app
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个应用程序
- en: 'For now, we don''t have any Vue app running on our web page. The whole library
    is based on **Vue instances**, which are the mediators between your View and your
    data. So, we need to create a new Vue instance to start our app:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们的网页上没有任何Vue应用程序在运行。整个库都是基于**Vue实例**的，它们是视图和数据之间的中介。因此，我们需要创建一个新的Vue实例来启动我们的应用程序：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The Vue constructor is called with the `new` keyword to create a new instance.
    It has one argument--the option object. It can have multiple attributes (called
    options), which we will discover progressively in the following chapters. For
    now, we are using only two of them.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`new`关键字调用Vue构造函数来创建一个新实例。它有一个参数--选项对象。它可以有多个属性（称为选项），我们将在接下来的章节中逐渐发现。目前，我们只使用了其中的两个。
- en: 'With the `el` option, we tell Vue where to add (or "mount") the instance on
    our web page using a CSS selector. In the example, our instance will use the `<div
    id="root">` DOM element as its root element. We could also use the `$mount` method
    of the Vue instance instead of the `el` option:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`el`选项，我们告诉Vue在哪里使用CSS选择器在我们的网页上添加（或“挂载”）实例。在这个例子中，我们的实例将使用`<div id="root">`
    DOM元素作为其根元素。我们也可以使用Vue实例的`$mount`方法而不是`el`选项：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Most of the special methods and attributes of a Vue instance start with a dollar
    character.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数Vue实例的特殊方法和属性都以美元符号开头。
- en: We will also initialize some data in the `data` option with a `message` property
    that contains a string. Now the Vue app is running, but it doesn't do much, yet.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将在`data`选项中初始化一些数据，其中包含一个包含字符串的`message`属性。现在Vue应用程序正在运行，但它还没有做太多事情。
- en: You can add as many Vue apps as you like on a single web page. Just create a
    new Vue instance for each of them and mount them on different DOM elements. This
    comes in handy when you want to integrate Vue in an existing project.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在单个网页上添加尽可能多的Vue应用程序。只需为它们中的每一个创建一个新的Vue实例，并将它们挂载在不同的DOM元素上。当您想要将Vue集成到现有项目中时，这将非常方便。
- en: Vue devtools
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vue devtools
- en: An official debugger tool for Vue is available on Chrome as an extension called
    Vue.js devtools. It can help you see how your app is running to help you debug
    your code. You can download it from the Chrome Web Store ([https://chrome.google.com/webstore/search/vue](https://chrome.google.com/webstore/search/vue))
    or from the Firefox addons registry ([https://addons.mozilla.org/en-US/firefox/addon/vue-js-devtools/?src=ss](https://addons.mozilla.org/en-US/firefox/addon/vue-js-devtools/?src=ss)).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Vue的官方调试工具在Chrome上作为一个名为Vue.js devtools的扩展可用。它可以帮助您查看您的应用程序的运行情况，以帮助您调试您的代码。您可以从Chrome
    Web Store（[https://chrome.google.com/webstore/search/vue](https://chrome.google.com/webstore/search/vue)）或Firefox附加组件注册表（[https://addons.mozilla.org/en-US/firefox/addon/vue-js-devtools/?src=ss](https://addons.mozilla.org/en-US/firefox/addon/vue-js-devtools/?src=ss)）下载它。
- en: 'For the Chrome version, you need to set an additional setting. In the extension
    settings, enable Allow access to file URLs so that it can detect Vue on a web
    page opened from your local drive:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Chrome版本，您需要设置一个额外的设置。在扩展设置中，启用允许访问文件URL，以便它可以检测到从本地驱动器打开的网页上的Vue：
- en: '![](assets/8e6ecee5-8be1-4e90-aa44-d5fb9661f379.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8e6ecee5-8be1-4e90-aa44-d5fb9661f379.png)'
- en: 'On your web page, open the Chrome Dev Tools with the *F12* shortcut (or *Shift*
    + *command* + *c* on OS X) and search for the Vue tab (it may be hidden in the
    More tools... dropdown). Once it is opened, you can see a tree with our Vue instance
    named Root by convention. If you click on it, the sidebar displays the properties
    of the instance:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的网页上，使用*F12*快捷键（或在OS X上使用*Shift* + *command* + *c*）打开Chrome Dev Tools，并搜索Vue标签（它可能隐藏在More
    tools...下拉菜单中）。一旦打开，您可以看到一个树，其中包含我们的Vue实例，按照惯例命名为Root。如果单击它，侧边栏将显示实例的属性：
- en: '![](assets/9d2b149a-ce2b-486e-aa66-413add014eaf.png)You can drag and drop the
    `devtools` tab to your liking. Don''t hesitate to place it among the first tabs,
    as it will be hidden in the page where Vue is not in development mode or is not
    running at all.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/9d2b149a-ce2b-486e-aa66-413add014eaf.png)您可以随意拖动`devtools`选项卡。不要犹豫将其放在前面的选项卡中，因为在Vue不处于开发模式或根本没有运行时，它将被隐藏在页面中。'
- en: 'You can change the name of your instance with the `name` option:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`name`选项更改实例的名称：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This will help you see where your instance in the devtools is when you will
    have many more:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这将帮助您在拥有更多实例时看到它们在开发工具中的位置：
- en: '![](assets/9a2be243-fc01-44c2-b0b3-ac9e5cb4f6b1.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9a2be243-fc01-44c2-b0b3-ac9e5cb4f6b1.png)'
- en: Templates make your DOM dynamic
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模板使您的DOM动态化
- en: With Vue, we have several systems at our disposal to write our View. For now,
    we will start with templates. A template is the easiest way to describe a View
    because it looks like HTML a lot, but with some extra syntax to make the DOM dynamically
    update very easily.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Vue，我们有几个系统可供编写我们的视图。现在，我们将从模板开始。模板是描述视图的最简单方式，因为它看起来很像HTML，但有一些额外的语法，使DOM动态更新非常容易。
- en: Displaying text
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示文本
- en: 'The first template feature we will see is the **text interpolation**, which
    is used to display dynamic text inside our web page. The text interpolation syntax
    is a pair of double curly braces containing a JavaScript expression of any kind.
    Its result will replace the interpolation when Vue will process the template.
    Replace the `<div id="root">` element with the following:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到的第一个模板功能是**文本插值**，用于在网页内显示动态文本。文本插值语法是一对双大括号，其中包含任何类型的JavaScript表达式。当Vue处理模板时，其结果将替换插值。用以下内容替换`<div
    id="root">`元素：
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The template in this example has a `<p>` element whose content is the result
    of the `message` JavaScript expression. It will return the value of the message
    attribute of our instance. You should now have a new text displayed on your web
    page--Hello Vue.js!. It doesn't seem like much, but Vue has done a lot of work
    for us here--we now have the DOM wired with our data.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例中的模板具有一个`<p>`元素，其内容是`message` JavaScript表达式的结果。它将返回我们实例的message属性的值。现在，您的网页上应该显示一个新的文本--Hello
    Vue.js！。看起来不像什么，但Vue在这里为我们做了很多工作--我们现在的DOM与我们的数据连接起来了。
- en: 'To demonstrate this, open your browser console and change the `app.message`
    value and press *Enter* on the keyboard:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了证明这一点，打开浏览器控制台，更改`app.message`的值，然后按键盘上的*Enter*：
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The message has changed. This is called **data-binding**. It means that Vue
    is able to automatically update the DOM whenever your data changes without requiring
    anything from your part. The library includes a very powerful and efficient reactivity
    system that keeps track of all your data and is able to update what's needed when
    something changes. All of this is very fast indeed.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 消息已更改。这称为**数据绑定**。这意味着Vue能够在数据更改时自动更新DOM，而无需您的任何操作。该库包括一个非常强大和高效的响应系统，可以跟踪所有数据，并能够在某些内容更改时更新所需的内容。所有这些都非常快速。
- en: Adding basic interactivity with directives
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用指令添加基本交互性
- en: Let's add some interactivity to our otherwise quite static app, for example,
    a text input that will allow the user to change the message displayed. We can
    do that in templates with special HTML attributes called **directives**.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为我们原本相当静态的应用程序添加一些互动，例如，一个文本输入框，允许用户更改显示的消息。我们可以在模板中使用特殊的HTML属性，称为**指令**来实现这一点。
- en: All the directives in Vue start with `v-` and follow the kebab-case syntax.
    That means you should separate the words with a dash. Remember that HTML attributes
    are case insensitive (whether they are uppercase or lowercase doesn't matter).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Vue中的所有指令都以`v-`开头，并遵循kebab-case语法。这意味着您应该用破折号分隔单词。请记住，HTML属性不区分大小写（它们是大写还是小写都无关紧要）。
- en: 'The directive we need here is `v-model`, which will bind the value of our `<input>`
    element with our `message` data property. Add a new `<input>` element with the
    `v-model="message"` attribute inside the template:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里需要的指令是`v-model`，它将绑定我们的`<input>`元素的值与我们的`message`数据属性。在模板中添加一个带有`v-model="message"`属性的新的`<input>`元素：
- en: '[PRE7]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Vue will now update the `message` property automatically when the input value
    changes. You can play with the content of the input to verify that the text updates
    as you type and the value in the devtools changes:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当输入值发生变化时，Vue现在会自动更新`message`属性。您可以尝试更改输入内容，以验证文本随着您的输入而更新，devtools中的值也会发生变化：
- en: '![](assets/fbc3442c-5df2-4b7c-a7ec-c96f05a10278.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fbc3442c-5df2-4b7c-a7ec-c96f05a10278.png)'
- en: There are many more directives available in Vue, and you can even create your
    own. Don't worry, we will cover that in later chapters.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Vue中有许多其他指令可用，甚至可以创建自己的指令。不用担心，我们将在后面的章节中介绍这些内容。
- en: Summary
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we quickly set up a web page to get started using Vue and wrote
    a simple app. We created a Vue instance to mount the Vue app on the page and wrote
    a template to make the DOM dynamic. Inside this template, we used a JavaScript
    expression to display text, thanks to text interpolations. Finally, we added some
    interactivity with an input element that we bound to our data with the `v-model`
    directive.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们快速设置了一个网页，开始使用Vue并编写了一个简单的应用程序。我们创建了一个Vue实例来挂载Vue应用程序，并编写了一个模板来使DOM动态化。在这个模板中，我们使用了JavaScript表达式来显示文本，感谢文本插值。最后，我们通过一个输入元素添加了一些互动，将其与`v-model`指令绑定到我们的数据上。
- en: In the next chapter, we will create our first real web app with Vue--a markdown
    notebook. We will need more Vue superpowers to turn the development of this app
    into a fun and swift experience.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将使用Vue创建我们的第一个真正的Web应用程序--一个Markdown笔记本。我们将需要更多的Vue超能力，将这个应用程序的开发变成一个有趣而迅速的体验。
