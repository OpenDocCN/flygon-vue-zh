- en: Deploying an Application to Cloud Platforms
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 将应用程序部署到云平台
- en: Now it's time to deploy your application to the World Wide Web and make it available
    to everyone across the globe.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候将您的应用程序部署到全球范围内，使其对全球所有人都可用。
- en: In this chapter, we will learn how to do it with three different hosting platforms
    – Netlify, Now, and Firebase. Here, we will learn the process of creating the
    account on each platform, setting up the environment, configuring the application
    for deployment, and finally deploying it to the web.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将学习如何在三个不同的托管平台上进行操作 - Netlify，Now和Firebase。在这里，我们将学习在每个平台上创建帐户的过程，设置环境，配置应用程序以进行部署，最后将其部署到网络上。
- en: 'In this chapter, we''ll cover the following recipes:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下配方：
- en: Creating a Netlify account
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建Netlify帐户
- en: Preparing your application for deployment in Netlify
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为在Netlify上部署应用程序做准备
- en: Preparing for automatic deployment on Netlify with GitHub
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为在GitHub上的Netlify进行自动部署做准备
- en: Creating a Vercel account
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个Vercel帐户
- en: Configuring the Vercel-CLI and deploying your project
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Vercel-CLI并部署您的项目
- en: Preparing for automatic deployment on Vercel with GitHub
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为在GitHub上的Vercel进行自动部署做准备
- en: Creating a Firebase project
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个Firebase项目
- en: Configuring the Firebase-CLI and deploying your project
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Firebase-CLI并部署您的项目
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: In this chapter, we will be using **Node.js** and **Vue-CLI**.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用**Node.js**和**Vue-CLI**。
- en: 'Attention Windows Users! You need to install an NPM package called windows-build-tools
    in order to be able to install the following requisite packages. To do this, open
    PowerShell as the administrator and execute the following command: `> npm install
    -g windows-build-tools`'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注意Windows用户！您需要安装一个名为windows-build-tools的NPM包，以便能够安装以下必需的软件包。要做到这一点，以管理员身份打开PowerShell并执行以下命令：`>
    npm install -g windows-build-tools`
- en: 'To install Vue-CLI, you need to open Terminal (macOS or Linux) or Command Prompt/PowerShell (Windows)
    and execute the following command:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装Vue-CLI，您需要打开Terminal（macOS或Linux）或Command Prompt/PowerShell（Windows）并执行以下命令：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Creating a Vue project
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个Vue项目
- en: 'To create a Vue-CLI project, follow these steps:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个Vue-CLI项目，请按照以下步骤进行：
- en: 'Open Terminal (macOS or Linux) or Command Prompt/PowerShell(Windows) and execute the
    following command:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Terminal（macOS或Linux）或Command Prompt/PowerShell（Windows）并执行以下命令：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Vue-CLI will ask for you to choose a preset; select `Manually select features` using
    the *spacebar*:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Vue-CLI将要求您选择一个预设；使用*空格键*选择`Manually select features`：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now, Vue-CLI will ask for the features, and you will need to select `Router`,
    `Vuex`, and` Linter / Formatter` as an additional feature on top of the default
    ones:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，Vue-CLI将要求选择功能，您需要选择`Router`，`Vuex`和`Linter / Formatter`作为默认功能之外的附加功能：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now, Vue-CLI will ask whether you want to use history mode for route management.
    We will choose `y` (yes):'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，Vue-CLI将询问您是否要使用历史模式进行路由管理。我们将选择`y`（是）：
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Continue the process by selecting the linter and formatter. We will select `ESLint
    + Airbnb config`:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择linter和formatter来继续该过程。我们将选择`ESLint + Airbnb config`：
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Choose the additional features of the linter (here, `Lint and fix on commit`):'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择linter的附加功能（这里是`Lint and fix on commit`）：
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Select where you want to place the linter and formatter configuration files
    (here, `In dedicated config files`):'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您想要放置linter和formatter配置文件的位置（这里是`In dedicated config files`）：
- en: '[PRE7]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Finally, the CLI will ask you whether you want to save the settings for future
    projects; you will select `N`. After that, Vue-CLI will create the folder and
    install the dependencies for you:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，CLI将询问您是否要保存未来项目的设置；您将选择`N`。之后，Vue-CLI将为您创建文件夹并安装依赖项：
- en: '[PRE8]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Creating a Netlify account
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Netlify帐户
- en: It's time to start the deployment process to the Netlify platform. In this recipe,
    we will learn how to create our Netlify account so that we can deploy our application
    to the web.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候开始将部署过程到Netlify平台。在这个教程中，我们将学习如何创建我们的Netlify账户，以便我们可以将我们的应用程序部署到网络上。
- en: Getting ready
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'The prerequisites for this recipe are as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程的先决条件如下：
- en: An email address
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个电子邮件地址
- en: A GitHub account
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub账户
- en: A GitLab account
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个GitLab账户
- en: A BitBucket account
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个BitBucket账户
- en: In the process of creating an account on Netlify, you can do this with an **email**
    address, a **GitHub** account, a **GitLab** account, or a **BitBucket** account.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建Netlify账户的过程中，您可以使用**电子邮件**地址、**GitHub**账户、**GitLab**账户或**BitBucket**账户来实现这一点。
- en: How to do it...
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Here, we will learn how to create a Netlify account with an email address:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将学习如何使用电子邮件地址创建Netlify账户：
- en: Go to the Netlify website at [https://www.netlify.com/](https://www.netlify.com/)
    and click on **Sign up →** in the header menu. You will be redirected to the initial
    **Sign up** page.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到Netlify网站[https://www.netlify.com/](https://www.netlify.com/)，并在页眉菜单中单击**注册→**。您将被重定向到初始**注册**页面。
- en: On this page, you can select the method that you want to use to sign up to Netlify.
    In this process, we will continue with the email address. Click on the **Email**
    button to be redirected to the Email Sign up form.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个页面上，您可以选择您想要使用的注册Netlify的方法。在这个过程中，我们将继续使用电子邮件地址。点击**电子邮件**按钮，将被重定向到电子邮件注册表单。
- en: Fill in the form with your email address and a password of your choosing. There
    is a password rule of 8 characters minimum. After completing the form, click on
    the **Sign up** button. From there, you will be redirected to the Success page.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写表单，使用您选择的电子邮件地址和密码。密码规则为最少8个字符。填写完表单后，点击**注册**按钮。然后，您将被重定向到成功页面。
- en: Now, you will receive a verification email in your inbox that you need in order
    to continue using the Netlify platform. To continue, open your email inbox and
    check the Netlify email.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您将在收件箱中收到一封验证电子邮件，您需要这封邮件才能继续使用Netlify平台。要继续，请打开您的电子邮件收件箱并检查Netlify的电子邮件。
- en: In your email inbox, open the Netlify email and then click on the **Verify email**
    button. At this point, a new window will open, and you will be able to log in
    with the recently registered email and password.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的电子邮件收件箱中，打开Netlify的电子邮件，然后点击**验证电子邮件**按钮。此时，将打开一个新窗口，您将能够使用最近注册的电子邮件和密码登录。
- en: Here, you can complete the login form with your email address and the password
    you chose at step 3\. After that, click on the Log in button to be redirected
    to the main window of the Netlify platform.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，您可以使用您在第3步选择的电子邮件地址和密码填写登录表单。之后，点击登录按钮，将被重定向到Netlify平台的主窗口。
- en: Finally, you will find yourself at the main screen of the Netlify platform,
    with a blank page to begin deployment on the platform.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，您将发现自己在Netlify平台的主屏幕上，有一个空白页面可以开始在平台上部署。
- en: How it works...
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we learned how to create our account on Netlify. We saw that
    it is possible to do this with various OAuth methods and the basic email that
    we used in the recipe.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们学习了如何在Netlify上创建我们的账户。我们看到可以使用各种OAuth方法和我们在教程中使用的基本电子邮件来实现这一点。
- en: The email address creation process involves defining the email address that
    will be used and a password for the account, verifying the account email. Then,
    you can log in to the platform.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 电子邮件地址创建过程涉及定义将要使用的电子邮件地址和账户密码，验证账户电子邮件。然后，您可以登录到平台。
- en: See also
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Find out more information about Netlify at [https://docs.netlify.com/](https://docs.netlify.com/).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://docs.netlify.com/](https://docs.netlify.com/)找到更多关于Netlify的信息。
- en: Preparing your application for deployment in Netlify
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为在Netlify中部署应用程序做准备
- en: To start the deployment process, we need to configure our project to have a
    valid Netlify deployment schema. In this recipe, you will learn how to set up
    the Netlify deployment schema on any Vue-based application.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始部署过程，我们需要配置我们的项目以具有有效的Netlify部署模式。在这个食谱中，您将学习如何在任何基于Vue的应用程序上设置Netlify部署模式。
- en: Getting ready
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 做好准备
- en: 'The prerequisites for this recipe are as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱的先决条件如下：
- en: Node.js 12+
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node.js 12+
- en: A Vue project
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Vue项目
- en: 'The Node.js global objects that are required are as follows:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 所需的Node.js全局对象如下：
- en: '`@vue/cli`'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@vue/cli`'
- en: '`@vue/cli-service-global`'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@vue/cli-service-global`'
- en: How to do it...
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'In this recipe, we will learn how to prepare our application to be deployed
    to Netlify:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们将学习如何准备我们的应用程序以部署到Netlify：
- en: 'Open your Vue project and open the `package.json` file. Check whether you have
    the `build` script defined, as in the following example:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的Vue项目并打开`package.json`文件。检查是否已定义`build`脚本，如下例所示：
- en: '[PRE9]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Open Terminal (macOS or Linux) or Command Prompt/PowerShell (Windows) and execute the
    following command:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Terminal（macOS或Linux）或Command Prompt/PowerShell（Windows）并执行以下命令：
- en: '[PRE10]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Make sure your application `build` script creates a `dist` folder in the main
    folder.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您的应用程序的`build`脚本在主文件夹中创建一个`dist`文件夹。
- en: 'If your `vue-router` is defined to work with history mode, you have to create
    a `_redirects` file in the `public` folder. In this file, you need to add the
    instruction to the Netlify router:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的`vue-router`被定义为与历史模式一起工作，您必须在`public`文件夹中创建一个`_redirects`文件。在这个文件中，您需要添加指示给Netlify路由器的指令：
- en: '[PRE11]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Publish your application to a GitHub repository. Don't worry about the build
    folder, because it's already declared on the `.gitignore` file and it won't be
    sent to your repository.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的应用程序发布到GitHub存储库。不用担心构建文件夹，因为它已经在`.gitignore`文件中声明，并且不会发送到您的存储库。
- en: How it works...
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: In this recipe, we learned how to check and prepare our application for the
    Netlify deployment.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们学习了如何检查和准备我们的应用程序进行Netlify部署。
- en: To make the deployment work, we needed to make sure that we have the `build`
    command in the script section at `package.json`, and verify that the build destination
    is the `dist` folder.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使部署工作，我们需要确保在`package.json`的脚本部分中有`build`命令，并验证构建目标是`dist`文件夹。
- en: Finally, we created a `_redirects` file in the public folder to instruct the
    Netlify router to understand the vue-router history mode.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们在public文件夹中创建了一个`_redirects`文件，以指示Netlify路由器理解vue-router的历史模式。
- en: See also
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Find out more information about the official Vue-CLI documentation on Netlify
    deployment at [https://cli.vuejs.org/guide/deployment.html#netlify](https://cli.vuejs.org/guide/deployment.html#netlify).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://cli.vuejs.org/guide/deployment.html#netlify](https://cli.vuejs.org/guide/deployment.html#netlify)上查找有关Netlify部署的官方Vue-CLI文档的更多信息。
- en: Find out more information about Netlify router rewrites at [https://docs.netlify.com/routing/redirects/rewrites-proxies/#history-pushstate-and-single-page-apps](https://docs.netlify.com/routing/redirects/rewrites-proxies/#history-pushstate-and-single-page-apps).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://docs.netlify.com/routing/redirects/rewrites-proxies/#history-pushstate-and-single-page-apps](https://docs.netlify.com/routing/redirects/rewrites-proxies/#history-pushstate-and-single-page-apps)上查找有关Netlify路由器重写的更多信息。
- en: Preparing for automatic deployment on Netlify with GitHub
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为在GitHub上自动部署到Netlify做准备
- en: It's time to prepare the ground for deployment. In this recipe, you will learn
    how to set up the Netlify deployment process to fetch your application automatically
    on GitHub and deploy it.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候为部署做准备了。在这个食谱中，您将学习如何设置Netlify部署过程，以便在GitHub上自动获取并部署您的应用程序。
- en: Getting ready
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 做好准备
- en: 'The prerequisites for this recipe are as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱的先决条件如下：
- en: A Netlify account
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Netlify账户
- en: A Vue project
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Vue项目
- en: A GitHub account
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个GitHub账户
- en: How to do it...
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'Finally, following the creation of your Netlify account, having published your
    project on a GitHub repository, and having configured everything, it''s time to
    prepare the Netlify platform to perform automatic deployment on each GitHub push:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在创建Netlify帐户，将项目发布到GitHub存储库并配置所有内容之后，现在是时候准备Netlify平台以在每次GitHub推送时执行自动部署了：
- en: Go to Netlify ([https://www.netlify.com/](https://www.netlify.com/)), sign in,
    and open your initial dashboard. There, you will find a New site from Git button.
    You will be redirected to the Create new site page.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到Netlify（[https://www.netlify.com/](https://www.netlify.com/)），登录并打开您的初始仪表板。在那里，您会找到一个来自Git的新站点按钮。您将被重定向到创建新站点页面。
- en: Now you may click on the GitHub button to open a new window for the Netlify
    authorization on GitHub and continue the process there.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以单击GitHub按钮打开一个新窗口，以在GitHub上进行Netlify授权并在那里继续该过程。
- en: Sign in with your GitHub account and then you will be redirected to the Application
    install page.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您的GitHub帐户登录，然后您将被重定向到应用程序安装页面。
- en: On this page, you can choose to give access to Netlify to all of your repositories
    or just the selected one, but make sure you make available the repository of your
    application.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此页面上，您可以选择向Netlify提供对所有存储库的访问权限，或仅选择的存储库，但请确保使您的应用程序的存储库可用。
- en: When you finish the installation of Netlify on GitHub, the repository that you
    gave access to in the previous step will be available to be selected on the Netlify
    platform. Choose the one that contains your application.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在GitHub上完成Netlify的安装后，您在上一步中授予访问权限的存储库将可以在Netlify平台上选择。选择包含您的应用程序的存储库。
- en: To finish the creation process, you need to select the branch that will be used
    for auto-deployment. Then, you need to fill up the build command used on the application,
    in our case, `npm run build`. Open the folder that will contain the built files,
    in our case, this is the `dist` folder, and click on the Deploy site button.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成创建过程，您需要选择用于自动部署的分支。然后，您需要填写应用程序中使用的构建命令，在我们的情况下是`npm run build`。打开包含构建文件的文件夹，在我们的情况下是`dist`文件夹，并单击“部署站点”按钮。
- en: Finally, the Netlify-CLI will start the building process and publish your application
    when the build is finished without any errors.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，Netlify-CLI将启动构建过程，并在构建完成且没有任何错误时发布您的应用程序。
- en: How it works...
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The Netlify platform connects to your GitHub account and installs as an application,
    giving access to selected repositories. Then, on the platform, you can select
    the repository that you want to use to deploy. With the repository selected, we
    needed to configure the Netlify-CLI with the build instructions and the built
    destination folder. Finally, the CLI runs, and we have our application up and
    running on the web.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: Netlify平台连接到您的GitHub帐户并安装为应用程序，从而可以访问选定的存储库。然后，在平台上，您可以选择要用于部署的存储库。选择存储库后，我们需要使用构建说明和构建目标文件夹配置Netlify-CLI。最后，CLI运行，我们的应用程序就可以在网络上运行了。
- en: See also
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Find out more information about advanced Netlify deployments at [https://docs.netlify.com/configure-builds/file-based-configuration/](https://docs.netlify.com/configure-builds/file-based-configuration/).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://docs.netlify.com/configure-builds/file-based-configuration/](https://docs.netlify.com/configure-builds/file-based-configuration/)上查找有关高级Netlify部署的更多信息。
- en: Creating a Vercel account
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Vercel帐户
- en: Vercel is a famous platform for deploying your application on the web. With
    Vercel, you can automate the deployment process with GitHub, GitLab, and BitBucket.
    In this recipe, we will learn how to create our account on the Vercel platform.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Vercel是一个著名的平台，用于在网络上部署您的应用程序。使用Vercel，您可以自动化与GitHub、GitLab和BitBucket的部署过程。在本教程中，我们将学习如何在Vercel平台上创建我们的帐户。
- en: Getting ready
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'The prerequisite for this recipe is just one of the following options:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这个教程的先决条件只是以下选项之一：
- en: A GitHub account
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个GitHub账户
- en: A GitLab account
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个GitLab账户
- en: A BitBucket account
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个BitBucket账户
- en: How to do it...
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let''s start our journey on the Vercel platform. Here, we will learn how to
    create our account on the platform to start our project deployment:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始在Vercel平台上的旅程。在这里，我们将学习如何在平台上创建我们的账户以开始我们的项目部署：
- en: Open the Vercel website ([https://vercel.com/](https://vercel.com/)) and click
    on the Sign Up button on the top bar. You will be redirected to the Sign Up page.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Vercel网站（[https://vercel.com/](https://vercel.com/)），并点击顶部栏的注册按钮。您将被重定向到注册页面。
- en: Here, you have the option to select one of these repository managers – GitHub,
    GitLab, or BitBucket. We will continue by clicking on the **GitHub** button. After
    choosing the sign-up method, you will be redirected to the authorization page.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，您可以选择这些存储库管理器中的一个 - GitHub、GitLab或BitBucket。我们将继续点击**GitHub**按钮。选择注册方法后，您将被重定向到授权页面。
- en: On this page, you are giving access to the Vercel platform to access the information
    on your account. By clicking on the **Authorize** button, you will be redirected
    back to the Vercel dashboard.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此页面上，您正在授权Vercel平台访问您账户上的信息。点击**授权**按钮后，您将被重定向回Vercel仪表板。
- en: Finally, you have your Vercel account created and ready to be used.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，您已经创建了Vercel账户，并准备好使用。
- en: How it works...
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we entered the Vercel platform, and signed up to it using a
    repository manager. We were able to create our account, and can now start the
    deployment process on the platform through repository integration or the CLI tool.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们进入了Vercel平台，并使用存储库管理器注册了它。我们能够创建我们的账户，并且现在可以通过存储库集成或CLI工具在平台上开始部署过程。
- en: See also
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: You can find out more information about Vercel at [https://vercel.com/](https://vercel.com/).
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://vercel.com/](https://vercel.com/)找到有关Vercel的更多信息。
- en: Configuring the Vercel-CLI and deploying your project
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置Vercel-CLI并部署您的项目
- en: You have created a Vercel account. Now it's time to configure the Vercel-CLI
    on your project, so it's available on the Vercel platform and on the web.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经创建了一个Vercel账户。现在是时候在您的项目上配置Vercel-CLI，以便它可以在Vercel平台和Web上使用。
- en: Getting ready
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The prerequisites for this recipe are as follows:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这个教程的先决条件如下：
- en: A Vercel account
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Vercel账户
- en: A Vue project
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Vue项目
- en: Node.js 12+
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node.js 12+
- en: 'The Node.js global objects that are required are as follows:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 所需的Node.js全局对象如下：
- en: '`@vue/cli`'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@vue/cli`'
- en: '`@vue/cli-service-global`'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@vue/cli-service-global`'
- en: '`vercel`'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vercel`'
- en: 'To install `vercel`, you need to open Terminal (macOS or Linux) or Command
    Prompt/PowerShell (Windows) and execute the following command:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装`vercel`，您需要打开终端（macOS或Linux）或命令提示符/PowerShell（Windows），并执行以下命令：
- en: '[PRE12]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: How to do it...
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In this recipe, we will learn how to link our project to the Vercel platform
    through the Vercel-CLI and then deploy the platform with it:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将学习如何通过Vercel-CLI将我们的项目链接到Vercel平台，然后使用它部署平台：
- en: 'Open your Vue project and then open the `package.json` file. Check whether
    you have the `build` script defined, as in the following example:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的Vue项目，然后打开`package.json`文件。检查您是否定义了`build`脚本，如下例所示：
- en: '[PRE13]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Make sure your application build script creates a `dist` folder in the main
    folder.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您的应用构建脚本在主文件夹中创建一个`dist`文件夹。
- en: 'In your `project` folder, open Terminal (macOS or Linux) or Command Prompt/PowerShell (Windows)
    and execute the following command:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的`project`文件夹中，打开终端（macOS或Linux）或命令提示符/PowerShell（Windows），并执行以下命令：
- en: '[PRE14]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This will prompt you for a login to the Vercel platform:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这将提示您登录Vercel平台：
- en: '[PRE15]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Enter the email address that is linked to the repository manager that you have
    used to sign in to Vercel. You will receive an email with a Verify button; click
    on it to verify your email address:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入与您用于登录Vercel的仓库管理器相关联的电子邮件地址。您将收到一封带有“验证”按钮的电子邮件；点击它以验证您的电子邮件地址：
- en: Once your email is verified, you are able to deploy applications in your Terminal
    with the `> vercel` command.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您的电子邮件地址得到验证，您就可以使用`> vercel`命令在您的终端中部署应用程序。
- en: 'To deploy your application to the web, we need to execute the `> vercel` command
    in the `project` folder, and it will ask some questions about the project settings
    prior to deployment. The first question will relate to the project path:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将应用程序部署到网络上，我们需要在`project`文件夹中执行`> vercel`命令，并且在部署之前它会询问一些关于项目设置的问题。第一个问题将涉及项目路径：
- en: '[PRE16]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now it will ask for the scope that will deploy the project. This is used when
    you have multiple account access options defined under the same username. In most
    of the scenarios, it will only have one, and you can press *Enter*:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在它将要求您定义将部署项目的范围。当您在同一用户名下定义了多个帐户访问选项时使用。在大多数情况下，它只会有一个，您可以按*Enter*：
- en: '[PRE17]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Then, it will ask to link to an existing project on Vercel. In our case, this
    is a brand new project, so we will choose `n`:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，它将要求链接到Vercel上的现有项目。在我们的情况下，这是一个全新的项目，所以我们将选择`n`：
- en: '[PRE18]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'You will be asked to define the project''s name (only lowercase alphanumeric
    characters and hyphens are allowed):'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将被要求定义项目的名称（只允许小写字母数字字符和连字符）：
- en: '[PRE19]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'You now need to define the location of the source code of the project. This
    location is where the `package.json` file is located; in our case, this will be
    the `./` folder, or the main project folder:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在需要定义项目源代码的位置。此位置是`package.json`文件所在的位置；在我们的情况下，这将是`./`文件夹，或者主项目文件夹：
- en: '[PRE20]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Vercel-CLI will detect that the project is a Vue-CLI project, and will automatically
    define all the commands and directory settings for the deployment of the application.
    We will choose `n` in our case:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Vercel-CLI将检测到项目是一个Vue-CLI项目，并将自动定义所有用于部署应用程序的命令和目录设置。在我们的情况下，我们将选择`n`。
- en: '[PRE21]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Once everything is set up, the CLI will deploy the first preview of your application,
    and you will receive a link to access the preview of your application. To deploy
    your application as production-ready, you need to open Terminal (macOS or Linux)
    or Command Prompt/PowerShell (Windows) and execute the following command:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一切设置完成后，CLI将部署应用程序的第一个预览，并将发送一个链接以访问应用程序的预览。要将应用程序部署为生产就绪状态，您需要在Terminal（macOS或Linux）或Command
    Prompt/PowerShell（Windows）中执行以下命令：
- en: '[PRE22]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: How it works...
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we learned how to connect the Vercel-CLI to the online platform
    with the email address that is linked to the repository manager, and set up project
    deployment.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们学习了如何将Vercel-CLI连接到与仓库管理器相关联的电子邮件地址的在线平台，并设置项目部署。
- en: In this process, we learned how to configure the advanced options of the CLI
    by defining the project settings for the build commands, distribution folder,
    and development command.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个过程中，我们学习了如何通过定义构建命令、分发文件夹和开发命令来配置CLI的高级选项。
- en: Finally, we were able to get the preview URL of our project before deploying
    it to production.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们能够在将项目部署到生产环境之前获得项目的预览URL。
- en: See also
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: You can find out more information about the Vercel-CLI at [https://vercel.com/docs/cli?query=CLI#getting-started](https://vercel.com/docs/cli?query=CLI#getting-started).
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://vercel.com/docs/cli?query=CLI#getting-started](https://vercel.com/docs/cli?query=CLI#getting-started)找到有关Vercel-CLI的更多信息。
- en: You can find out more information about Vercel advanced configurations at [https://vercel.com/docs/configuration?query=now.json#introduction/configuration-reference](https://vercel.com/docs/configuration?query=now.json#introduction/configuration-reference).
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://vercel.com/docs/configuration?query=now.json#introduction/configuration-reference](https://vercel.com/docs/configuration?query=now.json#introduction/configuration-reference)找到有关Vercel高级配置的更多信息。
- en: Preparing for automatic deployment on Vercel with GitHub
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备在GitHub上使用Vercel进行自动部署
- en: We learned in the previous recipe how to use the Vercel-CLI to deploy our application
    to the web using your local terminal, but it is possible to integrate the repository
    manager with the Vercel platform and deploy automatically through any push or
    open pull requests. That's what we will do in this recipe.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个教程中，我们学习了如何使用Vercel-CLI将我们的应用程序部署到网络上，使用您的本地终端，但是可以将存储库管理器与Vercel平台集成，并通过任何推送或打开拉取请求自动部署。这就是我们将在这个教程中做的事情。
- en: Getting ready
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The prerequisites for this recipe are as follows:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程的先决条件如下：
- en: A Vercel account
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vercel帐户
- en: A Vue project on a repository manager
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储库管理器上的Vue项目
- en: How to do it...
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In this recipe, we will learn how to integrate the Vercel platform with the
    repository manager and make an automatic deployment:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将学习如何将Vercel平台与存储库管理器集成，并进行自动部署：
- en: Open your Vercel dashboard ([https://vercel.com/dashboard](https://vercel.com/dashboard))
    and click on the Import Project button.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的Vercel仪表板（[https://vercel.com/dashboard](https://vercel.com/dashboard)）并点击导入项目按钮。
- en: On the Import Project page, click on the **Continue** button inside the From
    Git Repository card.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在导入项目页面上，点击**继续**按钮，位于来自Git存储库卡内。
- en: Now, the Vercel website will ask whether the user who holds the repository of
    the project you are importing is your personal account. Click **Yes** if it is.
    If it isn't, Vercel will fork the project into your personal account before starting
    the process.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，Vercel网站将询问持有您要导入的项目的存储库的用户是否是您的个人帐户。如果是，请点击**是**。如果不是，Vercel将在开始该过程之前将该项目分叉到您的个人帐户。
- en: Then, Vercel will ask which account you want to bind the project to. In our
    case, this will be our personal account. Select it, and click on the **Continue**
    button.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，Vercel将询问您要将项目绑定到哪个帐户。在我们的情况下，这将是我们的个人帐户。选择它，然后点击**继续**按钮。
- en: You will be redirected to the GitHub web page, to give Vercel access to your
    repositories. You can give access to all your repositories, or just the ones you
    want to deploy. In our case, we will give access to all the repositories on our
    account.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将被重定向到GitHub网页，以授予Vercel对您的存储库的访问权限。您可以授予对所有存储库的访问权限，或者只是您想要部署的存储库。在我们的情况下，我们将授予对我们帐户上所有存储库的访问权限。
- en: After installing the Vercel application on your GitHub account, you will be
    sent back to the Vercel web page. Here, you can define the settings for the project
    you are creating, including the project name, the preset you are using, build
    instructions, and environment variables. Vercel will automatically detect that
    our project is a Vue-CLI project and will configure the build and deployment settings
    for us. Then, click on the **Deploy** button to continue.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的GitHub帐户上安装Vercel应用程序后，您将被发送回Vercel网页。在这里，您可以定义您正在创建的项目的设置，包括项目名称、您正在使用的预设、构建说明和环境变量。Vercel将自动检测到我们的项目是一个Vue-CLI项目，并为我们配置构建和部署设置。然后，点击**部署**按钮继续。
- en: Vercel will start the first deployment process. When it's finished, Vercel will
    give you the link for the application, along with a link for you to open the dashboard.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Vercel将启动第一个部署过程。完成后，Vercel将为您提供应用程序的链接，以及一个打开仪表板的链接。
- en: How it works...
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The Vercel platform connects to your GitHub account and installs as an application,
    giving access to selected repositories. Then, on the platform, you can select
    the repository that you want to use to deploy.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: Vercel平台连接到您的GitHub帐户并安装为应用程序，从而可以访问选定的存储库。然后，在平台上，您可以选择要用于部署的存储库。
- en: With the repository selected, you need to configure the Vercel-CLI with the
    build instructions and the built destination folder.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 选择存储库后，您需要使用构建说明和构建目标文件夹配置Vercel-CLI。
- en: Finally, the CLI runs, and we have our application up and running on the web.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，CLI运行，我们的应用程序在Web上运行起来了。
- en: See also
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: Find out more information about Vercel integrations with Git repositories at [https://zeit.co/docs/v2/git-integrations](https://zeit.co/docs/v2/git-integrations).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://zeit.co/docs/v2/git-integrations](https://zeit.co/docs/v2/git-integrations)找到有关Vercel与Git存储库集成的更多信息。
- en: Creating a Firebase project
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Firebase项目
- en: Firebase is an all-in-one solution created by Google to help developers with
    dedicated tools for analytics, notifications, machine learning, and cloud solutions.
    One of the cloud solutions they provide is the hosting platform.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: Firebase是由Google创建的一体化解决方案，旨在为开发人员提供专用的分析、通知、机器学习和云解决方案工具。他们提供的云解决方案之一是托管平台。
- en: With the hosting platform, we are able to host our single-page applications
    in the Google cloud servers and have them available to everyone, through a global
    content delivery network.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 有了托管平台，我们可以在Google云服务器上托管我们的单页应用程序，并通过全球内容传送网络使其对所有人可用。
- en: Getting ready
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The prerequisites for this recipe are as follows:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 此处的先决条件如下：
- en: A Google account
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Google帐户
- en: A Vue project
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Vue项目
- en: How to do it...
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In this recipe, we will learn how to create our Firebase project so that we
    can deploy our application to the Firebase hosting:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将学习如何创建我们的Firebase项目，以便我们可以将我们的应用程序部署到Firebase托管：
- en: Open the Firebase home page ([https://firebase.google.com/](https://firebase.google.com/))
    and click on the **Sign In** link in the header menu. If you are already logged
    in to your Google account, click on the **Go to console** link.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Firebase主页（[https://firebase.google.com/](https://firebase.google.com)）并单击页眉菜单中的“登录”链接。如果您已经登录到您的Google帐户，请单击“转到控制台”链接。
- en: On the Console page, click on the **Create a project** button to create a new
    Firebase project.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在控制台页面上，单击“创建项目”按钮以创建新的Firebase项目。
- en: Firebase will ask for the project name (you can only use alphanumeric characters
    and spaces).
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Firebase将要求输入项目名称（您只能使用字母数字字符和空格）。
- en: Then, Firebase will ask whether you want to enable Google Analytics in this
    project. In our case, we will disable this option.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，Firebase会询问您是否要在此项目中启用Google Analytics。在我们的情况下，我们将禁用此选项。
- en: Finally, you will be redirected to the project overview dashboard.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，您将被重定向到项目概览仪表板。
- en: How it works...
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we created our first Firebase project. To do it, we started
    by signing in to our Google account and going to the Firebase console. On the
    Firebase console, we created a new project, and in the setup wizard steps, we
    disabled the Google Analytics options because we won't be using attached analytics
    in this recipe. Finally, when we finished the setup wizard, our project was ready.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们创建了我们的第一个Firebase项目。为此，我们首先登录到我们的Google帐户并转到Firebase控制台。在Firebase控制台上，我们创建了一个新项目，并在设置向导步骤中禁用了Google
    Analytics选项，因为我们在这个教程中不会使用附加的分析。最后，当我们完成设置向导时，我们的项目已经准备就绪。
- en: See also
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: Find out more information about Google Firebase at [https://firebase.google.com](https://firebase.google.com).
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://firebase.google.com](https://firebase.google.com)找到有关Google Firebase的更多信息。
- en: Configuring the Firebase-CLI and deploying your project
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置Firebase-CLI并部署您的项目
- en: To deploy our application to Firebase Hosting, we need to use the Firebase-CLI.
    The CLI will help with the process of packing the files and sending them to the
    Google Cloud server.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 要将我们的应用程序部署到Firebase Hosting，我们需要使用Firebase-CLI。CLI将帮助打包文件并将它们发送到Google Cloud服务器的过程。
- en: In this recipe, we will learn how to configure the Firebase-CLI to deploy your
    application to the web using your local terminal.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，我们将学习如何配置Firebase-CLI以使用本地终端将应用程序部署到网络。
- en: Getting ready
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The prerequisites for this recipe are as follows:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 本配方的先决条件如下：
- en: A Google account
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Google帐户
- en: A Vue project
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Vue项目
- en: A Firebase project
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Firebase项目
- en: Node.js 12+
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node.js 12+
- en: 'The Node.js global objects that are required are as follows:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 所需的Node.js全局对象如下：
- en: '`@vue/cli`'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@vue/cli`'
- en: '`@vue/cli-service-global`'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@vue/cli-service-global`'
- en: '`firebase-tools`'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`firebase-tools`'
- en: 'To install `firebase-tools`, you need to open Terminal (macOS or Linux) or
    Command Prompt/PowerShell (Windows) and execute the following command:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 安装`firebase-tools`，您需要打开终端（macOS或Linux）或命令提示符/PowerShell（Windows）并执行以下命令：
- en: '[PRE23]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: How to do it...
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In this recipe, we will learn how to set up the Firebase-CLI on our project,
    and how to initialize it with our project created during the previous recipe:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，我们将学习如何在我们的项目中设置Firebase-CLI，并如何使用上一个配方中创建的项目对其进行初始化：
- en: 'Open Terminal (macOS or Linux) or Command Prompt/PowerShell (Windows) and execute the
    following command on the root folder of your project:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目的根文件夹中打开终端（macOS或Linux）或命令提示符/PowerShell（Windows）并执行以下命令：
- en: '[PRE24]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The Firebase-CLI will open a browser window so you can log in to your Google
    account, and give access on the part of the Firebase-CLI to your Google Account. (If
    the browser doesn't open automatically, a link will appear on the Firebase-CLI,
    copy the link, and then paste it into your browser to continue.)
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Firebase-CLI将打开一个浏览器窗口，以便您登录到您的Google帐户，并允许Firebase-CLI访问您的Google帐户的部分。（如果浏览器没有自动打开，Firebase-CLI上会出现一个链接，复制链接，然后粘贴到浏览器中继续。）
- en: 'Open Terminal (macOS or Linux) or Command Prompt/PowerShell (Windows) and execute the
    following command on the root folder of your project:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目的根文件夹中打开终端（macOS或Linux）或命令提示符/PowerShell（Windows）并执行以下命令：
- en: '[PRE25]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now we are initializing the configuration process of the CLI with our project.
    For the first question of the CLI, we are going to use just the **Hosting** feature,
    so we need to select just `Hosting`:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们正在使用我们的项目初始化CLI的配置过程。对于CLI的第一个问题，我们将只使用**Hosting**功能，因此我们需要只选择`Hosting`：
- en: '[PRE26]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Then, the CLI will ask which Firebase project we want to use. In our case,
    we created the project earlier in the previous recipe, so we will select `Use
    an existing project`:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，CLI将询问我们要使用哪个Firebase项目。在我们的情况下，我们在上一个配方中早些时候创建了项目，因此我们将选择`使用现有项目`：
- en: '[PRE27]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Now a list of available projects on your account will appear. Select the one
    you want to use to deploy with this application:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在将显示您帐户上可用项目的列表。选择要与此应用程序一起部署的项目：
- en: '[PRE28]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The CLI will ask about the public directory of the application, or in our case,
    because it''s a single-page application, we need to use the build destination
    folder. Type the name of the destination folder, in our case it''s `dist`:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CLI将询问应用程序的公共目录，或者在我们的情况下，因为它是单页面应用程序，我们需要使用构建目标文件夹。键入目标文件夹的名称，在我们的情况下是`dist`：
- en: '[PRE29]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Finally, the last step in the process is to select whether we want to use the
    configuration as a single-page application. Type `y` to enable rewrites of all
    the URLs to `index.html` so we can use the history mode of `vue-router`:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，过程中的最后一步是选择是否要将配置用作单页面应用程序。键入`y`以启用所有URL的重写为`index.html`，以便我们可以使用`vue-router`的历史模式：
- en: '[PRE30]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Open the `package.json` file on the root directory of your project, and add
    a new script to automate the build and deployment process:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开项目根目录下的`package.json`文件，并添加一个新的脚本来自动化构建和部署过程：
- en: '[PRE31]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Open Terminal (macOS or Linux) or Command Prompt/PowerShell (Windows) and execute the
    following command on the root folder of your project:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端（macOS或Linux）或命令提示符/PowerShell（Windows），并在项目的根目录下执行以下命令：
- en: '[PRE32]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Now your project is deployed and available on the web, and the CLI will give
    you the links to access it:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您的项目已经部署并可以在网络上访问，CLI将为您提供访问链接：
- en: '![](assets/ae1dd54b-f854-42d2-a206-7d58799dc231.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ae1dd54b-f854-42d2-a206-7d58799dc231.png)'
- en: How it works...
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: In this recipe, we learned how to configure the Firebase CLI and to deploy our
    application.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们学习了如何配置Firebase CLI并部署我们的应用程序。
- en: First, we installed the Firebase-CLI and signed in to the Google authentication
    platform. Then, we were able to initialize the CLI in our project folder.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们安装了Firebase-CLI并登录到Google身份验证平台。然后，我们能够在项目文件夹中初始化CLI。
- en: In the process, we selected the project we created in the previous recipe and
    pointed the building folder to the corrected one on a Vue-CLI project.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个过程中，我们选择了在上一个教程中创建的项目，并将构建文件夹指向Vue-CLI项目中的正确文件夹。
- en: Then, we configured that we want to use a single-page application router structure,
    and added a deployment script to `package.json`. Finally, we were able to deploy
    our application and make it available to everyone.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们配置了要使用单页面应用程序路由结构，并向`package.json`添加了部署脚本。最后，我们能够部署我们的应用程序并使其对所有人可用。
- en: See also
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Find out more information about Firebase Hosting at [https://firebase.google.com/docs/hosting](https://firebase.google.com/docs/hosting).
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://firebase.google.com/docs/hosting](https://firebase.google.com/docs/hosting)上找到有关Firebase
    Hosting的更多信息。
